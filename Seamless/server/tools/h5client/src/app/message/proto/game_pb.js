/**
 * @fileoverview
 * @enhanceable
 * @suppress {messageConventions} JS Compiler reports an error if a variable or
 *     field starts with 'MSG_' and isn't a translatable message.
 * @public
 */
// GENERATED CODE -- DO NOT EDIT!

var jspb = require('google-protobuf');
var goog = jspb;
var global = Function('return this')();

goog.exportSymbol('proto.protoMsg.AnnuonceInfo', null, global);
goog.exportSymbol('proto.protoMsg.AttackReq', null, global);
goog.exportSymbol('proto.protoMsg.BackPackProp', null, global);
goog.exportSymbol('proto.protoMsg.BarrierData', null, global);
goog.exportSymbol('proto.protoMsg.BarrierList', null, global);
goog.exportSymbol('proto.protoMsg.BattleFlow', null, global);
goog.exportSymbol('proto.protoMsg.BattleItemFlow', null, global);
goog.exportSymbol('proto.protoMsg.BattleResult', null, global);
goog.exportSymbol('proto.protoMsg.BodyProp', null, global);
goog.exportSymbol('proto.protoMsg.BulletHoleReq', null, global);
goog.exportSymbol('proto.protoMsg.CampFlow', null, global);
goog.exportSymbol('proto.protoMsg.CareerBase', null, global);
goog.exportSymbol('proto.protoMsg.CareerData', null, global);
goog.exportSymbol('proto.protoMsg.CellChangeNotify', null, global);
goog.exportSymbol('proto.protoMsg.CellInfoReq', null, global);
goog.exportSymbol('proto.protoMsg.CellInfoRet', null, global);
goog.exportSymbol('proto.protoMsg.ChangeBulletReq', null, global);
goog.exportSymbol('proto.protoMsg.ChangeBulletRet', null, global);
goog.exportSymbol('proto.protoMsg.ChatFlow', null, global);
goog.exportSymbol('proto.protoMsg.ChatNotify', null, global);
goog.exportSymbol('proto.protoMsg.ChracterMapDataInfo', null, global);
goog.exportSymbol('proto.protoMsg.CreateSpaceReq', null, global);
goog.exportSymbol('proto.protoMsg.CreateSpaceRet', null, global);
goog.exportSymbol('proto.protoMsg.DamageDefend', null, global);
goog.exportSymbol('proto.protoMsg.DayRecordData', null, global);
goog.exportSymbol('proto.protoMsg.DayTag', null, global);
goog.exportSymbol('proto.protoMsg.DelMail', null, global);
goog.exportSymbol('proto.protoMsg.DieNotifyRet', null, global);
goog.exportSymbol('proto.protoMsg.DoSendItemReq', null, global);
goog.exportSymbol('proto.protoMsg.DoorData', null, global);
goog.exportSymbol('proto.protoMsg.DoorList', null, global);
goog.exportSymbol('proto.protoMsg.DropGunNotify', null, global);
goog.exportSymbol('proto.protoMsg.ExchangeGunRet', null, global);
goog.exportSymbol('proto.protoMsg.FriendApplyInfo', null, global);
goog.exportSymbol('proto.protoMsg.FriendInfo', null, global);
goog.exportSymbol('proto.protoMsg.FriendRankInfo', null, global);
goog.exportSymbol('proto.protoMsg.GameSvrState', null, global);
goog.exportSymbol('proto.protoMsg.GetMailObj', null, global);
goog.exportSymbol('proto.protoMsg.GuideFlow', null, global);
goog.exportSymbol('proto.protoMsg.GunFlow', null, global);
goog.exportSymbol('proto.protoMsg.GunReformReq', null, global);
goog.exportSymbol('proto.protoMsg.GunReformUnequipReq', null, global);
goog.exportSymbol('proto.protoMsg.HeadProp', null, global);
goog.exportSymbol('proto.protoMsg.InitAnnuonceInfoRet', null, global);
goog.exportSymbol('proto.protoMsg.InitRoomTeamInfoRet', null, global);
goog.exportSymbol('proto.protoMsg.InitRoomTeamPlayerItem', null, global);
goog.exportSymbol('proto.protoMsg.ItemProp', null, global);
goog.exportSymbol('proto.protoMsg.LiveFlow', null, global);
goog.exportSymbol('proto.protoMsg.LobboySceneMemberSlot', null, global);
goog.exportSymbol('proto.protoMsg.LogItem', null, global);
goog.exportSymbol('proto.protoMsg.MailInfo', null, global);
goog.exportSymbol('proto.protoMsg.MailObject', null, global);
goog.exportSymbol('proto.protoMsg.MapCharacterResultNotify', null, global);
goog.exportSymbol('proto.protoMsg.MatchFlow', null, global);
goog.exportSymbol('proto.protoMsg.MatchRecord', null, global);
goog.exportSymbol('proto.protoMsg.MemVoiceInfo', null, global);
goog.exportSymbol('proto.protoMsg.MoneyFlow', null, global);
goog.exportSymbol('proto.protoMsg.OperFlow', null, global);
goog.exportSymbol('proto.protoMsg.OwnGoodsInfo', null, global);
goog.exportSymbol('proto.protoMsg.OwnGoodsItem', null, global);
goog.exportSymbol('proto.protoMsg.PlatFriendState', null, global);
goog.exportSymbol('proto.protoMsg.PlatFriendStateReq', null, global);
goog.exportSymbol('proto.protoMsg.PlatFriendStateRet', null, global);
goog.exportSymbol('proto.protoMsg.PlayerLogin', null, global);
goog.exportSymbol('proto.protoMsg.PlayerLogout', null, global);
goog.exportSymbol('proto.protoMsg.PlayerRegister', null, global);
goog.exportSymbol('proto.protoMsg.RectInfo', null, global);
goog.exportSymbol('proto.protoMsg.RefreshBoxObjNotify', null, global);
goog.exportSymbol('proto.protoMsg.RefreshGunBulletNotify', null, global);
goog.exportSymbol('proto.protoMsg.RefreshGunNotify', null, global);
goog.exportSymbol('proto.protoMsg.RefreshObjectNotify', null, global);
goog.exportSymbol('proto.protoMsg.RefreshPackCellNotify', null, global);
goog.exportSymbol('proto.protoMsg.RemoveObjectNotify', null, global);
goog.exportSymbol('proto.protoMsg.ReportCellLoad', null, global);
goog.exportSymbol('proto.protoMsg.ReqChangeLobboySceneMemberSlot', null, global);
goog.exportSymbol('proto.protoMsg.ReqGetMailList', null, global);
goog.exportSymbol('proto.protoMsg.ReqMailInfo', null, global);
goog.exportSymbol('proto.protoMsg.RetMailInfo', null, global);
goog.exportSymbol('proto.protoMsg.RetMailList', null, global);
goog.exportSymbol('proto.protoMsg.RoundFlow', null, global);
goog.exportSymbol('proto.protoMsg.SecGameEndFlow', null, global);
goog.exportSymbol('proto.protoMsg.SecGameStartFlow', null, global);
goog.exportSymbol('proto.protoMsg.SettleDayData', null, global);
goog.exportSymbol('proto.protoMsg.SettleInfo', null, global);
goog.exportSymbol('proto.protoMsg.SettleMemInfo', null, global);
goog.exportSymbol('proto.protoMsg.ShareRMBMoney', null, global);
goog.exportSymbol('proto.protoMsg.ShootReq', null, global);
goog.exportSymbol('proto.protoMsg.ShopFlow', null, global);
goog.exportSymbol('proto.protoMsg.SnsFlow', null, global);
goog.exportSymbol('proto.protoMsg.SpaceLogInfo', null, global);
goog.exportSymbol('proto.protoMsg.SummonAINotify', null, global);
goog.exportSymbol('proto.protoMsg.SymcRoomTeamInfoRet', null, global);
goog.exportSymbol('proto.protoMsg.SyncFriendApplyList', null, global);
goog.exportSymbol('proto.protoMsg.SyncFriendList', null, global);
goog.exportSymbol('proto.protoMsg.SyncFriendRankList', null, global);
goog.exportSymbol('proto.protoMsg.SyncLobboySceneMembersSlotsInfo', null, global);
goog.exportSymbol('proto.protoMsg.SyncRoomTeamPlayerItem', null, global);
goog.exportSymbol('proto.protoMsg.SyncTeamInfoRet', null, global);
goog.exportSymbol('proto.protoMsg.T_Object', null, global);
goog.exportSymbol('proto.protoMsg.TeamMemberInfo', null, global);
goog.exportSymbol('proto.protoMsg.TeamVoiceInfo', null, global);
goog.exportSymbol('proto.protoMsg.ThrowDamageInfo', null, global);
goog.exportSymbol('proto.protoMsg.UseObjectReq', null, global);
goog.exportSymbol('proto.protoMsg.UserMainDataNotify', null, global);
goog.exportSymbol('proto.protoMsg.Vector3', null, global);
goog.exportSymbol('proto.protoMsg.VehicleDamagedWheels', null, global);
goog.exportSymbol('proto.protoMsg.VehiclePlayers', null, global);
goog.exportSymbol('proto.protoMsg.VehicleState', null, global);
goog.exportSymbol('proto.protoMsg.ZoneNotify', null, global);

/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.UserMainDataNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.UserMainDataNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.UserMainDataNotify.displayName = 'proto.protoMsg.UserMainDataNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.UserMainDataNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.UserMainDataNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.UserMainDataNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.UserMainDataNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    coins: jspb.Message.getField(msg, 3),
    diams: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.UserMainDataNotify}
 */
proto.protoMsg.UserMainDataNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.UserMainDataNotify;
  return proto.protoMsg.UserMainDataNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.UserMainDataNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.UserMainDataNotify}
 */
proto.protoMsg.UserMainDataNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCoins(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDiams(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.UserMainDataNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.UserMainDataNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.UserMainDataNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.UserMainDataNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.protoMsg.UserMainDataNotify.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.UserMainDataNotify.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.UserMainDataNotify.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.UserMainDataNotify.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protoMsg.UserMainDataNotify.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.UserMainDataNotify.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.UserMainDataNotify.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.UserMainDataNotify.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 coins = 3;
 * @return {number}
 */
proto.protoMsg.UserMainDataNotify.prototype.getCoins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.UserMainDataNotify.prototype.setCoins = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.UserMainDataNotify.prototype.clearCoins = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.UserMainDataNotify.prototype.hasCoins = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 diams = 4;
 * @return {number}
 */
proto.protoMsg.UserMainDataNotify.prototype.getDiams = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.UserMainDataNotify.prototype.setDiams = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.UserMainDataNotify.prototype.clearDiams = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.UserMainDataNotify.prototype.hasDiams = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.Vector3 = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.Vector3, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.Vector3.displayName = 'proto.protoMsg.Vector3';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.Vector3.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.Vector3.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.Vector3} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.Vector3.toObject = function(includeInstance, msg) {
  var f, obj = {
    x: jspb.Message.getOptionalFloatingPointField(msg, 1),
    y: jspb.Message.getOptionalFloatingPointField(msg, 2),
    z: jspb.Message.getOptionalFloatingPointField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.Vector3}
 */
proto.protoMsg.Vector3.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.Vector3;
  return proto.protoMsg.Vector3.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.Vector3} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.Vector3}
 */
proto.protoMsg.Vector3.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setX(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setY(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setZ(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.Vector3.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.Vector3.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.Vector3} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.Vector3.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeFloat(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeFloat(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
};


/**
 * optional float x = 1;
 * @return {number}
 */
proto.protoMsg.Vector3.prototype.getX = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.protoMsg.Vector3.prototype.setX = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.Vector3.prototype.clearX = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.Vector3.prototype.hasX = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional float y = 2;
 * @return {number}
 */
proto.protoMsg.Vector3.prototype.getY = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.protoMsg.Vector3.prototype.setY = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.Vector3.prototype.clearY = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.Vector3.prototype.hasY = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float z = 3;
 * @return {number}
 */
proto.protoMsg.Vector3.prototype.getZ = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.protoMsg.Vector3.prototype.setZ = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.Vector3.prototype.clearZ = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.Vector3.prototype.hasZ = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.T_Object = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.T_Object.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.T_Object, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.T_Object.displayName = 'proto.protoMsg.T_Object';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.T_Object.repeatedFields_ = [4];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.T_Object.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.T_Object.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.T_Object} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.T_Object.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseid: jspb.Message.getField(msg, 1),
    thisid: jspb.Message.getField(msg, 2),
    count: jspb.Message.getField(msg, 3),
    gunreformList: jspb.Message.getRepeatedField(msg, 4),
    bullet: jspb.Message.getField(msg, 5),
    reducedam: jspb.Message.getField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.T_Object}
 */
proto.protoMsg.T_Object.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.T_Object;
  return proto.protoMsg.T_Object.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.T_Object} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.T_Object}
 */
proto.protoMsg.T_Object.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setThisid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.addGunreform(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBullet(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReducedam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.T_Object.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.T_Object.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.T_Object} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.T_Object.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getGunreformList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional uint32 baseid = 1;
 * @return {number}
 */
proto.protoMsg.T_Object.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.T_Object.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.T_Object.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.T_Object.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 thisid = 2;
 * @return {number}
 */
proto.protoMsg.T_Object.prototype.getThisid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.T_Object.prototype.setThisid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.T_Object.prototype.clearThisid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.T_Object.prototype.hasThisid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 count = 3;
 * @return {number}
 */
proto.protoMsg.T_Object.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.T_Object.prototype.setCount = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.T_Object.prototype.clearCount = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.T_Object.prototype.hasCount = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * repeated uint32 gunreform = 4;
 * @return {!Array.<number>}
 */
proto.protoMsg.T_Object.prototype.getGunreformList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 4));
};


/** @param {!Array.<number>} value */
proto.protoMsg.T_Object.prototype.setGunreformList = function(value) {
  jspb.Message.setField(this, 4, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.protoMsg.T_Object.prototype.addGunreform = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 4, value, opt_index);
};


proto.protoMsg.T_Object.prototype.clearGunreformList = function() {
  this.setGunreformList([]);
};


/**
 * optional uint32 bullet = 5;
 * @return {number}
 */
proto.protoMsg.T_Object.prototype.getBullet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.T_Object.prototype.setBullet = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.T_Object.prototype.clearBullet = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.T_Object.prototype.hasBullet = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 reducedam = 6;
 * @return {number}
 */
proto.protoMsg.T_Object.prototype.getReducedam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.T_Object.prototype.setReducedam = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.T_Object.prototype.clearReducedam = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.T_Object.prototype.hasReducedam = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ChracterMapDataInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ChracterMapDataInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ChracterMapDataInfo.displayName = 'proto.protoMsg.ChracterMapDataInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ChracterMapDataInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ChracterMapDataInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChracterMapDataInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    level: jspb.Message.getField(msg, 3),
    pos: (f = msg.getPos()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    mvspeed: jspb.Message.getOptionalFloatingPointField(msg, 5),
    maxhp: jspb.Message.getField(msg, 6),
    hp: jspb.Message.getField(msg, 7),
    orientation: jspb.Message.getOptionalFloatingPointField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ChracterMapDataInfo}
 */
proto.protoMsg.ChracterMapDataInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ChracterMapDataInfo;
  return proto.protoMsg.ChracterMapDataInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ChracterMapDataInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ChracterMapDataInfo}
 */
proto.protoMsg.ChracterMapDataInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 4:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMvspeed(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxhp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHp(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setOrientation(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ChracterMapDataInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ChracterMapDataInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChracterMapDataInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 level = 3;
 * @return {number}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearLevel = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Vector3 pos = 4;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getPos = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 4));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setPos = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearPos = function() {
  this.setPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasPos = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float mvspeed = 5;
 * @return {number}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getMvspeed = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setMvspeed = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearMvspeed = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasMvspeed = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 maxhp = 6;
 * @return {number}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getMaxhp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setMaxhp = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearMaxhp = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasMaxhp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 hp = 7;
 * @return {number}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setHp = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearHp = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasHp = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float orientation = 8;
 * @return {number}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.getOrientation = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.protoMsg.ChracterMapDataInfo.prototype.setOrientation = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.ChracterMapDataInfo.prototype.clearOrientation = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChracterMapDataInfo.prototype.hasOrientation = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RefreshObjectNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RefreshObjectNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RefreshObjectNotify.displayName = 'proto.protoMsg.RefreshObjectNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RefreshObjectNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RefreshObjectNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RefreshObjectNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshObjectNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    obj: (f = msg.getObj()) && proto.protoMsg.T_Object.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RefreshObjectNotify}
 */
proto.protoMsg.RefreshObjectNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RefreshObjectNotify;
  return proto.protoMsg.RefreshObjectNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RefreshObjectNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RefreshObjectNotify}
 */
proto.protoMsg.RefreshObjectNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.T_Object;
      reader.readMessage(value,proto.protoMsg.T_Object.deserializeBinaryFromReader);
      msg.setObj(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RefreshObjectNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RefreshObjectNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RefreshObjectNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshObjectNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObj();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protoMsg.T_Object.serializeBinaryToWriter
    );
  }
};


/**
 * optional T_Object obj = 1;
 * @return {?proto.protoMsg.T_Object}
 */
proto.protoMsg.RefreshObjectNotify.prototype.getObj = function() {
  return /** @type{?proto.protoMsg.T_Object} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.T_Object, 1));
};


/** @param {?proto.protoMsg.T_Object|undefined} value */
proto.protoMsg.RefreshObjectNotify.prototype.setObj = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.protoMsg.RefreshObjectNotify.prototype.clearObj = function() {
  this.setObj(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshObjectNotify.prototype.hasObj = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.UseObjectReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.UseObjectReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.UseObjectReq.displayName = 'proto.protoMsg.UseObjectReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.UseObjectReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.UseObjectReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.UseObjectReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.UseObjectReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    thisid: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.UseObjectReq}
 */
proto.protoMsg.UseObjectReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.UseObjectReq;
  return proto.protoMsg.UseObjectReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.UseObjectReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.UseObjectReq}
 */
proto.protoMsg.UseObjectReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setThisid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.UseObjectReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.UseObjectReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.UseObjectReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.UseObjectReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 thisid = 1;
 * @return {number}
 */
proto.protoMsg.UseObjectReq.prototype.getThisid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.UseObjectReq.prototype.setThisid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.UseObjectReq.prototype.clearThisid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.UseObjectReq.prototype.hasThisid = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RemoveObjectNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RemoveObjectNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RemoveObjectNotify.displayName = 'proto.protoMsg.RemoveObjectNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RemoveObjectNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RemoveObjectNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RemoveObjectNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RemoveObjectNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    thisid: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RemoveObjectNotify}
 */
proto.protoMsg.RemoveObjectNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RemoveObjectNotify;
  return proto.protoMsg.RemoveObjectNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RemoveObjectNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RemoveObjectNotify}
 */
proto.protoMsg.RemoveObjectNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setThisid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RemoveObjectNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RemoveObjectNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RemoveObjectNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RemoveObjectNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 thisid = 1;
 * @return {number}
 */
proto.protoMsg.RemoveObjectNotify.prototype.getThisid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.RemoveObjectNotify.prototype.setThisid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.RemoveObjectNotify.prototype.clearThisid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RemoveObjectNotify.prototype.hasThisid = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RefreshGunNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RefreshGunNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RefreshGunNotify.displayName = 'proto.protoMsg.RefreshGunNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RefreshGunNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RefreshGunNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RefreshGunNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshGunNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    objs: (f = msg.getObjs()) && proto.protoMsg.T_Object.toObject(includeInstance, f),
    useweapon: jspb.Message.getField(msg, 2),
    uid: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RefreshGunNotify}
 */
proto.protoMsg.RefreshGunNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RefreshGunNotify;
  return proto.protoMsg.RefreshGunNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RefreshGunNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RefreshGunNotify}
 */
proto.protoMsg.RefreshGunNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.T_Object;
      reader.readMessage(value,proto.protoMsg.T_Object.deserializeBinaryFromReader);
      msg.setObjs(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUseweapon(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RefreshGunNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RefreshGunNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RefreshGunNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshGunNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getObjs();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protoMsg.T_Object.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
};


/**
 * optional T_Object objs = 1;
 * @return {?proto.protoMsg.T_Object}
 */
proto.protoMsg.RefreshGunNotify.prototype.getObjs = function() {
  return /** @type{?proto.protoMsg.T_Object} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.T_Object, 1));
};


/** @param {?proto.protoMsg.T_Object|undefined} value */
proto.protoMsg.RefreshGunNotify.prototype.setObjs = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.protoMsg.RefreshGunNotify.prototype.clearObjs = function() {
  this.setObjs(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshGunNotify.prototype.hasObjs = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 useweapon = 2;
 * @return {number}
 */
proto.protoMsg.RefreshGunNotify.prototype.getUseweapon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.RefreshGunNotify.prototype.setUseweapon = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.RefreshGunNotify.prototype.clearUseweapon = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshGunNotify.prototype.hasUseweapon = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 uid = 3;
 * @return {number}
 */
proto.protoMsg.RefreshGunNotify.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.RefreshGunNotify.prototype.setUid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.RefreshGunNotify.prototype.clearUid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshGunNotify.prototype.hasUid = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DropGunNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.DropGunNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DropGunNotify.displayName = 'proto.protoMsg.DropGunNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DropGunNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DropGunNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DropGunNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DropGunNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    use: (f = msg.getUse()) && proto.protoMsg.T_Object.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DropGunNotify}
 */
proto.protoMsg.DropGunNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DropGunNotify;
  return proto.protoMsg.DropGunNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DropGunNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DropGunNotify}
 */
proto.protoMsg.DropGunNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = new proto.protoMsg.T_Object;
      reader.readMessage(value,proto.protoMsg.T_Object.deserializeBinaryFromReader);
      msg.setUse(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DropGunNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DropGunNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DropGunNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DropGunNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getUse();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protoMsg.T_Object.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.protoMsg.DropGunNotify.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.DropGunNotify.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.DropGunNotify.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DropGunNotify.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional T_Object use = 2;
 * @return {?proto.protoMsg.T_Object}
 */
proto.protoMsg.DropGunNotify.prototype.getUse = function() {
  return /** @type{?proto.protoMsg.T_Object} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.T_Object, 2));
};


/** @param {?proto.protoMsg.T_Object|undefined} value */
proto.protoMsg.DropGunNotify.prototype.setUse = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.protoMsg.DropGunNotify.prototype.clearUse = function() {
  this.setUse(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DropGunNotify.prototype.hasUse = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ExchangeGunRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ExchangeGunRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ExchangeGunRet.displayName = 'proto.protoMsg.ExchangeGunRet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ExchangeGunRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ExchangeGunRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ExchangeGunRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ExchangeGunRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    useweapon: jspb.Message.getField(msg, 1),
    uid: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ExchangeGunRet}
 */
proto.protoMsg.ExchangeGunRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ExchangeGunRet;
  return proto.protoMsg.ExchangeGunRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ExchangeGunRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ExchangeGunRet}
 */
proto.protoMsg.ExchangeGunRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUseweapon(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ExchangeGunRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ExchangeGunRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ExchangeGunRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ExchangeGunRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 useweapon = 1;
 * @return {number}
 */
proto.protoMsg.ExchangeGunRet.prototype.getUseweapon = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ExchangeGunRet.prototype.setUseweapon = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ExchangeGunRet.prototype.clearUseweapon = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ExchangeGunRet.prototype.hasUseweapon = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 uid = 2;
 * @return {number}
 */
proto.protoMsg.ExchangeGunRet.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ExchangeGunRet.prototype.setUid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ExchangeGunRet.prototype.clearUid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ExchangeGunRet.prototype.hasUid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.GunReformReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.GunReformReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.GunReformReq.displayName = 'proto.protoMsg.GunReformReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.GunReformReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.GunReformReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.GunReformReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GunReformReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    reformthisid: jspb.Message.getField(msg, 1),
    gunthisid: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.GunReformReq}
 */
proto.protoMsg.GunReformReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.GunReformReq;
  return proto.protoMsg.GunReformReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.GunReformReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.GunReformReq}
 */
proto.protoMsg.GunReformReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setReformthisid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGunthisid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.GunReformReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.GunReformReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.GunReformReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GunReformReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint64 reformthisid = 1;
 * @return {number}
 */
proto.protoMsg.GunReformReq.prototype.getReformthisid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.GunReformReq.prototype.setReformthisid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.GunReformReq.prototype.clearReformthisid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunReformReq.prototype.hasReformthisid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 gunthisid = 2;
 * @return {number}
 */
proto.protoMsg.GunReformReq.prototype.getGunthisid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.GunReformReq.prototype.setGunthisid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.GunReformReq.prototype.clearGunthisid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunReformReq.prototype.hasGunthisid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.GunReformUnequipReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.GunReformUnequipReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.GunReformUnequipReq.displayName = 'proto.protoMsg.GunReformUnequipReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.GunReformUnequipReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.GunReformUnequipReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.GunReformUnequipReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GunReformUnequipReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    gunthisid: jspb.Message.getField(msg, 1),
    baseid: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.GunReformUnequipReq}
 */
proto.protoMsg.GunReformUnequipReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.GunReformUnequipReq;
  return proto.protoMsg.GunReformUnequipReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.GunReformUnequipReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.GunReformUnequipReq}
 */
proto.protoMsg.GunReformUnequipReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGunthisid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.GunReformUnequipReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.GunReformUnequipReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.GunReformUnequipReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GunReformUnequipReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 gunthisid = 1;
 * @return {number}
 */
proto.protoMsg.GunReformUnequipReq.prototype.getGunthisid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.GunReformUnequipReq.prototype.setGunthisid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.GunReformUnequipReq.prototype.clearGunthisid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunReformUnequipReq.prototype.hasGunthisid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 baseid = 2;
 * @return {number}
 */
proto.protoMsg.GunReformUnequipReq.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.GunReformUnequipReq.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.GunReformUnequipReq.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunReformUnequipReq.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.AttackReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.AttackReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.AttackReq.displayName = 'proto.protoMsg.AttackReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.AttackReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.AttackReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.AttackReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.AttackReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    defendid: jspb.Message.getField(msg, 1),
    ishead: jspb.Message.getField(msg, 2),
    origion: (f = msg.getOrigion()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    dir: (f = msg.getDir()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    firetime: jspb.Message.getField(msg, 5),
    distance: jspb.Message.getOptionalFloatingPointField(msg, 6),
    attackid: jspb.Message.getField(msg, 7),
    colliderpath: jspb.Message.getField(msg, 8),
    colliderpoint: (f = msg.getColliderpoint()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    collidernormal: (f = msg.getCollidernormal()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    wheelindex: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.AttackReq}
 */
proto.protoMsg.AttackReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.AttackReq;
  return proto.protoMsg.AttackReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.AttackReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.AttackReq}
 */
proto.protoMsg.AttackReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDefendid(value);
      break;
    case 2:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIshead(value);
      break;
    case 3:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setOrigion(value);
      break;
    case 4:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setDir(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFiretime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAttackid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setColliderpath(value);
      break;
    case 9:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setColliderpoint(value);
      break;
    case 10:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setCollidernormal(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWheelindex(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.AttackReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.AttackReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.AttackReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.AttackReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeBool(
      2,
      f
    );
  }
  f = message.getOrigion();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = message.getDir();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = message.getColliderpoint();
  if (f != null) {
    writer.writeMessage(
      9,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = message.getCollidernormal();
  if (f != null) {
    writer.writeMessage(
      10,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional uint64 defendid = 1;
 * @return {number}
 */
proto.protoMsg.AttackReq.prototype.getDefendid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.AttackReq.prototype.setDefendid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.AttackReq.prototype.clearDefendid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasDefendid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional bool ishead = 2;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.protoMsg.AttackReq.prototype.getIshead = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 2, false));
};


/** @param {boolean} value */
proto.protoMsg.AttackReq.prototype.setIshead = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.AttackReq.prototype.clearIshead = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasIshead = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Vector3 origion = 3;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.AttackReq.prototype.getOrigion = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 3));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.AttackReq.prototype.setOrigion = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.protoMsg.AttackReq.prototype.clearOrigion = function() {
  this.setOrigion(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasOrigion = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional Vector3 dir = 4;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.AttackReq.prototype.getDir = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 4));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.AttackReq.prototype.setDir = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.protoMsg.AttackReq.prototype.clearDir = function() {
  this.setDir(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasDir = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 firetime = 5;
 * @return {number}
 */
proto.protoMsg.AttackReq.prototype.getFiretime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.AttackReq.prototype.setFiretime = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.AttackReq.prototype.clearFiretime = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasFiretime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float distance = 6;
 * @return {number}
 */
proto.protoMsg.AttackReq.prototype.getDistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.protoMsg.AttackReq.prototype.setDistance = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.AttackReq.prototype.clearDistance = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasDistance = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 attackid = 7;
 * @return {number}
 */
proto.protoMsg.AttackReq.prototype.getAttackid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.AttackReq.prototype.setAttackid = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.AttackReq.prototype.clearAttackid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasAttackid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string colliderpath = 8;
 * @return {string}
 */
proto.protoMsg.AttackReq.prototype.getColliderpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.protoMsg.AttackReq.prototype.setColliderpath = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.AttackReq.prototype.clearColliderpath = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasColliderpath = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional Vector3 colliderpoint = 9;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.AttackReq.prototype.getColliderpoint = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 9));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.AttackReq.prototype.setColliderpoint = function(value) {
  jspb.Message.setWrapperField(this, 9, value);
};


proto.protoMsg.AttackReq.prototype.clearColliderpoint = function() {
  this.setColliderpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasColliderpoint = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional Vector3 collidernormal = 10;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.AttackReq.prototype.getCollidernormal = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 10));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.AttackReq.prototype.setCollidernormal = function(value) {
  jspb.Message.setWrapperField(this, 10, value);
};


proto.protoMsg.AttackReq.prototype.clearCollidernormal = function() {
  this.setCollidernormal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasCollidernormal = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 wheelIndex = 11;
 * @return {number}
 */
proto.protoMsg.AttackReq.prototype.getWheelindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.protoMsg.AttackReq.prototype.setWheelindex = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.AttackReq.prototype.clearWheelindex = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AttackReq.prototype.hasWheelindex = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BulletHoleReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.BulletHoleReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BulletHoleReq.displayName = 'proto.protoMsg.BulletHoleReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BulletHoleReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BulletHoleReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BulletHoleReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BulletHoleReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    colliderpath: jspb.Message.getField(msg, 1),
    colliderpoint: (f = msg.getColliderpoint()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    collidernormal: (f = msg.getCollidernormal()) && proto.protoMsg.Vector3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BulletHoleReq}
 */
proto.protoMsg.BulletHoleReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BulletHoleReq;
  return proto.protoMsg.BulletHoleReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BulletHoleReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BulletHoleReq}
 */
proto.protoMsg.BulletHoleReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setColliderpath(value);
      break;
    case 2:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setColliderpoint(value);
      break;
    case 3:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setCollidernormal(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BulletHoleReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BulletHoleReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BulletHoleReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BulletHoleReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = message.getColliderpoint();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = message.getCollidernormal();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
};


/**
 * optional string colliderpath = 1;
 * @return {string}
 */
proto.protoMsg.BulletHoleReq.prototype.getColliderpath = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.BulletHoleReq.prototype.setColliderpath = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.BulletHoleReq.prototype.clearColliderpath = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BulletHoleReq.prototype.hasColliderpath = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vector3 colliderpoint = 2;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.BulletHoleReq.prototype.getColliderpoint = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 2));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.BulletHoleReq.prototype.setColliderpoint = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.protoMsg.BulletHoleReq.prototype.clearColliderpoint = function() {
  this.setColliderpoint(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BulletHoleReq.prototype.hasColliderpoint = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Vector3 collidernormal = 3;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.BulletHoleReq.prototype.getCollidernormal = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 3));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.BulletHoleReq.prototype.setCollidernormal = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.protoMsg.BulletHoleReq.prototype.clearCollidernormal = function() {
  this.setCollidernormal(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BulletHoleReq.prototype.hasCollidernormal = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ShootReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ShootReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ShootReq.displayName = 'proto.protoMsg.ShootReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ShootReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ShootReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ShootReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ShootReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    issuc: jspb.Message.getField(msg, 1),
    attackid: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ShootReq}
 */
proto.protoMsg.ShootReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ShootReq;
  return proto.protoMsg.ShootReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ShootReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ShootReq}
 */
proto.protoMsg.ShootReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setIssuc(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAttackid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ShootReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ShootReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ShootReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ShootReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional bool issuc = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.protoMsg.ShootReq.prototype.getIssuc = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.protoMsg.ShootReq.prototype.setIssuc = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ShootReq.prototype.clearIssuc = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShootReq.prototype.hasIssuc = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 attackid = 2;
 * @return {number}
 */
proto.protoMsg.ShootReq.prototype.getAttackid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ShootReq.prototype.setAttackid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ShootReq.prototype.clearAttackid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShootReq.prototype.hasAttackid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.MapCharacterResultNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.MapCharacterResultNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.MapCharacterResultNotify.displayName = 'proto.protoMsg.MapCharacterResultNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.MapCharacterResultNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.MapCharacterResultNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MapCharacterResultNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    rank: jspb.Message.getField(msg, 1),
    kill: jspb.Message.getField(msg, 2),
    timeinseconds: jspb.Message.getField(msg, 3),
    amount: jspb.Message.getField(msg, 4),
    round: jspb.Message.getField(msg, 5),
    headshotnum: jspb.Message.getField(msg, 6),
    shotnum: jspb.Message.getField(msg, 7),
    effectharm: jspb.Message.getField(msg, 8),
    recovernum: jspb.Message.getField(msg, 9),
    revivenum: jspb.Message.getField(msg, 10),
    killdistance: jspb.Message.getOptionalFloatingPointField(msg, 11),
    destroycarnum: jspb.Message.getField(msg, 12),
    killstmnum: jspb.Message.getField(msg, 13),
    attacknum: jspb.Message.getField(msg, 14),
    roadkillnum: jspb.Message.getField(msg, 15),
    clothnum: jspb.Message.getField(msg, 16),
    speednum: jspb.Message.getField(msg, 17),
    rundistance: jspb.Message.getOptionalFloatingPointField(msg, 18),
    killscore: jspb.Message.getOptionalFloatingPointField(msg, 19),
    rankscore: jspb.Message.getOptionalFloatingPointField(msg, 20),
    totalrank: jspb.Message.getField(msg, 21),
    totalscore: jspb.Message.getOptionalFloatingPointField(msg, 22),
    coin: jspb.Message.getField(msg, 23)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.MapCharacterResultNotify}
 */
proto.protoMsg.MapCharacterResultNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.MapCharacterResultNotify;
  return proto.protoMsg.MapCharacterResultNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.MapCharacterResultNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.MapCharacterResultNotify}
 */
proto.protoMsg.MapCharacterResultNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRank(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKill(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTimeinseconds(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAmount(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRound(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeadshotnum(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShotnum(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEffectharm(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecovernum(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRevivenum(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setKilldistance(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDestroycarnum(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKillstmnum(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAttacknum(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoadkillnum(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setClothnum(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSpeednum(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRundistance(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setKillscore(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRankscore(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalrank(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalscore(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCoin(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.MapCharacterResultNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.MapCharacterResultNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MapCharacterResultNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
};


/**
 * optional uint32 rank = 1;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setRank = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearRank = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasRank = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 kill = 2;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getKill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setKill = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearKill = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasKill = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 timeinseconds = 3;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getTimeinseconds = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setTimeinseconds = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearTimeinseconds = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasTimeinseconds = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 amount = 4;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getAmount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setAmount = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearAmount = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasAmount = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 round = 5;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getRound = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setRound = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearRound = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasRound = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 headshotnum = 6;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getHeadshotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setHeadshotnum = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearHeadshotnum = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasHeadshotnum = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 shotnum = 7;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getShotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setShotnum = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearShotnum = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasShotnum = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 effectharm = 8;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getEffectharm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setEffectharm = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearEffectharm = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasEffectharm = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 recovernum = 9;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getRecovernum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setRecovernum = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearRecovernum = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasRecovernum = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 revivenum = 10;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getRevivenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setRevivenum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearRevivenum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasRevivenum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float killdistance = 11;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getKilldistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setKilldistance = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearKilldistance = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasKilldistance = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 destroycarnum = 12;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getDestroycarnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setDestroycarnum = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearDestroycarnum = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasDestroycarnum = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 killstmnum = 13;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getKillstmnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setKillstmnum = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearKillstmnum = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasKillstmnum = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 attacknum = 14;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getAttacknum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setAttacknum = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearAttacknum = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasAttacknum = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 roadkillnum = 15;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getRoadkillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setRoadkillnum = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearRoadkillnum = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasRoadkillnum = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 clothnum = 16;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getClothnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setClothnum = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearClothnum = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasClothnum = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 speednum = 17;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getSpeednum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setSpeednum = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearSpeednum = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasSpeednum = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional float rundistance = 18;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getRundistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setRundistance = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearRundistance = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasRundistance = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional float killscore = 19;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getKillscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setKillscore = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearKillscore = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasKillscore = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional float rankscore = 20;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getRankscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setRankscore = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearRankscore = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasRankscore = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 totalrank = 21;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getTotalrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setTotalrank = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearTotalrank = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasTotalrank = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional float totalscore = 22;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getTotalscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setTotalscore = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearTotalscore = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasTotalscore = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 coin = 23;
 * @return {number}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.getCoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.protoMsg.MapCharacterResultNotify.prototype.setCoin = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.MapCharacterResultNotify.prototype.clearCoin = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MapCharacterResultNotify.prototype.hasCoin = function() {
  return jspb.Message.getField(this, 23) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ChatNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ChatNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ChatNotify.displayName = 'proto.protoMsg.ChatNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ChatNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ChatNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ChatNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChatNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    content: jspb.Message.getField(msg, 1),
    type: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ChatNotify}
 */
proto.protoMsg.ChatNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ChatNotify;
  return proto.protoMsg.ChatNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ChatNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ChatNotify}
 */
proto.protoMsg.ChatNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ChatNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ChatNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ChatNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChatNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional string content = 1;
 * @return {string}
 */
proto.protoMsg.ChatNotify.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.ChatNotify.prototype.setContent = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ChatNotify.prototype.clearContent = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatNotify.prototype.hasContent = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 type = 2;
 * @return {number}
 */
proto.protoMsg.ChatNotify.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ChatNotify.prototype.setType = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ChatNotify.prototype.clearType = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatNotify.prototype.hasType = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ZoneNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ZoneNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ZoneNotify.displayName = 'proto.protoMsg.ZoneNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ZoneNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ZoneNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ZoneNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ZoneNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    center: (f = msg.getCenter()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    radius: jspb.Message.getOptionalFloatingPointField(msg, 3),
    interval: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ZoneNotify}
 */
proto.protoMsg.ZoneNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ZoneNotify;
  return proto.protoMsg.ZoneNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ZoneNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ZoneNotify}
 */
proto.protoMsg.ZoneNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setCenter(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRadius(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setInterval(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ZoneNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ZoneNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ZoneNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ZoneNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getCenter();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint32 type = 1;
 * @return {number}
 */
proto.protoMsg.ZoneNotify.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ZoneNotify.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ZoneNotify.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ZoneNotify.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vector3 center = 2;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.ZoneNotify.prototype.getCenter = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 2));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.ZoneNotify.prototype.setCenter = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.protoMsg.ZoneNotify.prototype.clearCenter = function() {
  this.setCenter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ZoneNotify.prototype.hasCenter = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float radius = 3;
 * @return {number}
 */
proto.protoMsg.ZoneNotify.prototype.getRadius = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.protoMsg.ZoneNotify.prototype.setRadius = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.ZoneNotify.prototype.clearRadius = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ZoneNotify.prototype.hasRadius = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 interval = 4;
 * @return {number}
 */
proto.protoMsg.ZoneNotify.prototype.getInterval = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.ZoneNotify.prototype.setInterval = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.ZoneNotify.prototype.clearInterval = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ZoneNotify.prototype.hasInterval = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ChangeBulletReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ChangeBulletReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ChangeBulletReq.displayName = 'proto.protoMsg.ChangeBulletReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ChangeBulletReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ChangeBulletReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ChangeBulletReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChangeBulletReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    full: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ChangeBulletReq}
 */
proto.protoMsg.ChangeBulletReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ChangeBulletReq;
  return proto.protoMsg.ChangeBulletReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ChangeBulletReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ChangeBulletReq}
 */
proto.protoMsg.ChangeBulletReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setFull(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ChangeBulletReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ChangeBulletReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ChangeBulletReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChangeBulletReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {boolean} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeBool(
      1,
      f
    );
  }
};


/**
 * optional bool full = 1;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.protoMsg.ChangeBulletReq.prototype.getFull = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 1, false));
};


/** @param {boolean} value */
proto.protoMsg.ChangeBulletReq.prototype.setFull = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ChangeBulletReq.prototype.clearFull = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChangeBulletReq.prototype.hasFull = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ChangeBulletRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ChangeBulletRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ChangeBulletRet.displayName = 'proto.protoMsg.ChangeBulletRet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ChangeBulletRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ChangeBulletRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ChangeBulletRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChangeBulletRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    bullet: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ChangeBulletRet}
 */
proto.protoMsg.ChangeBulletRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ChangeBulletRet;
  return proto.protoMsg.ChangeBulletRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ChangeBulletRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ChangeBulletRet}
 */
proto.protoMsg.ChangeBulletRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBullet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ChangeBulletRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ChangeBulletRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ChangeBulletRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChangeBulletRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.protoMsg.ChangeBulletRet.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ChangeBulletRet.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ChangeBulletRet.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChangeBulletRet.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 bullet = 2;
 * @return {number}
 */
proto.protoMsg.ChangeBulletRet.prototype.getBullet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ChangeBulletRet.prototype.setBullet = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ChangeBulletRet.prototype.clearBullet = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChangeBulletRet.prototype.hasBullet = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.TeamMemberInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.TeamMemberInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.TeamMemberInfo.displayName = 'proto.protoMsg.TeamMemberInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.TeamMemberInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.TeamMemberInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.TeamMemberInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.TeamMemberInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    memstate: jspb.Message.getField(msg, 3),
    modelid: jspb.Message.getField(msg, 4),
    intotime: jspb.Message.getField(msg, 5),
    slot: jspb.Message.getField(msg, 6)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.TeamMemberInfo}
 */
proto.protoMsg.TeamMemberInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.TeamMemberInfo;
  return proto.protoMsg.TeamMemberInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.TeamMemberInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.TeamMemberInfo}
 */
proto.protoMsg.TeamMemberInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMemstate(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setModelid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setIntotime(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlot(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.TeamMemberInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.TeamMemberInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.TeamMemberInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.TeamMemberInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt64(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.protoMsg.TeamMemberInfo.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.TeamMemberInfo.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.TeamMemberInfo.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.TeamMemberInfo.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protoMsg.TeamMemberInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.TeamMemberInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.TeamMemberInfo.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.TeamMemberInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 memState = 3;
 * @return {number}
 */
proto.protoMsg.TeamMemberInfo.prototype.getMemstate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.TeamMemberInfo.prototype.setMemstate = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.TeamMemberInfo.prototype.clearMemstate = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.TeamMemberInfo.prototype.hasMemstate = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 modelid = 4;
 * @return {number}
 */
proto.protoMsg.TeamMemberInfo.prototype.getModelid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.TeamMemberInfo.prototype.setModelid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.TeamMemberInfo.prototype.clearModelid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.TeamMemberInfo.prototype.hasModelid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int64 intotime = 5;
 * @return {number}
 */
proto.protoMsg.TeamMemberInfo.prototype.getIntotime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.TeamMemberInfo.prototype.setIntotime = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.TeamMemberInfo.prototype.clearIntotime = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.TeamMemberInfo.prototype.hasIntotime = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 slot = 6;
 * @return {number}
 */
proto.protoMsg.TeamMemberInfo.prototype.getSlot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.TeamMemberInfo.prototype.setSlot = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.TeamMemberInfo.prototype.clearSlot = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.TeamMemberInfo.prototype.hasSlot = function() {
  return jspb.Message.getField(this, 6) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SyncTeamInfoRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SyncTeamInfoRet.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SyncTeamInfoRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SyncTeamInfoRet.displayName = 'proto.protoMsg.SyncTeamInfoRet';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SyncTeamInfoRet.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SyncTeamInfoRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SyncTeamInfoRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncTeamInfoRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    teamstate: jspb.Message.getField(msg, 2),
    memberinfoList: jspb.Message.toObjectList(msg.getMemberinfoList(),
    proto.protoMsg.TeamMemberInfo.toObject, includeInstance),
    leaderid: jspb.Message.getField(msg, 4),
    teamtype: jspb.Message.getField(msg, 5),
    automatch: jspb.Message.getField(msg, 6),
    mapid: jspb.Message.getField(msg, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SyncTeamInfoRet}
 */
proto.protoMsg.SyncTeamInfoRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SyncTeamInfoRet;
  return proto.protoMsg.SyncTeamInfoRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SyncTeamInfoRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SyncTeamInfoRet}
 */
proto.protoMsg.SyncTeamInfoRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamstate(value);
      break;
    case 3:
      var value = new proto.protoMsg.TeamMemberInfo;
      reader.readMessage(value,proto.protoMsg.TeamMemberInfo.deserializeBinaryFromReader);
      msg.addMemberinfo(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setLeaderid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamtype(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutomatch(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMapid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SyncTeamInfoRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SyncTeamInfoRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncTeamInfoRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getMemberinfoList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protoMsg.TeamMemberInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.SyncTeamInfoRet.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SyncTeamInfoRet.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 teamState = 2;
 * @return {number}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.getTeamstate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.SyncTeamInfoRet.prototype.setTeamstate = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.SyncTeamInfoRet.prototype.clearTeamstate = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.hasTeamstate = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated TeamMemberInfo memberinfo = 3;
 * @return {!Array.<!proto.protoMsg.TeamMemberInfo>}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.getMemberinfoList = function() {
  return /** @type{!Array.<!proto.protoMsg.TeamMemberInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.TeamMemberInfo, 3));
};


/** @param {!Array.<!proto.protoMsg.TeamMemberInfo>} value */
proto.protoMsg.SyncTeamInfoRet.prototype.setMemberinfoList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protoMsg.TeamMemberInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.TeamMemberInfo}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.addMemberinfo = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protoMsg.TeamMemberInfo, opt_index);
};


proto.protoMsg.SyncTeamInfoRet.prototype.clearMemberinfoList = function() {
  this.setMemberinfoList([]);
};


/**
 * optional uint64 leaderid = 4;
 * @return {number}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.getLeaderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.SyncTeamInfoRet.prototype.setLeaderid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SyncTeamInfoRet.prototype.clearLeaderid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.hasLeaderid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 teamtype = 5;
 * @return {number}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.getTeamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.SyncTeamInfoRet.prototype.setTeamtype = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.SyncTeamInfoRet.prototype.clearTeamtype = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.hasTeamtype = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 automatch = 6;
 * @return {number}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.getAutomatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.SyncTeamInfoRet.prototype.setAutomatch = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.SyncTeamInfoRet.prototype.clearAutomatch = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.hasAutomatch = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 mapid = 7;
 * @return {number}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.getMapid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.SyncTeamInfoRet.prototype.setMapid = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.SyncTeamInfoRet.prototype.clearMapid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncTeamInfoRet.prototype.hasMapid = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RefreshPackCellNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RefreshPackCellNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RefreshPackCellNotify.displayName = 'proto.protoMsg.RefreshPackCellNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RefreshPackCellNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RefreshPackCellNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RefreshPackCellNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshPackCellNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    num: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RefreshPackCellNotify}
 */
proto.protoMsg.RefreshPackCellNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RefreshPackCellNotify;
  return proto.protoMsg.RefreshPackCellNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RefreshPackCellNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RefreshPackCellNotify}
 */
proto.protoMsg.RefreshPackCellNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RefreshPackCellNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RefreshPackCellNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RefreshPackCellNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshPackCellNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 num = 1;
 * @return {number}
 */
proto.protoMsg.RefreshPackCellNotify.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.RefreshPackCellNotify.prototype.setNum = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.RefreshPackCellNotify.prototype.clearNum = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshPackCellNotify.prototype.hasNum = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SummonAINotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SummonAINotify.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SummonAINotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SummonAINotify.displayName = 'proto.protoMsg.SummonAINotify';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SummonAINotify.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SummonAINotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SummonAINotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SummonAINotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SummonAINotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    ainum: jspb.Message.getField(msg, 1),
    usersList: jspb.Message.getRepeatedField(msg, 2),
    skybox: jspb.Message.getField(msg, 3),
    scenetype: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SummonAINotify}
 */
proto.protoMsg.SummonAINotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SummonAINotify;
  return proto.protoMsg.SummonAINotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SummonAINotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SummonAINotify}
 */
proto.protoMsg.SummonAINotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAinum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.addUsers(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkybox(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScenetype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SummonAINotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SummonAINotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SummonAINotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SummonAINotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = message.getUsersList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
};


/**
 * optional uint32 ainum = 1;
 * @return {number}
 */
proto.protoMsg.SummonAINotify.prototype.getAinum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.SummonAINotify.prototype.setAinum = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SummonAINotify.prototype.clearAinum = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SummonAINotify.prototype.hasAinum = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated uint64 users = 2;
 * @return {!Array.<number>}
 */
proto.protoMsg.SummonAINotify.prototype.getUsersList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 2));
};


/** @param {!Array.<number>} value */
proto.protoMsg.SummonAINotify.prototype.setUsersList = function(value) {
  jspb.Message.setField(this, 2, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.protoMsg.SummonAINotify.prototype.addUsers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 2, value, opt_index);
};


proto.protoMsg.SummonAINotify.prototype.clearUsersList = function() {
  this.setUsersList([]);
};


/**
 * optional uint32 skybox = 3;
 * @return {number}
 */
proto.protoMsg.SummonAINotify.prototype.getSkybox = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.SummonAINotify.prototype.setSkybox = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.SummonAINotify.prototype.clearSkybox = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SummonAINotify.prototype.hasSkybox = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 SceneType = 4;
 * @return {number}
 */
proto.protoMsg.SummonAINotify.prototype.getScenetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.SummonAINotify.prototype.setScenetype = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SummonAINotify.prototype.clearScenetype = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SummonAINotify.prototype.hasScenetype = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RefreshGunBulletNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RefreshGunBulletNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RefreshGunBulletNotify.displayName = 'proto.protoMsg.RefreshGunBulletNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RefreshGunBulletNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RefreshGunBulletNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RefreshGunBulletNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshGunBulletNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    thisid: jspb.Message.getField(msg, 1),
    bullet: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RefreshGunBulletNotify}
 */
proto.protoMsg.RefreshGunBulletNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RefreshGunBulletNotify;
  return proto.protoMsg.RefreshGunBulletNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RefreshGunBulletNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RefreshGunBulletNotify}
 */
proto.protoMsg.RefreshGunBulletNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setThisid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBullet(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RefreshGunBulletNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RefreshGunBulletNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RefreshGunBulletNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshGunBulletNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 thisid = 1;
 * @return {number}
 */
proto.protoMsg.RefreshGunBulletNotify.prototype.getThisid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.RefreshGunBulletNotify.prototype.setThisid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.RefreshGunBulletNotify.prototype.clearThisid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshGunBulletNotify.prototype.hasThisid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 bullet = 2;
 * @return {number}
 */
proto.protoMsg.RefreshGunBulletNotify.prototype.getBullet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.RefreshGunBulletNotify.prototype.setBullet = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.RefreshGunBulletNotify.prototype.clearBullet = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshGunBulletNotify.prototype.hasBullet = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.InitRoomTeamPlayerItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.InitRoomTeamPlayerItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.InitRoomTeamPlayerItem.displayName = 'proto.protoMsg.InitRoomTeamPlayerItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.InitRoomTeamPlayerItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.InitRoomTeamPlayerItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.InitRoomTeamPlayerItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    hp: jspb.Message.getField(msg, 3),
    maxhp: jspb.Message.getField(msg, 4),
    state: jspb.Message.getField(msg, 5),
    pos: (f = msg.getPos()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    color: jspb.Message.getField(msg, 7)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.InitRoomTeamPlayerItem}
 */
proto.protoMsg.InitRoomTeamPlayerItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.InitRoomTeamPlayerItem;
  return proto.protoMsg.InitRoomTeamPlayerItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.InitRoomTeamPlayerItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.InitRoomTeamPlayerItem}
 */
proto.protoMsg.InitRoomTeamPlayerItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHp(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxhp(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    case 6:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setColor(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.InitRoomTeamPlayerItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.InitRoomTeamPlayerItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.InitRoomTeamPlayerItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      6,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.InitRoomTeamPlayerItem.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.InitRoomTeamPlayerItem.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 hp = 3;
 * @return {number}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.setHp = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.InitRoomTeamPlayerItem.prototype.clearHp = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.hasHp = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 Maxhp = 4;
 * @return {number}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.getMaxhp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.setMaxhp = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.InitRoomTeamPlayerItem.prototype.clearMaxhp = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.hasMaxhp = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 state = 5;
 * @return {number}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.setState = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.InitRoomTeamPlayerItem.prototype.clearState = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.hasState = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional Vector3 pos = 6;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.getPos = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 6));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.setPos = function(value) {
  jspb.Message.setWrapperField(this, 6, value);
};


proto.protoMsg.InitRoomTeamPlayerItem.prototype.clearPos = function() {
  this.setPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.hasPos = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 color = 7;
 * @return {number}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.getColor = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.setColor = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.InitRoomTeamPlayerItem.prototype.clearColor = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.InitRoomTeamPlayerItem.prototype.hasColor = function() {
  return jspb.Message.getField(this, 7) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.InitRoomTeamInfoRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.InitRoomTeamInfoRet.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.InitRoomTeamInfoRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.InitRoomTeamInfoRet.displayName = 'proto.protoMsg.InitRoomTeamInfoRet';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.InitRoomTeamInfoRet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.InitRoomTeamInfoRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.InitRoomTeamInfoRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.InitRoomTeamInfoRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.InitRoomTeamInfoRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.protoMsg.InitRoomTeamPlayerItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.InitRoomTeamInfoRet}
 */
proto.protoMsg.InitRoomTeamInfoRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.InitRoomTeamInfoRet;
  return proto.protoMsg.InitRoomTeamInfoRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.InitRoomTeamInfoRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.InitRoomTeamInfoRet}
 */
proto.protoMsg.InitRoomTeamInfoRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.InitRoomTeamPlayerItem;
      reader.readMessage(value,proto.protoMsg.InitRoomTeamPlayerItem.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.InitRoomTeamInfoRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.InitRoomTeamInfoRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.InitRoomTeamInfoRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.InitRoomTeamInfoRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.InitRoomTeamPlayerItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated InitRoomTeamPlayerItem item = 1;
 * @return {!Array.<!proto.protoMsg.InitRoomTeamPlayerItem>}
 */
proto.protoMsg.InitRoomTeamInfoRet.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.protoMsg.InitRoomTeamPlayerItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.InitRoomTeamPlayerItem, 1));
};


/** @param {!Array.<!proto.protoMsg.InitRoomTeamPlayerItem>} value */
proto.protoMsg.InitRoomTeamInfoRet.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.InitRoomTeamPlayerItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.InitRoomTeamPlayerItem}
 */
proto.protoMsg.InitRoomTeamInfoRet.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.InitRoomTeamPlayerItem, opt_index);
};


proto.protoMsg.InitRoomTeamInfoRet.prototype.clearItemList = function() {
  this.setItemList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SyncRoomTeamPlayerItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.SyncRoomTeamPlayerItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SyncRoomTeamPlayerItem.displayName = 'proto.protoMsg.SyncRoomTeamPlayerItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SyncRoomTeamPlayerItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SyncRoomTeamPlayerItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncRoomTeamPlayerItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    hp: jspb.Message.getField(msg, 2),
    pos: (f = msg.getPos()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    state: jspb.Message.getField(msg, 4),
    rota: (f = msg.getRota()) && proto.protoMsg.Vector3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SyncRoomTeamPlayerItem}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SyncRoomTeamPlayerItem;
  return proto.protoMsg.SyncRoomTeamPlayerItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SyncRoomTeamPlayerItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SyncRoomTeamPlayerItem}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHp(value);
      break;
    case 3:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    case 5:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setRota(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SyncRoomTeamPlayerItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SyncRoomTeamPlayerItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncRoomTeamPlayerItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = message.getRota();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SyncRoomTeamPlayerItem.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 hp = 2;
 * @return {number}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.getHp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.setHp = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.SyncRoomTeamPlayerItem.prototype.clearHp = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.hasHp = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Vector3 pos = 3;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.getPos = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 3));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.setPos = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.protoMsg.SyncRoomTeamPlayerItem.prototype.clearPos = function() {
  this.setPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.hasPos = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 state = 4;
 * @return {number}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.setState = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SyncRoomTeamPlayerItem.prototype.clearState = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.hasState = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Vector3 rota = 5;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.getRota = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 5));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.setRota = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.protoMsg.SyncRoomTeamPlayerItem.prototype.clearRota = function() {
  this.setRota(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncRoomTeamPlayerItem.prototype.hasRota = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SymcRoomTeamInfoRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SymcRoomTeamInfoRet.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SymcRoomTeamInfoRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SymcRoomTeamInfoRet.displayName = 'proto.protoMsg.SymcRoomTeamInfoRet';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SymcRoomTeamInfoRet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SymcRoomTeamInfoRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SymcRoomTeamInfoRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SymcRoomTeamInfoRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SymcRoomTeamInfoRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.protoMsg.SyncRoomTeamPlayerItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SymcRoomTeamInfoRet}
 */
proto.protoMsg.SymcRoomTeamInfoRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SymcRoomTeamInfoRet;
  return proto.protoMsg.SymcRoomTeamInfoRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SymcRoomTeamInfoRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SymcRoomTeamInfoRet}
 */
proto.protoMsg.SymcRoomTeamInfoRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.SyncRoomTeamPlayerItem;
      reader.readMessage(value,proto.protoMsg.SyncRoomTeamPlayerItem.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SymcRoomTeamInfoRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SymcRoomTeamInfoRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SymcRoomTeamInfoRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SymcRoomTeamInfoRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.SyncRoomTeamPlayerItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SyncRoomTeamPlayerItem item = 1;
 * @return {!Array.<!proto.protoMsg.SyncRoomTeamPlayerItem>}
 */
proto.protoMsg.SymcRoomTeamInfoRet.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.protoMsg.SyncRoomTeamPlayerItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.SyncRoomTeamPlayerItem, 1));
};


/** @param {!Array.<!proto.protoMsg.SyncRoomTeamPlayerItem>} value */
proto.protoMsg.SymcRoomTeamInfoRet.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.SyncRoomTeamPlayerItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.SyncRoomTeamPlayerItem}
 */
proto.protoMsg.SymcRoomTeamInfoRet.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.SyncRoomTeamPlayerItem, opt_index);
};


proto.protoMsg.SymcRoomTeamInfoRet.prototype.clearItemList = function() {
  this.setItemList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DieNotifyRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.DieNotifyRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DieNotifyRet.displayName = 'proto.protoMsg.DieNotifyRet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DieNotifyRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DieNotifyRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DieNotifyRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DieNotifyRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    type: jspb.Message.getField(msg, 1),
    attackerid: jspb.Message.getField(msg, 2),
    defenderid: jspb.Message.getField(msg, 3),
    attackername: jspb.Message.getField(msg, 4),
    defendername: jspb.Message.getField(msg, 5),
    isheadhost: jspb.Message.getField(msg, 6),
    gunid: jspb.Message.getField(msg, 7),
    defenderstate: jspb.Message.getField(msg, 8),
    curalivesum: jspb.Message.getField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DieNotifyRet}
 */
proto.protoMsg.DieNotifyRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DieNotifyRet;
  return proto.protoMsg.DieNotifyRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DieNotifyRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DieNotifyRet}
 */
proto.protoMsg.DieNotifyRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setType(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAttackerid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setDefenderid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setAttackername(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setDefendername(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIsheadhost(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGunid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDefenderstate(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCuralivesum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DieNotifyRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DieNotifyRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DieNotifyRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DieNotifyRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * optional uint32 type = 1;
 * @return {number}
 */
proto.protoMsg.DieNotifyRet.prototype.getType = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.DieNotifyRet.prototype.setType = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearType = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasType = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 attackerid = 2;
 * @return {number}
 */
proto.protoMsg.DieNotifyRet.prototype.getAttackerid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.DieNotifyRet.prototype.setAttackerid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearAttackerid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasAttackerid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 defenderid = 3;
 * @return {number}
 */
proto.protoMsg.DieNotifyRet.prototype.getDefenderid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.DieNotifyRet.prototype.setDefenderid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearDefenderid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasDefenderid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string attackername = 4;
 * @return {string}
 */
proto.protoMsg.DieNotifyRet.prototype.getAttackername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.protoMsg.DieNotifyRet.prototype.setAttackername = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearAttackername = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasAttackername = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string defendername = 5;
 * @return {string}
 */
proto.protoMsg.DieNotifyRet.prototype.getDefendername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.protoMsg.DieNotifyRet.prototype.setDefendername = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearDefendername = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasDefendername = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 isHeadhost = 6;
 * @return {number}
 */
proto.protoMsg.DieNotifyRet.prototype.getIsheadhost = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.DieNotifyRet.prototype.setIsheadhost = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearIsheadhost = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasIsheadhost = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 gunid = 7;
 * @return {number}
 */
proto.protoMsg.DieNotifyRet.prototype.getGunid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.DieNotifyRet.prototype.setGunid = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearGunid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasGunid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 defenderstate = 8;
 * @return {number}
 */
proto.protoMsg.DieNotifyRet.prototype.getDefenderstate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.DieNotifyRet.prototype.setDefenderstate = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearDefenderstate = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasDefenderstate = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 curAliveSum = 9;
 * @return {number}
 */
proto.protoMsg.DieNotifyRet.prototype.getCuralivesum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.DieNotifyRet.prototype.setCuralivesum = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.DieNotifyRet.prototype.clearCuralivesum = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DieNotifyRet.prototype.hasCuralivesum = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.VehicleDamagedWheels = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.VehicleDamagedWheels.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.VehicleDamagedWheels, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.VehicleDamagedWheels.displayName = 'proto.protoMsg.VehicleDamagedWheels';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.VehicleDamagedWheels.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.VehicleDamagedWheels.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.VehicleDamagedWheels.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.VehicleDamagedWheels} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.VehicleDamagedWheels.toObject = function(includeInstance, msg) {
  var f, obj = {
    damagedwheelsList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.VehicleDamagedWheels}
 */
proto.protoMsg.VehicleDamagedWheels.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.VehicleDamagedWheels;
  return proto.protoMsg.VehicleDamagedWheels.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.VehicleDamagedWheels} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.VehicleDamagedWheels}
 */
proto.protoMsg.VehicleDamagedWheels.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.addDamagedwheels(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.VehicleDamagedWheels.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.VehicleDamagedWheels.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.VehicleDamagedWheels} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.VehicleDamagedWheels.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDamagedwheelsList();
  if (f.length > 0) {
    writer.writeRepeatedUint32(
      1,
      f
    );
  }
};


/**
 * repeated uint32 damagedWheels = 1;
 * @return {!Array.<number>}
 */
proto.protoMsg.VehicleDamagedWheels.prototype.getDamagedwheelsList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<number>} value */
proto.protoMsg.VehicleDamagedWheels.prototype.setDamagedwheelsList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.protoMsg.VehicleDamagedWheels.prototype.addDamagedwheels = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.protoMsg.VehicleDamagedWheels.prototype.clearDamagedwheelsList = function() {
  this.setDamagedwheelsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.VehiclePlayers = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.VehiclePlayers.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.VehiclePlayers, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.VehiclePlayers.displayName = 'proto.protoMsg.VehiclePlayers';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.VehiclePlayers.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.VehiclePlayers.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.VehiclePlayers.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.VehiclePlayers} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.VehiclePlayers.toObject = function(includeInstance, msg) {
  var f, obj = {
    playersList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.VehiclePlayers}
 */
proto.protoMsg.VehiclePlayers.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.VehiclePlayers;
  return proto.protoMsg.VehiclePlayers.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.VehiclePlayers} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.VehiclePlayers}
 */
proto.protoMsg.VehiclePlayers.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.addPlayers(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.VehiclePlayers.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.VehiclePlayers.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.VehiclePlayers} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.VehiclePlayers.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getPlayersList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 players = 1;
 * @return {!Array.<number>}
 */
proto.protoMsg.VehiclePlayers.prototype.getPlayersList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<number>} value */
proto.protoMsg.VehiclePlayers.prototype.setPlayersList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.protoMsg.VehiclePlayers.prototype.addPlayers = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.protoMsg.VehiclePlayers.prototype.clearPlayersList = function() {
  this.setPlayersList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ItemProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ItemProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ItemProp.displayName = 'proto.protoMsg.ItemProp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ItemProp.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ItemProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ItemProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ItemProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseid: jspb.Message.getField(msg, 1),
    id: jspb.Message.getField(msg, 2),
    num: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ItemProp}
 */
proto.protoMsg.ItemProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ItemProp;
  return proto.protoMsg.ItemProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ItemProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ItemProp}
 */
proto.protoMsg.ItemProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ItemProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ItemProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ItemProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ItemProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 baseid = 1;
 * @return {number}
 */
proto.protoMsg.ItemProp.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ItemProp.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ItemProp.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ItemProp.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 id = 2;
 * @return {number}
 */
proto.protoMsg.ItemProp.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ItemProp.prototype.setId = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ItemProp.prototype.clearId = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ItemProp.prototype.hasId = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 num = 3;
 * @return {number}
 */
proto.protoMsg.ItemProp.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.ItemProp.prototype.setNum = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.ItemProp.prototype.clearNum = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ItemProp.prototype.hasNum = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RefreshBoxObjNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.RefreshBoxObjNotify.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.RefreshBoxObjNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RefreshBoxObjNotify.displayName = 'proto.protoMsg.RefreshBoxObjNotify';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.RefreshBoxObjNotify.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RefreshBoxObjNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RefreshBoxObjNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RefreshBoxObjNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshBoxObjNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.protoMsg.ItemProp.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RefreshBoxObjNotify}
 */
proto.protoMsg.RefreshBoxObjNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RefreshBoxObjNotify;
  return proto.protoMsg.RefreshBoxObjNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RefreshBoxObjNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RefreshBoxObjNotify}
 */
proto.protoMsg.RefreshBoxObjNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.protoMsg.ItemProp;
      reader.readMessage(value,proto.protoMsg.ItemProp.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RefreshBoxObjNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RefreshBoxObjNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RefreshBoxObjNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RefreshBoxObjNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protoMsg.ItemProp.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.RefreshBoxObjNotify.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.RefreshBoxObjNotify.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.RefreshBoxObjNotify.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RefreshBoxObjNotify.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated ItemProp data = 2;
 * @return {!Array.<!proto.protoMsg.ItemProp>}
 */
proto.protoMsg.RefreshBoxObjNotify.prototype.getDataList = function() {
  return /** @type{!Array.<!proto.protoMsg.ItemProp>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.ItemProp, 2));
};


/** @param {!Array.<!proto.protoMsg.ItemProp>} value */
proto.protoMsg.RefreshBoxObjNotify.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protoMsg.ItemProp=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.ItemProp}
 */
proto.protoMsg.RefreshBoxObjNotify.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protoMsg.ItemProp, opt_index);
};


proto.protoMsg.RefreshBoxObjNotify.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.HeadProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.HeadProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.HeadProp.displayName = 'proto.protoMsg.HeadProp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.HeadProp.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.HeadProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.HeadProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.HeadProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseid: jspb.Message.getField(msg, 1),
    reducedam: jspb.Message.getField(msg, 2),
    maxreduce: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.HeadProp}
 */
proto.protoMsg.HeadProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.HeadProp;
  return proto.protoMsg.HeadProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.HeadProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.HeadProp}
 */
proto.protoMsg.HeadProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReducedam(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxreduce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.HeadProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.HeadProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.HeadProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.HeadProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 baseid = 1;
 * @return {number}
 */
proto.protoMsg.HeadProp.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.HeadProp.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.HeadProp.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.HeadProp.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 reducedam = 2;
 * @return {number}
 */
proto.protoMsg.HeadProp.prototype.getReducedam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.HeadProp.prototype.setReducedam = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.HeadProp.prototype.clearReducedam = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.HeadProp.prototype.hasReducedam = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 maxreduce = 3;
 * @return {number}
 */
proto.protoMsg.HeadProp.prototype.getMaxreduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.HeadProp.prototype.setMaxreduce = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.HeadProp.prototype.clearMaxreduce = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.HeadProp.prototype.hasMaxreduce = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BodyProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.BodyProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BodyProp.displayName = 'proto.protoMsg.BodyProp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BodyProp.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BodyProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BodyProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BodyProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseid: jspb.Message.getField(msg, 1),
    reducedam: jspb.Message.getField(msg, 2),
    maxreduce: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BodyProp}
 */
proto.protoMsg.BodyProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BodyProp;
  return proto.protoMsg.BodyProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BodyProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BodyProp}
 */
proto.protoMsg.BodyProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReducedam(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaxreduce(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BodyProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BodyProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BodyProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BodyProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint32 baseid = 1;
 * @return {number}
 */
proto.protoMsg.BodyProp.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.BodyProp.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.BodyProp.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BodyProp.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 reducedam = 2;
 * @return {number}
 */
proto.protoMsg.BodyProp.prototype.getReducedam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.BodyProp.prototype.setReducedam = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.BodyProp.prototype.clearReducedam = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BodyProp.prototype.hasReducedam = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 maxreduce = 3;
 * @return {number}
 */
proto.protoMsg.BodyProp.prototype.getMaxreduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.BodyProp.prototype.setMaxreduce = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.BodyProp.prototype.clearMaxreduce = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BodyProp.prototype.hasMaxreduce = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BackPackProp = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.BackPackProp, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BackPackProp.displayName = 'proto.protoMsg.BackPackProp';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BackPackProp.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BackPackProp.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BackPackProp} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BackPackProp.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseid: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BackPackProp}
 */
proto.protoMsg.BackPackProp.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BackPackProp;
  return proto.protoMsg.BackPackProp.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BackPackProp} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BackPackProp}
 */
proto.protoMsg.BackPackProp.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BackPackProp.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BackPackProp.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BackPackProp} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BackPackProp.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
};


/**
 * optional uint32 baseid = 1;
 * @return {number}
 */
proto.protoMsg.BackPackProp.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.BackPackProp.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.BackPackProp.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BackPackProp.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.PlayerRegister = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.PlayerRegister, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.PlayerRegister.displayName = 'proto.protoMsg.PlayerRegister';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.PlayerRegister.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.PlayerRegister.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.PlayerRegister} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlayerRegister.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    telecomoper: jspb.Message.getField(msg, 7),
    regchannel: jspb.Message.getField(msg, 8),
    loginchannel: jspb.Message.getField(msg, 9)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.PlayerRegister}
 */
proto.protoMsg.PlayerRegister.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.PlayerRegister;
  return proto.protoMsg.PlayerRegister.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.PlayerRegister} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.PlayerRegister}
 */
proto.protoMsg.PlayerRegister.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegchannel(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.PlayerRegister.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.PlayerRegister.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.PlayerRegister} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlayerRegister.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.PlayerRegister.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerRegister.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.PlayerRegister.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.PlayerRegister.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerRegister.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.PlayerRegister.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.PlayerRegister.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerRegister.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.PlayerRegister.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.PlayerRegister.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerRegister.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.PlayerRegister.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.PlayerRegister.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerRegister.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.PlayerRegister.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.PlayerRegister.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerRegister.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.PlayerRegister.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string TelecomOper = 7;
 * @return {string}
 */
proto.protoMsg.PlayerRegister.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerRegister.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.PlayerRegister.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string RegChannel = 8;
 * @return {string}
 */
proto.protoMsg.PlayerRegister.prototype.getRegchannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerRegister.prototype.setRegchannel = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.PlayerRegister.prototype.clearRegchannel = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasRegchannel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 LoginChannel = 9;
 * @return {number}
 */
proto.protoMsg.PlayerRegister.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerRegister.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.PlayerRegister.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerRegister.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 9) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.PlayerLogin = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.PlayerLogin, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.PlayerLogin.displayName = 'proto.protoMsg.PlayerLogin';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.PlayerLogin.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.PlayerLogin.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.PlayerLogin} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlayerLogin.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    level: jspb.Message.getField(msg, 7),
    playerfriendsnum: jspb.Message.getField(msg, 8),
    clientversion: jspb.Message.getField(msg, 9),
    systemhardware: jspb.Message.getField(msg, 10),
    telecomoper: jspb.Message.getField(msg, 11),
    network: jspb.Message.getField(msg, 12),
    loginchannel: jspb.Message.getField(msg, 13),
    vroleid: jspb.Message.getField(msg, 14),
    vrolename: jspb.Message.getField(msg, 15),
    regchannel: jspb.Message.getField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.PlayerLogin}
 */
proto.protoMsg.PlayerLogin.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.PlayerLogin;
  return proto.protoMsg.PlayerLogin.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.PlayerLogin} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.PlayerLogin}
 */
proto.protoMsg.PlayerLogin.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setVroleid(value);
      break;
    case 15:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setRegchannel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.PlayerLogin.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.PlayerLogin.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.PlayerLogin} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlayerLogin.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeString(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.PlayerLogin.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.PlayerLogin.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.PlayerLogin.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.PlayerLogin.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogin.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.PlayerLogin.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.PlayerLogin.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogin.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.PlayerLogin.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.PlayerLogin.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 Level = 7;
 * @return {number}
 */
proto.protoMsg.PlayerLogin.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogin.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.PlayerLogin.prototype.clearLevel = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 8;
 * @return {number}
 */
proto.protoMsg.PlayerLogin.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogin.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.PlayerLogin.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string ClientVersion = 9;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.PlayerLogin.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string SystemHardware = 10;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.PlayerLogin.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string TelecomOper = 11;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.PlayerLogin.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string Network = 12;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.PlayerLogin.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 LoginChannel = 13;
 * @return {number}
 */
proto.protoMsg.PlayerLogin.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogin.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.PlayerLogin.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string VRoleID = 14;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getVroleid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setVroleid = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.PlayerLogin.prototype.clearVroleid = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasVroleid = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional string VRoleName = 15;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 15, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.PlayerLogin.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string RegChannel = 16;
 * @return {string}
 */
proto.protoMsg.PlayerLogin.prototype.getRegchannel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogin.prototype.setRegchannel = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.PlayerLogin.prototype.clearRegchannel = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogin.prototype.hasRegchannel = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.PlayerLogout = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.PlayerLogout, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.PlayerLogout.displayName = 'proto.protoMsg.PlayerLogout';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.PlayerLogout.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.PlayerLogout.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.PlayerLogout} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlayerLogout.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    onlinetime: jspb.Message.getField(msg, 7),
    level: jspb.Message.getField(msg, 8),
    playerfriendsnum: jspb.Message.getField(msg, 9),
    clientversion: jspb.Message.getField(msg, 10),
    systemhardware: jspb.Message.getField(msg, 11),
    telecomoper: jspb.Message.getField(msg, 12),
    network: jspb.Message.getField(msg, 13)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.PlayerLogout}
 */
proto.protoMsg.PlayerLogout.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.PlayerLogout;
  return proto.protoMsg.PlayerLogout.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.PlayerLogout} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.PlayerLogout}
 */
proto.protoMsg.PlayerLogout.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOnlinetime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.PlayerLogout.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.PlayerLogout.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.PlayerLogout} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlayerLogout.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.PlayerLogout.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.PlayerLogout.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.PlayerLogout.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.PlayerLogout.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogout.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.PlayerLogout.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.PlayerLogout.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogout.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.PlayerLogout.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.PlayerLogout.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 OnlineTime = 7;
 * @return {number}
 */
proto.protoMsg.PlayerLogout.prototype.getOnlinetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogout.prototype.setOnlinetime = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.PlayerLogout.prototype.clearOnlinetime = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasOnlinetime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 Level = 8;
 * @return {number}
 */
proto.protoMsg.PlayerLogout.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogout.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.PlayerLogout.prototype.clearLevel = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 9;
 * @return {number}
 */
proto.protoMsg.PlayerLogout.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.PlayerLogout.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.PlayerLogout.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string ClientVersion = 10;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.PlayerLogout.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string SystemHardware = 11;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.PlayerLogout.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string TelecomOper = 12;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.PlayerLogout.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string Network = 13;
 * @return {string}
 */
proto.protoMsg.PlayerLogout.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.PlayerLogout.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.PlayerLogout.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlayerLogout.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.MailObject = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.MailObject, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.MailObject.displayName = 'proto.protoMsg.MailObject';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.MailObject.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.MailObject.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.MailObject} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MailObject.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    num: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.MailObject}
 */
proto.protoMsg.MailObject.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.MailObject;
  return proto.protoMsg.MailObject.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.MailObject} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.MailObject}
 */
proto.protoMsg.MailObject.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.MailObject.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.MailObject.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.MailObject} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MailObject.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.protoMsg.MailObject.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.MailObject.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.MailObject.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailObject.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 num = 2;
 * @return {number}
 */
proto.protoMsg.MailObject.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.MailObject.prototype.setNum = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.MailObject.prototype.clearNum = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailObject.prototype.hasNum = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.MailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.MailInfo.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.MailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.MailInfo.displayName = 'proto.protoMsg.MailInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.MailInfo.repeatedFields_ = [8];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.MailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.MailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.MailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    mailid: jspb.Message.getField(msg, 1),
    mailtype: jspb.Message.getField(msg, 2),
    gettime: jspb.Message.getField(msg, 3),
    haveread: jspb.Message.getField(msg, 4),
    title: jspb.Message.getField(msg, 5),
    text: jspb.Message.getField(msg, 6),
    url: jspb.Message.getField(msg, 7),
    objsList: jspb.Message.toObjectList(msg.getObjsList(),
    proto.protoMsg.MailObject.toObject, includeInstance),
    haveget: jspb.Message.getField(msg, 9),
    button: jspb.Message.getField(msg, 10)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.MailInfo}
 */
proto.protoMsg.MailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.MailInfo;
  return proto.protoMsg.MailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.MailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.MailInfo}
 */
proto.protoMsg.MailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMailid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMailtype(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGettime(value);
      break;
    case 4:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHaveread(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setText(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 8:
      var value = new proto.protoMsg.MailObject;
      reader.readMessage(value,proto.protoMsg.MailObject.deserializeBinaryFromReader);
      msg.addObjs(value);
      break;
    case 9:
      var value = /** @type {boolean} */ (reader.readBool());
      msg.setHaveget(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setButton(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.MailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.MailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.MailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeBool(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = message.getObjsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      8,
      f,
      proto.protoMsg.MailObject.serializeBinaryToWriter
    );
  }
  f = /** @type {boolean} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeBool(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
};


/**
 * optional uint64 mailid = 1;
 * @return {number}
 */
proto.protoMsg.MailInfo.prototype.getMailid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.MailInfo.prototype.setMailid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.MailInfo.prototype.clearMailid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasMailid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 mailtype = 2;
 * @return {number}
 */
proto.protoMsg.MailInfo.prototype.getMailtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.MailInfo.prototype.setMailtype = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.MailInfo.prototype.clearMailtype = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasMailtype = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 gettime = 3;
 * @return {number}
 */
proto.protoMsg.MailInfo.prototype.getGettime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.MailInfo.prototype.setGettime = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.MailInfo.prototype.clearGettime = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasGettime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional bool haveread = 4;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.protoMsg.MailInfo.prototype.getHaveread = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 4, false));
};


/** @param {boolean} value */
proto.protoMsg.MailInfo.prototype.setHaveread = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.MailInfo.prototype.clearHaveread = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasHaveread = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string title = 5;
 * @return {string}
 */
proto.protoMsg.MailInfo.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.protoMsg.MailInfo.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.MailInfo.prototype.clearTitle = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string text = 6;
 * @return {string}
 */
proto.protoMsg.MailInfo.prototype.getText = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.MailInfo.prototype.setText = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.MailInfo.prototype.clearText = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasText = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string url = 7;
 * @return {string}
 */
proto.protoMsg.MailInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.MailInfo.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.MailInfo.prototype.clearUrl = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * repeated MailObject objs = 8;
 * @return {!Array.<!proto.protoMsg.MailObject>}
 */
proto.protoMsg.MailInfo.prototype.getObjsList = function() {
  return /** @type{!Array.<!proto.protoMsg.MailObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.MailObject, 8));
};


/** @param {!Array.<!proto.protoMsg.MailObject>} value */
proto.protoMsg.MailInfo.prototype.setObjsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 8, value);
};


/**
 * @param {!proto.protoMsg.MailObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.MailObject}
 */
proto.protoMsg.MailInfo.prototype.addObjs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 8, opt_value, proto.protoMsg.MailObject, opt_index);
};


proto.protoMsg.MailInfo.prototype.clearObjsList = function() {
  this.setObjsList([]);
};


/**
 * optional bool haveget = 9;
 * Note that Boolean fields may be set to 0/1 when serialized from a Java server.
 * You should avoid comparisons like {@code val === true/false} in those cases.
 * @return {boolean}
 */
proto.protoMsg.MailInfo.prototype.getHaveget = function() {
  return /** @type {boolean} */ (jspb.Message.getFieldWithDefault(this, 9, false));
};


/** @param {boolean} value */
proto.protoMsg.MailInfo.prototype.setHaveget = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.MailInfo.prototype.clearHaveget = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasHaveget = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string button = 10;
 * @return {string}
 */
proto.protoMsg.MailInfo.prototype.getButton = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.protoMsg.MailInfo.prototype.setButton = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.MailInfo.prototype.clearButton = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MailInfo.prototype.hasButton = function() {
  return jspb.Message.getField(this, 10) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ReqGetMailList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ReqGetMailList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ReqGetMailList.displayName = 'proto.protoMsg.ReqGetMailList';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ReqGetMailList.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ReqGetMailList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ReqGetMailList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReqGetMailList.toObject = function(includeInstance, msg) {
  var f, obj = {

  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ReqGetMailList}
 */
proto.protoMsg.ReqGetMailList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ReqGetMailList;
  return proto.protoMsg.ReqGetMailList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ReqGetMailList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ReqGetMailList}
 */
proto.protoMsg.ReqGetMailList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ReqGetMailList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ReqGetMailList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ReqGetMailList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReqGetMailList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RetMailList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.RetMailList.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.RetMailList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RetMailList.displayName = 'proto.protoMsg.RetMailList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.RetMailList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RetMailList.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RetMailList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RetMailList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RetMailList.toObject = function(includeInstance, msg) {
  var f, obj = {
    mailsList: jspb.Message.toObjectList(msg.getMailsList(),
    proto.protoMsg.MailInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RetMailList}
 */
proto.protoMsg.RetMailList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RetMailList;
  return proto.protoMsg.RetMailList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RetMailList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RetMailList}
 */
proto.protoMsg.RetMailList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.MailInfo;
      reader.readMessage(value,proto.protoMsg.MailInfo.deserializeBinaryFromReader);
      msg.addMails(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RetMailList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RetMailList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RetMailList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RetMailList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMailsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.MailInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MailInfo mails = 1;
 * @return {!Array.<!proto.protoMsg.MailInfo>}
 */
proto.protoMsg.RetMailList.prototype.getMailsList = function() {
  return /** @type{!Array.<!proto.protoMsg.MailInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.MailInfo, 1));
};


/** @param {!Array.<!proto.protoMsg.MailInfo>} value */
proto.protoMsg.RetMailList.prototype.setMailsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.MailInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.MailInfo}
 */
proto.protoMsg.RetMailList.prototype.addMails = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.MailInfo, opt_index);
};


proto.protoMsg.RetMailList.prototype.clearMailsList = function() {
  this.setMailsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ReqMailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ReqMailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ReqMailInfo.displayName = 'proto.protoMsg.ReqMailInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ReqMailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ReqMailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ReqMailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReqMailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    mailid: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ReqMailInfo}
 */
proto.protoMsg.ReqMailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ReqMailInfo;
  return proto.protoMsg.ReqMailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ReqMailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ReqMailInfo}
 */
proto.protoMsg.ReqMailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMailid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ReqMailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ReqMailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ReqMailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReqMailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 mailid = 1;
 * @return {number}
 */
proto.protoMsg.ReqMailInfo.prototype.getMailid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ReqMailInfo.prototype.setMailid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ReqMailInfo.prototype.clearMailid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ReqMailInfo.prototype.hasMailid = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RetMailInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RetMailInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RetMailInfo.displayName = 'proto.protoMsg.RetMailInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RetMailInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RetMailInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RetMailInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RetMailInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    mail: (f = msg.getMail()) && proto.protoMsg.MailInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RetMailInfo}
 */
proto.protoMsg.RetMailInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RetMailInfo;
  return proto.protoMsg.RetMailInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RetMailInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RetMailInfo}
 */
proto.protoMsg.RetMailInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.MailInfo;
      reader.readMessage(value,proto.protoMsg.MailInfo.deserializeBinaryFromReader);
      msg.setMail(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RetMailInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RetMailInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RetMailInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RetMailInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMail();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protoMsg.MailInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional MailInfo mail = 1;
 * @return {?proto.protoMsg.MailInfo}
 */
proto.protoMsg.RetMailInfo.prototype.getMail = function() {
  return /** @type{?proto.protoMsg.MailInfo} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.MailInfo, 1));
};


/** @param {?proto.protoMsg.MailInfo|undefined} value */
proto.protoMsg.RetMailInfo.prototype.setMail = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.protoMsg.RetMailInfo.prototype.clearMail = function() {
  this.setMail(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RetMailInfo.prototype.hasMail = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DelMail = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.DelMail.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.DelMail, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DelMail.displayName = 'proto.protoMsg.DelMail';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.DelMail.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DelMail.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DelMail.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DelMail} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DelMail.toObject = function(includeInstance, msg) {
  var f, obj = {
    mailidList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DelMail}
 */
proto.protoMsg.DelMail.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DelMail;
  return proto.protoMsg.DelMail.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DelMail} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DelMail}
 */
proto.protoMsg.DelMail.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.addMailid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DelMail.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DelMail.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DelMail} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DelMail.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMailidList();
  if (f.length > 0) {
    writer.writeRepeatedUint64(
      1,
      f
    );
  }
};


/**
 * repeated uint64 mailid = 1;
 * @return {!Array.<number>}
 */
proto.protoMsg.DelMail.prototype.getMailidList = function() {
  return /** @type {!Array.<number>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<number>} value */
proto.protoMsg.DelMail.prototype.setMailidList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!number} value
 * @param {number=} opt_index
 */
proto.protoMsg.DelMail.prototype.addMailid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.protoMsg.DelMail.prototype.clearMailidList = function() {
  this.setMailidList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.GetMailObj = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.GetMailObj, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.GetMailObj.displayName = 'proto.protoMsg.GetMailObj';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.GetMailObj.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.GetMailObj.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.GetMailObj} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GetMailObj.toObject = function(includeInstance, msg) {
  var f, obj = {
    mailid: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.GetMailObj}
 */
proto.protoMsg.GetMailObj.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.GetMailObj;
  return proto.protoMsg.GetMailObj.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.GetMailObj} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.GetMailObj}
 */
proto.protoMsg.GetMailObj.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMailid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.GetMailObj.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.GetMailObj.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.GetMailObj} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GetMailObj.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
};


/**
 * optional uint64 mailid = 1;
 * @return {number}
 */
proto.protoMsg.GetMailObj.prototype.getMailid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.GetMailObj.prototype.setMailid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.GetMailObj.prototype.clearMailid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GetMailObj.prototype.hasMailid = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.AnnuonceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.AnnuonceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.AnnuonceInfo.displayName = 'proto.protoMsg.AnnuonceInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.AnnuonceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.AnnuonceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.AnnuonceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.AnnuonceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    starttime: jspb.Message.getField(msg, 2),
    endtime: jspb.Message.getField(msg, 3),
    internaltime: jspb.Message.getField(msg, 4),
    content: jspb.Message.getField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.AnnuonceInfo}
 */
proto.protoMsg.AnnuonceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.AnnuonceInfo;
  return proto.protoMsg.AnnuonceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.AnnuonceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.AnnuonceInfo}
 */
proto.protoMsg.AnnuonceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setStarttime(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setEndtime(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setInternaltime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.AnnuonceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.AnnuonceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.AnnuonceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.AnnuonceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeInt64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeInt64(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.AnnuonceInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.AnnuonceInfo.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.AnnuonceInfo.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AnnuonceInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional int64 startTime = 2;
 * @return {number}
 */
proto.protoMsg.AnnuonceInfo.prototype.getStarttime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.AnnuonceInfo.prototype.setStarttime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.AnnuonceInfo.prototype.clearStarttime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AnnuonceInfo.prototype.hasStarttime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 endTime = 3;
 * @return {number}
 */
proto.protoMsg.AnnuonceInfo.prototype.getEndtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.AnnuonceInfo.prototype.setEndtime = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.AnnuonceInfo.prototype.clearEndtime = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AnnuonceInfo.prototype.hasEndtime = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional int64 internalTime = 4;
 * @return {number}
 */
proto.protoMsg.AnnuonceInfo.prototype.getInternaltime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.AnnuonceInfo.prototype.setInternaltime = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.AnnuonceInfo.prototype.clearInternaltime = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AnnuonceInfo.prototype.hasInternaltime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string content = 5;
 * @return {string}
 */
proto.protoMsg.AnnuonceInfo.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.protoMsg.AnnuonceInfo.prototype.setContent = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.AnnuonceInfo.prototype.clearContent = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.AnnuonceInfo.prototype.hasContent = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.InitAnnuonceInfoRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.InitAnnuonceInfoRet.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.InitAnnuonceInfoRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.InitAnnuonceInfoRet.displayName = 'proto.protoMsg.InitAnnuonceInfoRet';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.InitAnnuonceInfoRet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.InitAnnuonceInfoRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.InitAnnuonceInfoRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.InitAnnuonceInfoRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.InitAnnuonceInfoRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.protoMsg.AnnuonceInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.InitAnnuonceInfoRet}
 */
proto.protoMsg.InitAnnuonceInfoRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.InitAnnuonceInfoRet;
  return proto.protoMsg.InitAnnuonceInfoRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.InitAnnuonceInfoRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.InitAnnuonceInfoRet}
 */
proto.protoMsg.InitAnnuonceInfoRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.AnnuonceInfo;
      reader.readMessage(value,proto.protoMsg.AnnuonceInfo.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.InitAnnuonceInfoRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.InitAnnuonceInfoRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.InitAnnuonceInfoRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.InitAnnuonceInfoRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.AnnuonceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated AnnuonceInfo item = 1;
 * @return {!Array.<!proto.protoMsg.AnnuonceInfo>}
 */
proto.protoMsg.InitAnnuonceInfoRet.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.protoMsg.AnnuonceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.AnnuonceInfo, 1));
};


/** @param {!Array.<!proto.protoMsg.AnnuonceInfo>} value */
proto.protoMsg.InitAnnuonceInfoRet.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.AnnuonceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.AnnuonceInfo}
 */
proto.protoMsg.InitAnnuonceInfoRet.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.AnnuonceInfo, opt_index);
};


proto.protoMsg.InitAnnuonceInfoRet.prototype.clearItemList = function() {
  this.setItemList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.FriendInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.FriendInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.FriendInfo.displayName = 'proto.protoMsg.FriendInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.FriendInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.FriendInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.FriendInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.FriendInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    state: jspb.Message.getField(msg, 3),
    time: jspb.Message.getField(msg, 4),
    url: jspb.Message.getField(msg, 5),
    enterplat: jspb.Message.getField(msg, 6),
    qqvip: jspb.Message.getField(msg, 7),
    nickname: jspb.Message.getField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.FriendInfo}
 */
proto.protoMsg.FriendInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.FriendInfo;
  return proto.protoMsg.FriendInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.FriendInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.FriendInfo}
 */
proto.protoMsg.FriendInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setEnterplat(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQqvip(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setNickname(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.FriendInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.FriendInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.FriendInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.FriendInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.FriendInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.FriendInfo.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.FriendInfo.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protoMsg.FriendInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.FriendInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.FriendInfo.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 state = 3;
 * @return {number}
 */
proto.protoMsg.FriendInfo.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.FriendInfo.prototype.setState = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.FriendInfo.prototype.clearState = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 time = 4;
 * @return {number}
 */
proto.protoMsg.FriendInfo.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.FriendInfo.prototype.setTime = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.FriendInfo.prototype.clearTime = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string url = 5;
 * @return {string}
 */
proto.protoMsg.FriendInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.protoMsg.FriendInfo.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.FriendInfo.prototype.clearUrl = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string enterplat = 6;
 * @return {string}
 */
proto.protoMsg.FriendInfo.prototype.getEnterplat = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.FriendInfo.prototype.setEnterplat = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.FriendInfo.prototype.clearEnterplat = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasEnterplat = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 qqvip = 7;
 * @return {number}
 */
proto.protoMsg.FriendInfo.prototype.getQqvip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.FriendInfo.prototype.setQqvip = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.FriendInfo.prototype.clearQqvip = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasQqvip = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string nickname = 8;
 * @return {string}
 */
proto.protoMsg.FriendInfo.prototype.getNickname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.protoMsg.FriendInfo.prototype.setNickname = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.FriendInfo.prototype.clearNickname = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendInfo.prototype.hasNickname = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.PlatFriendStateReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.PlatFriendStateReq.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.PlatFriendStateReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.PlatFriendStateReq.displayName = 'proto.protoMsg.PlatFriendStateReq';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.PlatFriendStateReq.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.PlatFriendStateReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.PlatFriendStateReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.PlatFriendStateReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlatFriendStateReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    openidList: jspb.Message.getRepeatedField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.PlatFriendStateReq}
 */
proto.protoMsg.PlatFriendStateReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.PlatFriendStateReq;
  return proto.protoMsg.PlatFriendStateReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.PlatFriendStateReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.PlatFriendStateReq}
 */
proto.protoMsg.PlatFriendStateReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.addOpenid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.PlatFriendStateReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.PlatFriendStateReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.PlatFriendStateReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlatFriendStateReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getOpenidList();
  if (f.length > 0) {
    writer.writeRepeatedString(
      1,
      f
    );
  }
};


/**
 * repeated string openid = 1;
 * @return {!Array.<string>}
 */
proto.protoMsg.PlatFriendStateReq.prototype.getOpenidList = function() {
  return /** @type {!Array.<string>} */ (jspb.Message.getRepeatedField(this, 1));
};


/** @param {!Array.<string>} value */
proto.protoMsg.PlatFriendStateReq.prototype.setOpenidList = function(value) {
  jspb.Message.setField(this, 1, value || []);
};


/**
 * @param {!string} value
 * @param {number=} opt_index
 */
proto.protoMsg.PlatFriendStateReq.prototype.addOpenid = function(value, opt_index) {
  jspb.Message.addToRepeatedField(this, 1, value, opt_index);
};


proto.protoMsg.PlatFriendStateReq.prototype.clearOpenidList = function() {
  this.setOpenidList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.PlatFriendState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.PlatFriendState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.PlatFriendState.displayName = 'proto.protoMsg.PlatFriendState';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.PlatFriendState.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.PlatFriendState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.PlatFriendState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlatFriendState.toObject = function(includeInstance, msg) {
  var f, obj = {
    openid: jspb.Message.getField(msg, 1),
    uid: jspb.Message.getField(msg, 2),
    state: jspb.Message.getField(msg, 3),
    time: jspb.Message.getField(msg, 4),
    name: jspb.Message.getField(msg, 5)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.PlatFriendState}
 */
proto.protoMsg.PlatFriendState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.PlatFriendState;
  return proto.protoMsg.PlatFriendState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.PlatFriendState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.PlatFriendState}
 */
proto.protoMsg.PlatFriendState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTime(value);
      break;
    case 5:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.PlatFriendState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.PlatFriendState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.PlatFriendState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlatFriendState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeString(
      5,
      f
    );
  }
};


/**
 * optional string openid = 1;
 * @return {string}
 */
proto.protoMsg.PlatFriendState.prototype.getOpenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.PlatFriendState.prototype.setOpenid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.PlatFriendState.prototype.clearOpenid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlatFriendState.prototype.hasOpenid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 uid = 2;
 * @return {number}
 */
proto.protoMsg.PlatFriendState.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.PlatFriendState.prototype.setUid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.PlatFriendState.prototype.clearUid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlatFriendState.prototype.hasUid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 state = 3;
 * @return {number}
 */
proto.protoMsg.PlatFriendState.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.PlatFriendState.prototype.setState = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.PlatFriendState.prototype.clearState = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlatFriendState.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 time = 4;
 * @return {number}
 */
proto.protoMsg.PlatFriendState.prototype.getTime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.PlatFriendState.prototype.setTime = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.PlatFriendState.prototype.clearTime = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlatFriendState.prototype.hasTime = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional string name = 5;
 * @return {string}
 */
proto.protoMsg.PlatFriendState.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 5, ""));
};


/** @param {string} value */
proto.protoMsg.PlatFriendState.prototype.setName = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.PlatFriendState.prototype.clearName = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.PlatFriendState.prototype.hasName = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.PlatFriendStateRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.PlatFriendStateRet.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.PlatFriendStateRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.PlatFriendStateRet.displayName = 'proto.protoMsg.PlatFriendStateRet';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.PlatFriendStateRet.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.PlatFriendStateRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.PlatFriendStateRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.PlatFriendStateRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlatFriendStateRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    dataList: jspb.Message.toObjectList(msg.getDataList(),
    proto.protoMsg.PlatFriendState.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.PlatFriendStateRet}
 */
proto.protoMsg.PlatFriendStateRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.PlatFriendStateRet;
  return proto.protoMsg.PlatFriendStateRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.PlatFriendStateRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.PlatFriendStateRet}
 */
proto.protoMsg.PlatFriendStateRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.PlatFriendState;
      reader.readMessage(value,proto.protoMsg.PlatFriendState.deserializeBinaryFromReader);
      msg.addData(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.PlatFriendStateRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.PlatFriendStateRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.PlatFriendStateRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.PlatFriendStateRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDataList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.PlatFriendState.serializeBinaryToWriter
    );
  }
};


/**
 * repeated PlatFriendState data = 1;
 * @return {!Array.<!proto.protoMsg.PlatFriendState>}
 */
proto.protoMsg.PlatFriendStateRet.prototype.getDataList = function() {
  return /** @type{!Array.<!proto.protoMsg.PlatFriendState>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.PlatFriendState, 1));
};


/** @param {!Array.<!proto.protoMsg.PlatFriendState>} value */
proto.protoMsg.PlatFriendStateRet.prototype.setDataList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.PlatFriendState=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.PlatFriendState}
 */
proto.protoMsg.PlatFriendStateRet.prototype.addData = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.PlatFriendState, opt_index);
};


proto.protoMsg.PlatFriendStateRet.prototype.clearDataList = function() {
  this.setDataList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.FriendRankInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.FriendRankInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.FriendRankInfo.displayName = 'proto.protoMsg.FriendRankInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.FriendRankInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.FriendRankInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.FriendRankInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.FriendRankInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    url: jspb.Message.getField(msg, 3),
    solorating: jspb.Message.getOptionalFloatingPointField(msg, 4),
    duorating: jspb.Message.getOptionalFloatingPointField(msg, 5),
    squadrating: jspb.Message.getOptionalFloatingPointField(msg, 6),
    qqvip: jspb.Message.getField(msg, 7),
    gameeenter: jspb.Message.getField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.FriendRankInfo}
 */
proto.protoMsg.FriendRankInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.FriendRankInfo;
  return proto.protoMsg.FriendRankInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.FriendRankInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.FriendRankInfo}
 */
proto.protoMsg.FriendRankInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSolorating(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDuorating(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSquadrating(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setQqvip(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameeenter(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.FriendRankInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.FriendRankInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.FriendRankInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.FriendRankInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeFloat(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeFloat(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional uint64 Uid = 1;
 * @return {number}
 */
proto.protoMsg.FriendRankInfo.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.FriendRankInfo.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string Name = 2;
 * @return {string}
 */
proto.protoMsg.FriendRankInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.FriendRankInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string Url = 3;
 * @return {string}
 */
proto.protoMsg.FriendRankInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.FriendRankInfo.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearUrl = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float SoloRating = 4;
 * @return {number}
 */
proto.protoMsg.FriendRankInfo.prototype.getSolorating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.protoMsg.FriendRankInfo.prototype.setSolorating = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearSolorating = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasSolorating = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional float DuoRating = 5;
 * @return {number}
 */
proto.protoMsg.FriendRankInfo.prototype.getDuorating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 5, 0.0));
};


/** @param {number} value */
proto.protoMsg.FriendRankInfo.prototype.setDuorating = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearDuorating = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasDuorating = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional float SquadRating = 6;
 * @return {number}
 */
proto.protoMsg.FriendRankInfo.prototype.getSquadrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 6, 0.0));
};


/** @param {number} value */
proto.protoMsg.FriendRankInfo.prototype.setSquadrating = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearSquadrating = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasSquadrating = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 QqVip = 7;
 * @return {number}
 */
proto.protoMsg.FriendRankInfo.prototype.getQqvip = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.FriendRankInfo.prototype.setQqvip = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearQqvip = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasQqvip = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string GameEenter = 8;
 * @return {string}
 */
proto.protoMsg.FriendRankInfo.prototype.getGameeenter = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.protoMsg.FriendRankInfo.prototype.setGameeenter = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.FriendRankInfo.prototype.clearGameeenter = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendRankInfo.prototype.hasGameeenter = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SyncFriendRankList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SyncFriendRankList.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SyncFriendRankList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SyncFriendRankList.displayName = 'proto.protoMsg.SyncFriendRankList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SyncFriendRankList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SyncFriendRankList.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SyncFriendRankList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SyncFriendRankList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncFriendRankList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.protoMsg.FriendRankInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SyncFriendRankList}
 */
proto.protoMsg.SyncFriendRankList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SyncFriendRankList;
  return proto.protoMsg.SyncFriendRankList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SyncFriendRankList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SyncFriendRankList}
 */
proto.protoMsg.SyncFriendRankList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.FriendRankInfo;
      reader.readMessage(value,proto.protoMsg.FriendRankInfo.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SyncFriendRankList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SyncFriendRankList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SyncFriendRankList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncFriendRankList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.FriendRankInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FriendRankInfo Item = 1;
 * @return {!Array.<!proto.protoMsg.FriendRankInfo>}
 */
proto.protoMsg.SyncFriendRankList.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.protoMsg.FriendRankInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.FriendRankInfo, 1));
};


/** @param {!Array.<!proto.protoMsg.FriendRankInfo>} value */
proto.protoMsg.SyncFriendRankList.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.FriendRankInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.FriendRankInfo}
 */
proto.protoMsg.SyncFriendRankList.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.FriendRankInfo, opt_index);
};


proto.protoMsg.SyncFriendRankList.prototype.clearItemList = function() {
  this.setItemList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SyncFriendList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SyncFriendList.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SyncFriendList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SyncFriendList.displayName = 'proto.protoMsg.SyncFriendList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SyncFriendList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SyncFriendList.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SyncFriendList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SyncFriendList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncFriendList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.protoMsg.FriendInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SyncFriendList}
 */
proto.protoMsg.SyncFriendList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SyncFriendList;
  return proto.protoMsg.SyncFriendList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SyncFriendList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SyncFriendList}
 */
proto.protoMsg.SyncFriendList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.FriendInfo;
      reader.readMessage(value,proto.protoMsg.FriendInfo.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SyncFriendList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SyncFriendList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SyncFriendList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncFriendList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.FriendInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FriendInfo item = 1;
 * @return {!Array.<!proto.protoMsg.FriendInfo>}
 */
proto.protoMsg.SyncFriendList.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.protoMsg.FriendInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.FriendInfo, 1));
};


/** @param {!Array.<!proto.protoMsg.FriendInfo>} value */
proto.protoMsg.SyncFriendList.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.FriendInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.FriendInfo}
 */
proto.protoMsg.SyncFriendList.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.FriendInfo, opt_index);
};


proto.protoMsg.SyncFriendList.prototype.clearItemList = function() {
  this.setItemList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.FriendApplyInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.FriendApplyInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.FriendApplyInfo.displayName = 'proto.protoMsg.FriendApplyInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.FriendApplyInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.FriendApplyInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.FriendApplyInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.FriendApplyInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    applytime: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.FriendApplyInfo}
 */
proto.protoMsg.FriendApplyInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.FriendApplyInfo;
  return proto.protoMsg.FriendApplyInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.FriendApplyInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.FriendApplyInfo}
 */
proto.protoMsg.FriendApplyInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setApplytime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.FriendApplyInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.FriendApplyInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.FriendApplyInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.FriendApplyInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeInt64(
      3,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.FriendApplyInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.FriendApplyInfo.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.FriendApplyInfo.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendApplyInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protoMsg.FriendApplyInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.FriendApplyInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.FriendApplyInfo.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendApplyInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional int64 applyTime = 3;
 * @return {number}
 */
proto.protoMsg.FriendApplyInfo.prototype.getApplytime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.FriendApplyInfo.prototype.setApplytime = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.FriendApplyInfo.prototype.clearApplytime = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.FriendApplyInfo.prototype.hasApplytime = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SyncFriendApplyList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SyncFriendApplyList.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SyncFriendApplyList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SyncFriendApplyList.displayName = 'proto.protoMsg.SyncFriendApplyList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SyncFriendApplyList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SyncFriendApplyList.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SyncFriendApplyList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SyncFriendApplyList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncFriendApplyList.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemList: jspb.Message.toObjectList(msg.getItemList(),
    proto.protoMsg.FriendApplyInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SyncFriendApplyList}
 */
proto.protoMsg.SyncFriendApplyList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SyncFriendApplyList;
  return proto.protoMsg.SyncFriendApplyList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SyncFriendApplyList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SyncFriendApplyList}
 */
proto.protoMsg.SyncFriendApplyList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.FriendApplyInfo;
      reader.readMessage(value,proto.protoMsg.FriendApplyInfo.deserializeBinaryFromReader);
      msg.addItem(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SyncFriendApplyList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SyncFriendApplyList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SyncFriendApplyList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncFriendApplyList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.FriendApplyInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated FriendApplyInfo item = 1;
 * @return {!Array.<!proto.protoMsg.FriendApplyInfo>}
 */
proto.protoMsg.SyncFriendApplyList.prototype.getItemList = function() {
  return /** @type{!Array.<!proto.protoMsg.FriendApplyInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.FriendApplyInfo, 1));
};


/** @param {!Array.<!proto.protoMsg.FriendApplyInfo>} value */
proto.protoMsg.SyncFriendApplyList.prototype.setItemList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.FriendApplyInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.FriendApplyInfo}
 */
proto.protoMsg.SyncFriendApplyList.prototype.addItem = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.FriendApplyInfo, opt_index);
};


proto.protoMsg.SyncFriendApplyList.prototype.clearItemList = function() {
  this.setItemList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DoSendItemReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.DoSendItemReq.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.DoSendItemReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DoSendItemReq.displayName = 'proto.protoMsg.DoSendItemReq';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.DoSendItemReq.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DoSendItemReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DoSendItemReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DoSendItemReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DoSendItemReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    title: jspb.Message.getField(msg, 1),
    content: jspb.Message.getField(msg, 2),
    objsList: jspb.Message.toObjectList(msg.getObjsList(),
    proto.protoMsg.MailObject.toObject, includeInstance),
    url: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DoSendItemReq}
 */
proto.protoMsg.DoSendItemReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DoSendItemReq;
  return proto.protoMsg.DoSendItemReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DoSendItemReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DoSendItemReq}
 */
proto.protoMsg.DoSendItemReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTitle(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setContent(value);
      break;
    case 3:
      var value = new proto.protoMsg.MailObject;
      reader.readMessage(value,proto.protoMsg.MailObject.deserializeBinaryFromReader);
      msg.addObjs(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DoSendItemReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DoSendItemReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DoSendItemReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DoSendItemReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getObjsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protoMsg.MailObject.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
};


/**
 * optional string title = 1;
 * @return {string}
 */
proto.protoMsg.DoSendItemReq.prototype.getTitle = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.DoSendItemReq.prototype.setTitle = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.DoSendItemReq.prototype.clearTitle = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DoSendItemReq.prototype.hasTitle = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string content = 2;
 * @return {string}
 */
proto.protoMsg.DoSendItemReq.prototype.getContent = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.DoSendItemReq.prototype.setContent = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.DoSendItemReq.prototype.clearContent = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DoSendItemReq.prototype.hasContent = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated MailObject objs = 3;
 * @return {!Array.<!proto.protoMsg.MailObject>}
 */
proto.protoMsg.DoSendItemReq.prototype.getObjsList = function() {
  return /** @type{!Array.<!proto.protoMsg.MailObject>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.MailObject, 3));
};


/** @param {!Array.<!proto.protoMsg.MailObject>} value */
proto.protoMsg.DoSendItemReq.prototype.setObjsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protoMsg.MailObject=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.MailObject}
 */
proto.protoMsg.DoSendItemReq.prototype.addObjs = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protoMsg.MailObject, opt_index);
};


proto.protoMsg.DoSendItemReq.prototype.clearObjsList = function() {
  this.setObjsList([]);
};


/**
 * optional string url = 4;
 * @return {string}
 */
proto.protoMsg.DoSendItemReq.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.protoMsg.DoSendItemReq.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.DoSendItemReq.prototype.clearUrl = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DoSendItemReq.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.GameSvrState = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.GameSvrState, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.GameSvrState.displayName = 'proto.protoMsg.GameSvrState';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.GameSvrState.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.GameSvrState.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.GameSvrState} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GameSvrState.toObject = function(includeInstance, msg) {
  var f, obj = {
    dteventtime: jspb.Message.getField(msg, 1),
    vgameip: jspb.Message.getField(msg, 2),
    izoneareaid: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.GameSvrState}
 */
proto.protoMsg.GameSvrState.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.GameSvrState;
  return proto.protoMsg.GameSvrState.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.GameSvrState} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.GameSvrState}
 */
proto.protoMsg.GameSvrState.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameip(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.GameSvrState.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.GameSvrState.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.GameSvrState} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GameSvrState.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional string DtEventTime = 1;
 * @return {string}
 */
proto.protoMsg.GameSvrState.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.GameSvrState.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.GameSvrState.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GameSvrState.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string VGameIP = 2;
 * @return {string}
 */
proto.protoMsg.GameSvrState.prototype.getVgameip = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.GameSvrState.prototype.setVgameip = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.GameSvrState.prototype.clearVgameip = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GameSvrState.prototype.hasVgameip = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 IZoneAreaID = 3;
 * @return {number}
 */
proto.protoMsg.GameSvrState.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.GameSvrState.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.GameSvrState.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GameSvrState.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RoundFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RoundFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RoundFlow.displayName = 'proto.protoMsg.RoundFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RoundFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RoundFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RoundFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RoundFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    battleid: jspb.Message.getField(msg, 7),
    battletype: jspb.Message.getField(msg, 8),
    roundscore: jspb.Message.getField(msg, 9),
    roundtime: jspb.Message.getField(msg, 10),
    result: jspb.Message.getField(msg, 11),
    rank: jspb.Message.getField(msg, 12),
    gold: jspb.Message.getField(msg, 13),
    totalbattlenum: jspb.Message.getField(msg, 14),
    firstnum: jspb.Message.getField(msg, 15),
    toptennum: jspb.Message.getField(msg, 16),
    firstrate: jspb.Message.getField(msg, 17),
    toptenrate: jspb.Message.getField(msg, 18),
    singlemaxkill: jspb.Message.getField(msg, 19),
    totalkillnum: jspb.Message.getField(msg, 20),
    averagekillnum: jspb.Message.getField(msg, 21),
    singlemaxheadshot: jspb.Message.getField(msg, 22),
    totalheadshot: jspb.Message.getField(msg, 23),
    totaleffectharm: jspb.Message.getField(msg, 24),
    averageeffectharm: jspb.Message.getField(msg, 25),
    headshotrate: jspb.Message.getField(msg, 26),
    recvitemusenum: jspb.Message.getField(msg, 27),
    carusenum: jspb.Message.getField(msg, 28),
    cardestroynum: jspb.Message.getField(msg, 29),
    killrating: jspb.Message.getOptionalFloatingPointField(msg, 30),
    winrating: jspb.Message.getOptionalFloatingPointField(msg, 31),
    roundrating: jspb.Message.getOptionalFloatingPointField(msg, 32),
    totalrating: jspb.Message.getOptionalFloatingPointField(msg, 33),
    playernum: jspb.Message.getField(msg, 34),
    ainum: jspb.Message.getField(msg, 35),
    playerrundistance: jspb.Message.getOptionalFloatingPointField(msg, 36),
    carrundistance: jspb.Message.getOptionalFloatingPointField(msg, 37),
    deadtype: jspb.Message.getField(msg, 38),
    recoverhp: jspb.Message.getField(msg, 39),
    bandagenum: jspb.Message.getField(msg, 40),
    medicalboxnum: jspb.Message.getField(msg, 41),
    painkillernum: jspb.Message.getField(msg, 42),
    energynum: jspb.Message.getField(msg, 43),
    headshotnum: jspb.Message.getField(msg, 44),
    effectharm: jspb.Message.getField(msg, 45),
    shotnum: jspb.Message.getField(msg, 46),
    revivenum: jspb.Message.getField(msg, 47),
    killdistance: jspb.Message.getOptionalFloatingPointField(msg, 48),
    killstmnum: jspb.Message.getField(msg, 49),
    rcarusenum: jspb.Message.getField(msg, 50),
    rcardestorynum: jspb.Message.getField(msg, 51),
    attacknum: jspb.Message.getField(msg, 52),
    skybox: jspb.Message.getField(msg, 53),
    kill: jspb.Message.getField(msg, 54),
    totalsurvivetime: jspb.Message.getField(msg, 55),
    totaldistance: jspb.Message.getOptionalFloatingPointField(msg, 56),
    totalrank: jspb.Message.getField(msg, 57),
    solorating: jspb.Message.getOptionalFloatingPointField(msg, 58),
    duorating: jspb.Message.getOptionalFloatingPointField(msg, 59),
    squadrating: jspb.Message.getOptionalFloatingPointField(msg, 60),
    solorank: jspb.Message.getField(msg, 61),
    duorank: jspb.Message.getField(msg, 62),
    squadrank: jspb.Message.getField(msg, 63),
    toprating: jspb.Message.getOptionalFloatingPointField(msg, 64),
    totalcoin: jspb.Message.getField(msg, 65),
    totalcardistance: jspb.Message.getOptionalFloatingPointField(msg, 66)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RoundFlow}
 */
proto.protoMsg.RoundFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RoundFlow;
  return proto.protoMsg.RoundFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RoundFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RoundFlow}
 */
proto.protoMsg.RoundFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBattletype(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoundscore(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoundtime(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResult(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRank(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGold(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalbattlenum(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFirstnum(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setToptennum(value);
      break;
    case 17:
      var value = /** @type {string} */ (reader.readString());
      msg.setFirstrate(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setToptenrate(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSinglemaxkill(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalkillnum(value);
      break;
    case 21:
      var value = /** @type {string} */ (reader.readString());
      msg.setAveragekillnum(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSinglemaxheadshot(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalheadshot(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotaleffectharm(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setAverageeffectharm(value);
      break;
    case 26:
      var value = /** @type {string} */ (reader.readString());
      msg.setHeadshotrate(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecvitemusenum(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCarusenum(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCardestroynum(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setKillrating(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWinrating(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRoundrating(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalrating(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayernum(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAinum(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setPlayerrundistance(value);
      break;
    case 37:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setCarrundistance(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDeadtype(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecoverhp(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBandagenum(value);
      break;
    case 41:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMedicalboxnum(value);
      break;
    case 42:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPainkillernum(value);
      break;
    case 43:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEnergynum(value);
      break;
    case 44:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeadshotnum(value);
      break;
    case 45:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEffectharm(value);
      break;
    case 46:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShotnum(value);
      break;
    case 47:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRevivenum(value);
      break;
    case 48:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setKilldistance(value);
      break;
    case 49:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKillstmnum(value);
      break;
    case 50:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRcarusenum(value);
      break;
    case 51:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRcardestorynum(value);
      break;
    case 52:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAttacknum(value);
      break;
    case 53:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkybox(value);
      break;
    case 54:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKill(value);
      break;
    case 55:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalsurvivetime(value);
      break;
    case 56:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotaldistance(value);
      break;
    case 57:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalrank(value);
      break;
    case 58:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSolorating(value);
      break;
    case 59:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDuorating(value);
      break;
    case 60:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSquadrating(value);
      break;
    case 61:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSolorank(value);
      break;
    case 62:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuorank(value);
      break;
    case 63:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSquadrank(value);
      break;
    case 64:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setToprating(value);
      break;
    case 65:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalcoin(value);
      break;
    case 66:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalcardistance(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RoundFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RoundFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RoundFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RoundFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint64(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeString(
      17,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeString(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint32(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeString(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint32(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeFloat(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeFloat(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeFloat(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeFloat(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeUint32(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeUint32(
      35,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeFloat(
      36,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeFloat(
      37,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeUint32(
      38,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeUint32(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeUint32(
      40,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 41));
  if (f != null) {
    writer.writeUint32(
      41,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 42));
  if (f != null) {
    writer.writeUint32(
      42,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 43));
  if (f != null) {
    writer.writeUint32(
      43,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 44));
  if (f != null) {
    writer.writeUint32(
      44,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 45));
  if (f != null) {
    writer.writeUint32(
      45,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 46));
  if (f != null) {
    writer.writeUint32(
      46,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 47));
  if (f != null) {
    writer.writeUint32(
      47,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 48));
  if (f != null) {
    writer.writeFloat(
      48,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 49));
  if (f != null) {
    writer.writeUint32(
      49,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 50));
  if (f != null) {
    writer.writeUint32(
      50,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 51));
  if (f != null) {
    writer.writeUint32(
      51,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 52));
  if (f != null) {
    writer.writeUint32(
      52,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 53));
  if (f != null) {
    writer.writeUint32(
      53,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 54));
  if (f != null) {
    writer.writeUint32(
      54,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 55));
  if (f != null) {
    writer.writeInt64(
      55,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 56));
  if (f != null) {
    writer.writeFloat(
      56,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 57));
  if (f != null) {
    writer.writeUint32(
      57,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 58));
  if (f != null) {
    writer.writeFloat(
      58,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 59));
  if (f != null) {
    writer.writeFloat(
      59,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 60));
  if (f != null) {
    writer.writeFloat(
      60,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 61));
  if (f != null) {
    writer.writeUint32(
      61,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 62));
  if (f != null) {
    writer.writeUint32(
      62,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 63));
  if (f != null) {
    writer.writeUint32(
      63,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 64));
  if (f != null) {
    writer.writeFloat(
      64,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 65));
  if (f != null) {
    writer.writeUint32(
      65,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 66));
  if (f != null) {
    writer.writeFloat(
      66,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.RoundFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.RoundFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.RoundFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.RoundFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.RoundFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.RoundFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint64 BattleID = 7;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.RoundFlow.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 BattleType = 8;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getBattletype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setBattletype = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.RoundFlow.prototype.clearBattletype = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasBattletype = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 RoundScore = 9;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRoundscore = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRoundscore = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.RoundFlow.prototype.clearRoundscore = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRoundscore = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 RoundTime = 10;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRoundtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRoundtime = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.RoundFlow.prototype.clearRoundtime = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRoundtime = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 Result = 11;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setResult = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.RoundFlow.prototype.clearResult = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasResult = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 Rank = 12;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRank = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.RoundFlow.prototype.clearRank = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRank = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 Gold = 13;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getGold = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setGold = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.RoundFlow.prototype.clearGold = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasGold = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 TotalBattleNum = 14;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalbattlenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalbattlenum = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalbattlenum = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalbattlenum = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 FirstNum = 15;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getFirstnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setFirstnum = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.RoundFlow.prototype.clearFirstnum = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasFirstnum = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 TopTenNum = 16;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getToptennum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setToptennum = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.RoundFlow.prototype.clearToptennum = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasToptennum = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional string FirstRate = 17;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getFirstrate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 17, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setFirstrate = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.RoundFlow.prototype.clearFirstrate = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasFirstrate = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional string TopTenRate = 18;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getToptenrate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setToptenrate = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.RoundFlow.prototype.clearToptenrate = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasToptenrate = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 SingleMaxKill = 19;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getSinglemaxkill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setSinglemaxkill = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.RoundFlow.prototype.clearSinglemaxkill = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasSinglemaxkill = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 TotalKillNum = 20;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalkillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalkillnum = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalkillnum = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalkillnum = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional string AverageKillNum = 21;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getAveragekillnum = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 21, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setAveragekillnum = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.RoundFlow.prototype.clearAveragekillnum = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasAveragekillnum = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 SingleMaxHeadShot = 22;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getSinglemaxheadshot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setSinglemaxheadshot = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.RoundFlow.prototype.clearSinglemaxheadshot = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasSinglemaxheadshot = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 TotalHeadShot = 23;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalheadshot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalheadshot = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalheadshot = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalheadshot = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint32 TotalEffectHarm = 24;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotaleffectharm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotaleffectharm = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotaleffectharm = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotaleffectharm = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string AverageEffectHarm = 25;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getAverageeffectharm = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setAverageeffectharm = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.RoundFlow.prototype.clearAverageeffectharm = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasAverageeffectharm = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional string HeadShotRate = 26;
 * @return {string}
 */
proto.protoMsg.RoundFlow.prototype.getHeadshotrate = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 26, ""));
};


/** @param {string} value */
proto.protoMsg.RoundFlow.prototype.setHeadshotrate = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.RoundFlow.prototype.clearHeadshotrate = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasHeadshotrate = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint32 RecvItemUseNum = 27;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRecvitemusenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRecvitemusenum = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.RoundFlow.prototype.clearRecvitemusenum = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRecvitemusenum = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 CarUseNum = 28;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getCarusenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setCarusenum = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.RoundFlow.prototype.clearCarusenum = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasCarusenum = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 CarDestroyNum = 29;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getCardestroynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setCardestroynum = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.RoundFlow.prototype.clearCardestroynum = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasCardestroynum = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional float KillRating = 30;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getKillrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 30, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setKillrating = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.RoundFlow.prototype.clearKillrating = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasKillrating = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional float WinRating = 31;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getWinrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 31, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setWinrating = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.protoMsg.RoundFlow.prototype.clearWinrating = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasWinrating = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional float RoundRating = 32;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRoundrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 32, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRoundrating = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.protoMsg.RoundFlow.prototype.clearRoundrating = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRoundrating = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional float TotalRating = 33;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 33, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalrating = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalrating = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalrating = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional uint32 PlayerNum = 34;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getPlayernum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setPlayernum = function(value) {
  jspb.Message.setField(this, 34, value);
};


proto.protoMsg.RoundFlow.prototype.clearPlayernum = function() {
  jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasPlayernum = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional uint32 AINum = 35;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getAinum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setAinum = function(value) {
  jspb.Message.setField(this, 35, value);
};


proto.protoMsg.RoundFlow.prototype.clearAinum = function() {
  jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasAinum = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional float PlayerRunDistance = 36;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getPlayerrundistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 36, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setPlayerrundistance = function(value) {
  jspb.Message.setField(this, 36, value);
};


proto.protoMsg.RoundFlow.prototype.clearPlayerrundistance = function() {
  jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasPlayerrundistance = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional float CarRunDistance = 37;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getCarrundistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 37, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setCarrundistance = function(value) {
  jspb.Message.setField(this, 37, value);
};


proto.protoMsg.RoundFlow.prototype.clearCarrundistance = function() {
  jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasCarrundistance = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional uint32 DEADTYPE = 38;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getDeadtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 38, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setDeadtype = function(value) {
  jspb.Message.setField(this, 38, value);
};


proto.protoMsg.RoundFlow.prototype.clearDeadtype = function() {
  jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasDeadtype = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional uint32 RecoverHp = 39;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRecoverhp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 39, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRecoverhp = function(value) {
  jspb.Message.setField(this, 39, value);
};


proto.protoMsg.RoundFlow.prototype.clearRecoverhp = function() {
  jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRecoverhp = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional uint32 BandageNum = 40;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getBandagenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 40, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setBandagenum = function(value) {
  jspb.Message.setField(this, 40, value);
};


proto.protoMsg.RoundFlow.prototype.clearBandagenum = function() {
  jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasBandagenum = function() {
  return jspb.Message.getField(this, 40) != null;
};


/**
 * optional uint32 MedicalBoxNum = 41;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getMedicalboxnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 41, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setMedicalboxnum = function(value) {
  jspb.Message.setField(this, 41, value);
};


proto.protoMsg.RoundFlow.prototype.clearMedicalboxnum = function() {
  jspb.Message.setField(this, 41, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasMedicalboxnum = function() {
  return jspb.Message.getField(this, 41) != null;
};


/**
 * optional uint32 PainkillerNum = 42;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getPainkillernum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 42, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setPainkillernum = function(value) {
  jspb.Message.setField(this, 42, value);
};


proto.protoMsg.RoundFlow.prototype.clearPainkillernum = function() {
  jspb.Message.setField(this, 42, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasPainkillernum = function() {
  return jspb.Message.getField(this, 42) != null;
};


/**
 * optional uint32 EnergyNum = 43;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getEnergynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 43, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setEnergynum = function(value) {
  jspb.Message.setField(this, 43, value);
};


proto.protoMsg.RoundFlow.prototype.clearEnergynum = function() {
  jspb.Message.setField(this, 43, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasEnergynum = function() {
  return jspb.Message.getField(this, 43) != null;
};


/**
 * optional uint32 HeadShotNum = 44;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getHeadshotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 44, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setHeadshotnum = function(value) {
  jspb.Message.setField(this, 44, value);
};


proto.protoMsg.RoundFlow.prototype.clearHeadshotnum = function() {
  jspb.Message.setField(this, 44, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasHeadshotnum = function() {
  return jspb.Message.getField(this, 44) != null;
};


/**
 * optional uint32 EffectHarm = 45;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getEffectharm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 45, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setEffectharm = function(value) {
  jspb.Message.setField(this, 45, value);
};


proto.protoMsg.RoundFlow.prototype.clearEffectharm = function() {
  jspb.Message.setField(this, 45, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasEffectharm = function() {
  return jspb.Message.getField(this, 45) != null;
};


/**
 * optional uint32 ShotNum = 46;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getShotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 46, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setShotnum = function(value) {
  jspb.Message.setField(this, 46, value);
};


proto.protoMsg.RoundFlow.prototype.clearShotnum = function() {
  jspb.Message.setField(this, 46, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasShotnum = function() {
  return jspb.Message.getField(this, 46) != null;
};


/**
 * optional uint32 ReviveNum = 47;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRevivenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 47, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRevivenum = function(value) {
  jspb.Message.setField(this, 47, value);
};


proto.protoMsg.RoundFlow.prototype.clearRevivenum = function() {
  jspb.Message.setField(this, 47, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRevivenum = function() {
  return jspb.Message.getField(this, 47) != null;
};


/**
 * optional float KillDistance = 48;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getKilldistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 48, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setKilldistance = function(value) {
  jspb.Message.setField(this, 48, value);
};


proto.protoMsg.RoundFlow.prototype.clearKilldistance = function() {
  jspb.Message.setField(this, 48, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasKilldistance = function() {
  return jspb.Message.getField(this, 48) != null;
};


/**
 * optional uint32 KillStmNum = 49;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getKillstmnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 49, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setKillstmnum = function(value) {
  jspb.Message.setField(this, 49, value);
};


proto.protoMsg.RoundFlow.prototype.clearKillstmnum = function() {
  jspb.Message.setField(this, 49, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasKillstmnum = function() {
  return jspb.Message.getField(this, 49) != null;
};


/**
 * optional uint32 RCarUseNum = 50;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRcarusenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 50, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRcarusenum = function(value) {
  jspb.Message.setField(this, 50, value);
};


proto.protoMsg.RoundFlow.prototype.clearRcarusenum = function() {
  jspb.Message.setField(this, 50, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRcarusenum = function() {
  return jspb.Message.getField(this, 50) != null;
};


/**
 * optional uint32 RCarDestoryNum = 51;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getRcardestorynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 51, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setRcardestorynum = function(value) {
  jspb.Message.setField(this, 51, value);
};


proto.protoMsg.RoundFlow.prototype.clearRcardestorynum = function() {
  jspb.Message.setField(this, 51, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasRcardestorynum = function() {
  return jspb.Message.getField(this, 51) != null;
};


/**
 * optional uint32 AttackNum = 52;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getAttacknum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 52, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setAttacknum = function(value) {
  jspb.Message.setField(this, 52, value);
};


proto.protoMsg.RoundFlow.prototype.clearAttacknum = function() {
  jspb.Message.setField(this, 52, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasAttacknum = function() {
  return jspb.Message.getField(this, 52) != null;
};


/**
 * optional uint32 SkyBox = 53;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getSkybox = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 53, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setSkybox = function(value) {
  jspb.Message.setField(this, 53, value);
};


proto.protoMsg.RoundFlow.prototype.clearSkybox = function() {
  jspb.Message.setField(this, 53, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasSkybox = function() {
  return jspb.Message.getField(this, 53) != null;
};


/**
 * optional uint32 Kill = 54;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getKill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 54, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setKill = function(value) {
  jspb.Message.setField(this, 54, value);
};


proto.protoMsg.RoundFlow.prototype.clearKill = function() {
  jspb.Message.setField(this, 54, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasKill = function() {
  return jspb.Message.getField(this, 54) != null;
};


/**
 * optional int64 TotalSurviveTime = 55;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalsurvivetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 55, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalsurvivetime = function(value) {
  jspb.Message.setField(this, 55, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalsurvivetime = function() {
  jspb.Message.setField(this, 55, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalsurvivetime = function() {
  return jspb.Message.getField(this, 55) != null;
};


/**
 * optional float TotalDistance = 56;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotaldistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 56, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotaldistance = function(value) {
  jspb.Message.setField(this, 56, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotaldistance = function() {
  jspb.Message.setField(this, 56, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotaldistance = function() {
  return jspb.Message.getField(this, 56) != null;
};


/**
 * optional uint32 TotalRank = 57;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 57, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalrank = function(value) {
  jspb.Message.setField(this, 57, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalrank = function() {
  jspb.Message.setField(this, 57, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalrank = function() {
  return jspb.Message.getField(this, 57) != null;
};


/**
 * optional float SoloRating = 58;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getSolorating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 58, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setSolorating = function(value) {
  jspb.Message.setField(this, 58, value);
};


proto.protoMsg.RoundFlow.prototype.clearSolorating = function() {
  jspb.Message.setField(this, 58, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasSolorating = function() {
  return jspb.Message.getField(this, 58) != null;
};


/**
 * optional float DuoRating = 59;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getDuorating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 59, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setDuorating = function(value) {
  jspb.Message.setField(this, 59, value);
};


proto.protoMsg.RoundFlow.prototype.clearDuorating = function() {
  jspb.Message.setField(this, 59, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasDuorating = function() {
  return jspb.Message.getField(this, 59) != null;
};


/**
 * optional float SquadRating = 60;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getSquadrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 60, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setSquadrating = function(value) {
  jspb.Message.setField(this, 60, value);
};


proto.protoMsg.RoundFlow.prototype.clearSquadrating = function() {
  jspb.Message.setField(this, 60, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasSquadrating = function() {
  return jspb.Message.getField(this, 60) != null;
};


/**
 * optional uint32 SoloRank = 61;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getSolorank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 61, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setSolorank = function(value) {
  jspb.Message.setField(this, 61, value);
};


proto.protoMsg.RoundFlow.prototype.clearSolorank = function() {
  jspb.Message.setField(this, 61, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasSolorank = function() {
  return jspb.Message.getField(this, 61) != null;
};


/**
 * optional uint32 DuoRank = 62;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getDuorank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 62, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setDuorank = function(value) {
  jspb.Message.setField(this, 62, value);
};


proto.protoMsg.RoundFlow.prototype.clearDuorank = function() {
  jspb.Message.setField(this, 62, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasDuorank = function() {
  return jspb.Message.getField(this, 62) != null;
};


/**
 * optional uint32 SquadRank = 63;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getSquadrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 63, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setSquadrank = function(value) {
  jspb.Message.setField(this, 63, value);
};


proto.protoMsg.RoundFlow.prototype.clearSquadrank = function() {
  jspb.Message.setField(this, 63, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasSquadrank = function() {
  return jspb.Message.getField(this, 63) != null;
};


/**
 * optional float TopRating = 64;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getToprating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 64, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setToprating = function(value) {
  jspb.Message.setField(this, 64, value);
};


proto.protoMsg.RoundFlow.prototype.clearToprating = function() {
  jspb.Message.setField(this, 64, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasToprating = function() {
  return jspb.Message.getField(this, 64) != null;
};


/**
 * optional uint32 TotalCoin = 65;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalcoin = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 65, 0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalcoin = function(value) {
  jspb.Message.setField(this, 65, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalcoin = function() {
  jspb.Message.setField(this, 65, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalcoin = function() {
  return jspb.Message.getField(this, 65) != null;
};


/**
 * optional float TotalCarDistance = 66;
 * @return {number}
 */
proto.protoMsg.RoundFlow.prototype.getTotalcardistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 66, 0.0));
};


/** @param {number} value */
proto.protoMsg.RoundFlow.prototype.setTotalcardistance = function(value) {
  jspb.Message.setField(this, 66, value);
};


proto.protoMsg.RoundFlow.prototype.clearTotalcardistance = function() {
  jspb.Message.setField(this, 66, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RoundFlow.prototype.hasTotalcardistance = function() {
  return jspb.Message.getField(this, 66) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CareerData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CareerData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CareerData.displayName = 'proto.protoMsg.CareerData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CareerData.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CareerData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CareerData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CareerData.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    totalbattlenum: jspb.Message.getField(msg, 2),
    totalfirstnum: jspb.Message.getField(msg, 3),
    totaltoptennum: jspb.Message.getField(msg, 4),
    totalkillnum: jspb.Message.getField(msg, 5),
    totalheadshot: jspb.Message.getField(msg, 6),
    totalshotnum: jspb.Message.getField(msg, 7),
    totaleffectharm: jspb.Message.getField(msg, 8),
    totalsurvivetime: jspb.Message.getField(msg, 9),
    totaldistance: jspb.Message.getOptionalFloatingPointField(msg, 10),
    solorating: jspb.Message.getOptionalFloatingPointField(msg, 11),
    solorank: jspb.Message.getField(msg, 12),
    duorating: jspb.Message.getOptionalFloatingPointField(msg, 13),
    duorank: jspb.Message.getField(msg, 14),
    squadrating: jspb.Message.getOptionalFloatingPointField(msg, 15),
    squadrank: jspb.Message.getField(msg, 16),
    totalrating: jspb.Message.getOptionalFloatingPointField(msg, 17),
    totalrank: jspb.Message.getField(msg, 18),
    toprating: jspb.Message.getOptionalFloatingPointField(msg, 19)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CareerData}
 */
proto.protoMsg.CareerData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CareerData;
  return proto.protoMsg.CareerData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CareerData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CareerData}
 */
proto.protoMsg.CareerData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalbattlenum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalfirstnum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotaltoptennum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalkillnum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalheadshot(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalshotnum(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotaleffectharm(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTotalsurvivetime(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotaldistance(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSolorating(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSolorank(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDuorating(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuorank(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSquadrating(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSquadrank(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalrating(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalrank(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setToprating(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CareerData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CareerData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CareerData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CareerData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeInt64(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeFloat(
      19,
      f
    );
  }
};


/**
 * optional uint64 Uid = 1;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CareerData.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 TotalBattleNum = 2;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalbattlenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalbattlenum = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.CareerData.prototype.clearTotalbattlenum = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalbattlenum = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 TotalFirstNum = 3;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalfirstnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalfirstnum = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.CareerData.prototype.clearTotalfirstnum = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalfirstnum = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 TotalTopTenNum = 4;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotaltoptennum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotaltoptennum = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.CareerData.prototype.clearTotaltoptennum = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotaltoptennum = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 TotalKillNum = 5;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalkillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalkillnum = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.CareerData.prototype.clearTotalkillnum = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalkillnum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 TotalHeadShot = 6;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalheadshot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalheadshot = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.CareerData.prototype.clearTotalheadshot = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalheadshot = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 TotalShotNum = 7;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalshotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalshotnum = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.CareerData.prototype.clearTotalshotnum = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalshotnum = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 TotalEffectHarm = 8;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotaleffectharm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotaleffectharm = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.CareerData.prototype.clearTotaleffectharm = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotaleffectharm = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional int64 TotalSurviveTime = 9;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalsurvivetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalsurvivetime = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.CareerData.prototype.clearTotalsurvivetime = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalsurvivetime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float TotalDistance = 10;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotaldistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotaldistance = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.CareerData.prototype.clearTotaldistance = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotaldistance = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float SoloRating = 11;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getSolorating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setSolorating = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.CareerData.prototype.clearSolorating = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasSolorating = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 SoloRank = 12;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getSolorank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setSolorank = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.CareerData.prototype.clearSolorank = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasSolorank = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional float DuoRating = 13;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getDuorating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setDuorating = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.CareerData.prototype.clearDuorating = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasDuorating = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 DuoRank = 14;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getDuorank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setDuorank = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.CareerData.prototype.clearDuorank = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasDuorank = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional float SquadRating = 15;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getSquadrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setSquadrating = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.CareerData.prototype.clearSquadrating = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasSquadrating = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 SquadRank = 16;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getSquadrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setSquadrank = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.CareerData.prototype.clearSquadrank = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasSquadrank = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional float TotalRating = 17;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalrating = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.CareerData.prototype.clearTotalrating = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalrating = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 TotalRank = 18;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getTotalrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setTotalrank = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.CareerData.prototype.clearTotalrank = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasTotalrank = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional float TopRating = 19;
 * @return {number}
 */
proto.protoMsg.CareerData.prototype.getToprating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerData.prototype.setToprating = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.CareerData.prototype.clearToprating = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerData.prototype.hasToprating = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CareerBase = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CareerBase, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CareerBase.displayName = 'proto.protoMsg.CareerBase';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CareerBase.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CareerBase.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CareerBase} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CareerBase.toObject = function(includeInstance, msg) {
  var f, obj = {
    totalbattlenum: jspb.Message.getField(msg, 1),
    firstnum: jspb.Message.getField(msg, 2),
    toptennum: jspb.Message.getField(msg, 3),
    totalkillnum: jspb.Message.getField(msg, 4),
    totalheadshot: jspb.Message.getField(msg, 5),
    totalshotnum: jspb.Message.getField(msg, 6),
    totaleffectharm: jspb.Message.getField(msg, 7),
    survivetime: jspb.Message.getField(msg, 8),
    totaldistance: jspb.Message.getOptionalFloatingPointField(msg, 9),
    solowinrating: jspb.Message.getOptionalFloatingPointField(msg, 10),
    solokillrating: jspb.Message.getOptionalFloatingPointField(msg, 11),
    doublewinrating: jspb.Message.getOptionalFloatingPointField(msg, 12),
    doublekillrating: jspb.Message.getOptionalFloatingPointField(msg, 13),
    fourwinrating: jspb.Message.getOptionalFloatingPointField(msg, 14),
    fourkillrating: jspb.Message.getOptionalFloatingPointField(msg, 15),
    solorating: jspb.Message.getOptionalFloatingPointField(msg, 16),
    doublerating: jspb.Message.getOptionalFloatingPointField(msg, 17),
    fourrating: jspb.Message.getOptionalFloatingPointField(msg, 18),
    totalscore: jspb.Message.getOptionalFloatingPointField(msg, 19),
    totalrank: jspb.Message.getField(msg, 20),
    solorank: jspb.Message.getField(msg, 21),
    doublerank: jspb.Message.getField(msg, 22),
    squadrank: jspb.Message.getField(msg, 23),
    topscore: jspb.Message.getOptionalFloatingPointField(msg, 24),
    singlemaxkill: jspb.Message.getField(msg, 25),
    singlemaxheadshot: jspb.Message.getField(msg, 26),
    recvitemusenum: jspb.Message.getField(msg, 27),
    carusenum: jspb.Message.getField(msg, 28),
    cardestroynum: jspb.Message.getField(msg, 29),
    id: jspb.Message.getField(msg, 30)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CareerBase}
 */
proto.protoMsg.CareerBase.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CareerBase;
  return proto.protoMsg.CareerBase.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CareerBase} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CareerBase}
 */
proto.protoMsg.CareerBase.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalbattlenum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFirstnum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setToptennum(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalkillnum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalheadshot(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalshotnum(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotaleffectharm(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setSurvivetime(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotaldistance(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSolowinrating(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSolokillrating(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDoublewinrating(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDoublekillrating(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFourwinrating(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFourkillrating(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSolorating(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDoublerating(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setFourrating(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotalscore(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalrank(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSolorank(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDoublerank(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSquadrank(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTopscore(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSinglemaxkill(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSinglemaxheadshot(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecvitemusenum(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCarusenum(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCardestroynum(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CareerBase.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CareerBase.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CareerBase} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CareerBase.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeFloat(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeFloat(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeFloat(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeFloat(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeFloat(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeFloat(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeFloat(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeFloat(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint32(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint64(
      30,
      f
    );
  }
};


/**
 * optional uint32 TotalBattleNum = 1;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotalbattlenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotalbattlenum = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CareerBase.prototype.clearTotalbattlenum = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotalbattlenum = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 FirstNum = 2;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getFirstnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setFirstnum = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.CareerBase.prototype.clearFirstnum = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasFirstnum = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 TopTenNum = 3;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getToptennum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setToptennum = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.CareerBase.prototype.clearToptennum = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasToptennum = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 TotalKillNum = 4;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotalkillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotalkillnum = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.CareerBase.prototype.clearTotalkillnum = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotalkillnum = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 TotalHeadShot = 5;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotalheadshot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotalheadshot = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.CareerBase.prototype.clearTotalheadshot = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotalheadshot = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 Totalshotnum = 6;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotalshotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotalshotnum = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.CareerBase.prototype.clearTotalshotnum = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotalshotnum = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 TotalEffectHarm = 7;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotaleffectharm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotaleffectharm = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.CareerBase.prototype.clearTotaleffectharm = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotaleffectharm = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 SurviveTime = 8;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSurvivetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSurvivetime = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.CareerBase.prototype.clearSurvivetime = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSurvivetime = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional float TotalDistance = 9;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotaldistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 9, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotaldistance = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.CareerBase.prototype.clearTotaldistance = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotaldistance = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional float SoloWinRating = 10;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSolowinrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 10, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSolowinrating = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.CareerBase.prototype.clearSolowinrating = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSolowinrating = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional float SoloKillRating = 11;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSolokillrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 11, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSolokillrating = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.CareerBase.prototype.clearSolokillrating = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSolokillrating = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional float DoubleWinRating = 12;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getDoublewinrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 12, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setDoublewinrating = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.CareerBase.prototype.clearDoublewinrating = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasDoublewinrating = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional float DoubleKillRating = 13;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getDoublekillrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 13, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setDoublekillrating = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.CareerBase.prototype.clearDoublekillrating = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasDoublekillrating = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional float FourWinRating = 14;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getFourwinrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 14, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setFourwinrating = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.CareerBase.prototype.clearFourwinrating = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasFourwinrating = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional float FourKillRating = 15;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getFourkillrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setFourkillrating = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.CareerBase.prototype.clearFourkillrating = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasFourkillrating = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional float SoloRating = 16;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSolorating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSolorating = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.CareerBase.prototype.clearSolorating = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSolorating = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional float DoubleRating = 17;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getDoublerating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setDoublerating = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.CareerBase.prototype.clearDoublerating = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasDoublerating = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional float FourRating = 18;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getFourrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setFourrating = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.CareerBase.prototype.clearFourrating = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasFourrating = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional float Totalscore = 19;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotalscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 19, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotalscore = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.CareerBase.prototype.clearTotalscore = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotalscore = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 Totalrank = 20;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTotalrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTotalrank = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.CareerBase.prototype.clearTotalrank = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTotalrank = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 SoloRank = 21;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSolorank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSolorank = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.CareerBase.prototype.clearSolorank = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSolorank = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 DoubleRank = 22;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getDoublerank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setDoublerank = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.CareerBase.prototype.clearDoublerank = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasDoublerank = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 SquadRank = 23;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSquadrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSquadrank = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.CareerBase.prototype.clearSquadrank = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSquadrank = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional float TopScore = 24;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getTopscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 24, 0.0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setTopscore = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.CareerBase.prototype.clearTopscore = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasTopscore = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 SingleMaxKill = 25;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSinglemaxkill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSinglemaxkill = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.CareerBase.prototype.clearSinglemaxkill = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSinglemaxkill = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint32 SingleMaxHeadShot = 26;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getSinglemaxheadshot = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setSinglemaxheadshot = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.CareerBase.prototype.clearSinglemaxheadshot = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasSinglemaxheadshot = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint32 RecvItemUseNum = 27;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getRecvitemusenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setRecvitemusenum = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.CareerBase.prototype.clearRecvitemusenum = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasRecvitemusenum = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 CarUseNum = 28;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getCarusenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setCarusenum = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.CareerBase.prototype.clearCarusenum = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasCarusenum = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 CarDestroyNum = 29;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getCardestroynum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setCardestroynum = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.CareerBase.prototype.clearCardestroynum = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasCardestroynum = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint64 Id = 30;
 * @return {number}
 */
proto.protoMsg.CareerBase.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.protoMsg.CareerBase.prototype.setId = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.CareerBase.prototype.clearId = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CareerBase.prototype.hasId = function() {
  return jspb.Message.getField(this, 30) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.MatchRecord = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.MatchRecord.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.MatchRecord, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.MatchRecord.displayName = 'proto.protoMsg.MatchRecord';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.MatchRecord.repeatedFields_ = [1,2,3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.MatchRecord.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.MatchRecord.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.MatchRecord} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MatchRecord.toObject = function(includeInstance, msg) {
  var f, obj = {
    solomodelList: jspb.Message.toObjectList(msg.getSolomodelList(),
    proto.protoMsg.DayRecordData.toObject, includeInstance),
    duomodelList: jspb.Message.toObjectList(msg.getDuomodelList(),
    proto.protoMsg.DayRecordData.toObject, includeInstance),
    squadmodelList: jspb.Message.toObjectList(msg.getSquadmodelList(),
    proto.protoMsg.DayRecordData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.MatchRecord}
 */
proto.protoMsg.MatchRecord.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.MatchRecord;
  return proto.protoMsg.MatchRecord.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.MatchRecord} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.MatchRecord}
 */
proto.protoMsg.MatchRecord.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.DayRecordData;
      reader.readMessage(value,proto.protoMsg.DayRecordData.deserializeBinaryFromReader);
      msg.addSolomodel(value);
      break;
    case 2:
      var value = new proto.protoMsg.DayRecordData;
      reader.readMessage(value,proto.protoMsg.DayRecordData.deserializeBinaryFromReader);
      msg.addDuomodel(value);
      break;
    case 3:
      var value = new proto.protoMsg.DayRecordData;
      reader.readMessage(value,proto.protoMsg.DayRecordData.deserializeBinaryFromReader);
      msg.addSquadmodel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.MatchRecord.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.MatchRecord.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.MatchRecord} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MatchRecord.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getSolomodelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.DayRecordData.serializeBinaryToWriter
    );
  }
  f = message.getDuomodelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protoMsg.DayRecordData.serializeBinaryToWriter
    );
  }
  f = message.getSquadmodelList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protoMsg.DayRecordData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DayRecordData solomodel = 1;
 * @return {!Array.<!proto.protoMsg.DayRecordData>}
 */
proto.protoMsg.MatchRecord.prototype.getSolomodelList = function() {
  return /** @type{!Array.<!proto.protoMsg.DayRecordData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.DayRecordData, 1));
};


/** @param {!Array.<!proto.protoMsg.DayRecordData>} value */
proto.protoMsg.MatchRecord.prototype.setSolomodelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.DayRecordData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.DayRecordData}
 */
proto.protoMsg.MatchRecord.prototype.addSolomodel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.DayRecordData, opt_index);
};


proto.protoMsg.MatchRecord.prototype.clearSolomodelList = function() {
  this.setSolomodelList([]);
};


/**
 * repeated DayRecordData duomodel = 2;
 * @return {!Array.<!proto.protoMsg.DayRecordData>}
 */
proto.protoMsg.MatchRecord.prototype.getDuomodelList = function() {
  return /** @type{!Array.<!proto.protoMsg.DayRecordData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.DayRecordData, 2));
};


/** @param {!Array.<!proto.protoMsg.DayRecordData>} value */
proto.protoMsg.MatchRecord.prototype.setDuomodelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protoMsg.DayRecordData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.DayRecordData}
 */
proto.protoMsg.MatchRecord.prototype.addDuomodel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protoMsg.DayRecordData, opt_index);
};


proto.protoMsg.MatchRecord.prototype.clearDuomodelList = function() {
  this.setDuomodelList([]);
};


/**
 * repeated DayRecordData squadmodel = 3;
 * @return {!Array.<!proto.protoMsg.DayRecordData>}
 */
proto.protoMsg.MatchRecord.prototype.getSquadmodelList = function() {
  return /** @type{!Array.<!proto.protoMsg.DayRecordData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.DayRecordData, 3));
};


/** @param {!Array.<!proto.protoMsg.DayRecordData>} value */
proto.protoMsg.MatchRecord.prototype.setSquadmodelList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protoMsg.DayRecordData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.DayRecordData}
 */
proto.protoMsg.MatchRecord.prototype.addSquadmodel = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protoMsg.DayRecordData, opt_index);
};


proto.protoMsg.MatchRecord.prototype.clearSquadmodelList = function() {
  this.setSquadmodelList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DayRecordData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.DayRecordData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DayRecordData.displayName = 'proto.protoMsg.DayRecordData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DayRecordData.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DayRecordData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DayRecordData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DayRecordData.toObject = function(includeInstance, msg) {
  var f, obj = {
    nowtime: jspb.Message.getField(msg, 1),
    model: jspb.Message.getField(msg, 2),
    rating: jspb.Message.getOptionalFloatingPointField(msg, 3),
    totalkillnum: jspb.Message.getField(msg, 4),
    daybattlenum: jspb.Message.getField(msg, 5),
    firstnum: jspb.Message.getField(msg, 6),
    toptennum: jspb.Message.getField(msg, 7),
    id: jspb.Message.getField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DayRecordData}
 */
proto.protoMsg.DayRecordData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DayRecordData;
  return proto.protoMsg.DayRecordData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DayRecordData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DayRecordData}
 */
proto.protoMsg.DayRecordData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNowtime(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setModel(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRating(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalkillnum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDaybattlenum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFirstnum(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setToptennum(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DayRecordData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DayRecordData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DayRecordData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DayRecordData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional int64 NowTime = 1;
 * @return {number}
 */
proto.protoMsg.DayRecordData.prototype.getNowtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.DayRecordData.prototype.setNowtime = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.DayRecordData.prototype.clearNowtime = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasNowtime = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 Model = 2;
 * @return {number}
 */
proto.protoMsg.DayRecordData.prototype.getModel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.DayRecordData.prototype.setModel = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.DayRecordData.prototype.clearModel = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasModel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float Rating = 3;
 * @return {number}
 */
proto.protoMsg.DayRecordData.prototype.getRating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.protoMsg.DayRecordData.prototype.setRating = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.DayRecordData.prototype.clearRating = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasRating = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 TotalKillNum = 4;
 * @return {number}
 */
proto.protoMsg.DayRecordData.prototype.getTotalkillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.DayRecordData.prototype.setTotalkillnum = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.DayRecordData.prototype.clearTotalkillnum = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasTotalkillnum = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 DayBattleNum = 5;
 * @return {number}
 */
proto.protoMsg.DayRecordData.prototype.getDaybattlenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.DayRecordData.prototype.setDaybattlenum = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.DayRecordData.prototype.clearDaybattlenum = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasDaybattlenum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 FirstNum = 6;
 * @return {number}
 */
proto.protoMsg.DayRecordData.prototype.getFirstnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.DayRecordData.prototype.setFirstnum = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.DayRecordData.prototype.clearFirstnum = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasFirstnum = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 TopTenNum = 7;
 * @return {number}
 */
proto.protoMsg.DayRecordData.prototype.getToptennum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.DayRecordData.prototype.setToptennum = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.DayRecordData.prototype.clearToptennum = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasToptennum = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string id = 8;
 * @return {string}
 */
proto.protoMsg.DayRecordData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.protoMsg.DayRecordData.prototype.setId = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.DayRecordData.prototype.clearId = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayRecordData.prototype.hasId = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SettleDayData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SettleDayData.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SettleDayData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SettleDayData.displayName = 'proto.protoMsg.SettleDayData';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SettleDayData.repeatedFields_ = [17];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SettleDayData.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SettleDayData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SettleDayData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SettleDayData.toObject = function(includeInstance, msg) {
  var f, obj = {
    firstnum: jspb.Message.getField(msg, 1),
    toptennum: jspb.Message.getField(msg, 2),
    winrating: jspb.Message.getOptionalFloatingPointField(msg, 3),
    killrating: jspb.Message.getOptionalFloatingPointField(msg, 4),
    totaleffectharm: jspb.Message.getField(msg, 5),
    totalshotnum: jspb.Message.getField(msg, 6),
    survivetime: jspb.Message.getField(msg, 7),
    totaldistance: jspb.Message.getOptionalFloatingPointField(msg, 8),
    attacknum: jspb.Message.getField(msg, 9),
    recovernum: jspb.Message.getField(msg, 10),
    revivenum: jspb.Message.getField(msg, 11),
    headshotnum: jspb.Message.getField(msg, 12),
    daybattlenum: jspb.Message.getField(msg, 13),
    nowtime: jspb.Message.getField(msg, 14),
    totalrank: jspb.Message.getField(msg, 15),
    servertype: jspb.Message.getField(msg, 16),
    tagList: jspb.Message.toObjectList(msg.getTagList(),
    proto.protoMsg.DayTag.toObject, includeInstance),
    id: jspb.Message.getField(msg, 18)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SettleDayData}
 */
proto.protoMsg.SettleDayData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SettleDayData;
  return proto.protoMsg.SettleDayData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SettleDayData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SettleDayData}
 */
proto.protoMsg.SettleDayData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFirstnum(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setToptennum(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setWinrating(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setKillrating(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotaleffectharm(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalshotnum(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSurvivetime(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTotaldistance(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAttacknum(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRecovernum(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRevivenum(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeadshotnum(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDaybattlenum(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setNowtime(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalrank(value);
      break;
    case 16:
      var value = /** @type {string} */ (reader.readString());
      msg.setServertype(value);
      break;
    case 17:
      var value = new proto.protoMsg.DayTag;
      reader.readMessage(value,proto.protoMsg.DayTag.deserializeBinaryFromReader);
      msg.addTag(value);
      break;
    case 18:
      var value = /** @type {string} */ (reader.readString());
      msg.setId(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SettleDayData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SettleDayData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SettleDayData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SettleDayData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeFloat(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeFloat(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeFloat(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeInt64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeString(
      16,
      f
    );
  }
  f = message.getTagList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      17,
      f,
      proto.protoMsg.DayTag.serializeBinaryToWriter
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeString(
      18,
      f
    );
  }
};


/**
 * optional uint32 FirstNum = 1;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getFirstnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setFirstnum = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SettleDayData.prototype.clearFirstnum = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasFirstnum = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 TopTenNum = 2;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getToptennum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setToptennum = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.SettleDayData.prototype.clearToptennum = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasToptennum = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional float WinRating = 3;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getWinrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setWinrating = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.SettleDayData.prototype.clearWinrating = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasWinrating = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional float KillRating = 4;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getKillrating = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setKillrating = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SettleDayData.prototype.clearKillrating = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasKillrating = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 TotalEffectHarm = 5;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getTotaleffectharm = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setTotaleffectharm = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.SettleDayData.prototype.clearTotaleffectharm = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasTotaleffectharm = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 TotalShotNum = 6;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getTotalshotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setTotalshotnum = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.SettleDayData.prototype.clearTotalshotnum = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasTotalshotnum = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 SurviveTime = 7;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getSurvivetime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setSurvivetime = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.SettleDayData.prototype.clearSurvivetime = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasSurvivetime = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional float TotalDistance = 8;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getTotaldistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 8, 0.0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setTotaldistance = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.SettleDayData.prototype.clearTotaldistance = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasTotaldistance = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 AttackNum = 9;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getAttacknum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setAttacknum = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.SettleDayData.prototype.clearAttacknum = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasAttacknum = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 RecoverNum = 10;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getRecovernum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setRecovernum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.SettleDayData.prototype.clearRecovernum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasRecovernum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 Revivenum = 11;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getRevivenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setRevivenum = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.SettleDayData.prototype.clearRevivenum = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasRevivenum = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 HeadShotNum = 12;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getHeadshotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setHeadshotnum = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.SettleDayData.prototype.clearHeadshotnum = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasHeadshotnum = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 DayBattleNum = 13;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getDaybattlenum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setDaybattlenum = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.SettleDayData.prototype.clearDaybattlenum = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasDaybattlenum = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional int64 NowTime = 14;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getNowtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setNowtime = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.SettleDayData.prototype.clearNowtime = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasNowtime = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 TotalRank = 15;
 * @return {number}
 */
proto.protoMsg.SettleDayData.prototype.getTotalrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.SettleDayData.prototype.setTotalrank = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.SettleDayData.prototype.clearTotalrank = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasTotalrank = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional string ServerType = 16;
 * @return {string}
 */
proto.protoMsg.SettleDayData.prototype.getServertype = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 16, ""));
};


/** @param {string} value */
proto.protoMsg.SettleDayData.prototype.setServertype = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.SettleDayData.prototype.clearServertype = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasServertype = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * repeated DayTag Tag = 17;
 * @return {!Array.<!proto.protoMsg.DayTag>}
 */
proto.protoMsg.SettleDayData.prototype.getTagList = function() {
  return /** @type{!Array.<!proto.protoMsg.DayTag>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.DayTag, 17));
};


/** @param {!Array.<!proto.protoMsg.DayTag>} value */
proto.protoMsg.SettleDayData.prototype.setTagList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 17, value);
};


/**
 * @param {!proto.protoMsg.DayTag=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.DayTag}
 */
proto.protoMsg.SettleDayData.prototype.addTag = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 17, opt_value, proto.protoMsg.DayTag, opt_index);
};


proto.protoMsg.SettleDayData.prototype.clearTagList = function() {
  this.setTagList([]);
};


/**
 * optional string id = 18;
 * @return {string}
 */
proto.protoMsg.SettleDayData.prototype.getId = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 18, ""));
};


/** @param {string} value */
proto.protoMsg.SettleDayData.prototype.setId = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.SettleDayData.prototype.clearId = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleDayData.prototype.hasId = function() {
  return jspb.Message.getField(this, 18) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DayTag = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.DayTag, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DayTag.displayName = 'proto.protoMsg.DayTag';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DayTag.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DayTag.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DayTag} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DayTag.toObject = function(includeInstance, msg) {
  var f, obj = {
    tag: jspb.Message.getField(msg, 1)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DayTag}
 */
proto.protoMsg.DayTag.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DayTag;
  return proto.protoMsg.DayTag.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DayTag} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DayTag}
 */
proto.protoMsg.DayTag.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setTag(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DayTag.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DayTag.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DayTag} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DayTag.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
};


/**
 * optional string Tag = 1;
 * @return {string}
 */
proto.protoMsg.DayTag.prototype.getTag = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.DayTag.prototype.setTag = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.DayTag.prototype.clearTag = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DayTag.prototype.hasTag = function() {
  return jspb.Message.getField(this, 1) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DamageDefend = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.DamageDefend, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DamageDefend.displayName = 'proto.protoMsg.DamageDefend';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DamageDefend.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DamageDefend.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DamageDefend} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DamageDefend.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    dam: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DamageDefend}
 */
proto.protoMsg.DamageDefend.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DamageDefend;
  return proto.protoMsg.DamageDefend.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DamageDefend} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DamageDefend}
 */
proto.protoMsg.DamageDefend.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDam(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DamageDefend.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DamageDefend.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DamageDefend} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DamageDefend.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.DamageDefend.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.DamageDefend.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.DamageDefend.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DamageDefend.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 dam = 2;
 * @return {number}
 */
proto.protoMsg.DamageDefend.prototype.getDam = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.DamageDefend.prototype.setDam = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.DamageDefend.prototype.clearDam = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DamageDefend.prototype.hasDam = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ThrowDamageInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.ThrowDamageInfo.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.ThrowDamageInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ThrowDamageInfo.displayName = 'proto.protoMsg.ThrowDamageInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.ThrowDamageInfo.repeatedFields_ = [3];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ThrowDamageInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ThrowDamageInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ThrowDamageInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ThrowDamageInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    center: (f = msg.getCenter()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    baseid: jspb.Message.getField(msg, 2),
    defendsList: jspb.Message.toObjectList(msg.getDefendsList(),
    proto.protoMsg.DamageDefend.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ThrowDamageInfo}
 */
proto.protoMsg.ThrowDamageInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ThrowDamageInfo;
  return proto.protoMsg.ThrowDamageInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ThrowDamageInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ThrowDamageInfo}
 */
proto.protoMsg.ThrowDamageInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setCenter(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    case 3:
      var value = new proto.protoMsg.DamageDefend;
      reader.readMessage(value,proto.protoMsg.DamageDefend.deserializeBinaryFromReader);
      msg.addDefends(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ThrowDamageInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ThrowDamageInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ThrowDamageInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ThrowDamageInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getCenter();
  if (f != null) {
    writer.writeMessage(
      1,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = message.getDefendsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      3,
      f,
      proto.protoMsg.DamageDefend.serializeBinaryToWriter
    );
  }
};


/**
 * optional Vector3 center = 1;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.ThrowDamageInfo.prototype.getCenter = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 1));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.ThrowDamageInfo.prototype.setCenter = function(value) {
  jspb.Message.setWrapperField(this, 1, value);
};


proto.protoMsg.ThrowDamageInfo.prototype.clearCenter = function() {
  this.setCenter(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ThrowDamageInfo.prototype.hasCenter = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 baseid = 2;
 * @return {number}
 */
proto.protoMsg.ThrowDamageInfo.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ThrowDamageInfo.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ThrowDamageInfo.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ThrowDamageInfo.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * repeated DamageDefend defends = 3;
 * @return {!Array.<!proto.protoMsg.DamageDefend>}
 */
proto.protoMsg.ThrowDamageInfo.prototype.getDefendsList = function() {
  return /** @type{!Array.<!proto.protoMsg.DamageDefend>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.DamageDefend, 3));
};


/** @param {!Array.<!proto.protoMsg.DamageDefend>} value */
proto.protoMsg.ThrowDamageInfo.prototype.setDefendsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 3, value);
};


/**
 * @param {!proto.protoMsg.DamageDefend=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.DamageDefend}
 */
proto.protoMsg.ThrowDamageInfo.prototype.addDefends = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 3, opt_value, proto.protoMsg.DamageDefend, opt_index);
};


proto.protoMsg.ThrowDamageInfo.prototype.clearDefendsList = function() {
  this.setDefendsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DoorList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.DoorList.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.DoorList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DoorList.displayName = 'proto.protoMsg.DoorList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.DoorList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DoorList.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DoorList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DoorList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DoorList.toObject = function(includeInstance, msg) {
  var f, obj = {
    doorlistList: jspb.Message.toObjectList(msg.getDoorlistList(),
    proto.protoMsg.DoorData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DoorList}
 */
proto.protoMsg.DoorList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DoorList;
  return proto.protoMsg.DoorList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DoorList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DoorList}
 */
proto.protoMsg.DoorList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.DoorData;
      reader.readMessage(value,proto.protoMsg.DoorData.deserializeBinaryFromReader);
      msg.addDoorlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DoorList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DoorList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DoorList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DoorList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getDoorlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.DoorData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated DoorData doorList = 1;
 * @return {!Array.<!proto.protoMsg.DoorData>}
 */
proto.protoMsg.DoorList.prototype.getDoorlistList = function() {
  return /** @type{!Array.<!proto.protoMsg.DoorData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.DoorData, 1));
};


/** @param {!Array.<!proto.protoMsg.DoorData>} value */
proto.protoMsg.DoorList.prototype.setDoorlistList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.DoorData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.DoorData}
 */
proto.protoMsg.DoorList.prototype.addDoorlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.DoorData, opt_index);
};


proto.protoMsg.DoorList.prototype.clearDoorlistList = function() {
  this.setDoorlistList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.DoorData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.DoorData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.DoorData.displayName = 'proto.protoMsg.DoorData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.DoorData.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.DoorData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.DoorData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DoorData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    pos: (f = msg.getPos()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    state: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.DoorData}
 */
proto.protoMsg.DoorData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.DoorData;
  return proto.protoMsg.DoorData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.DoorData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.DoorData}
 */
proto.protoMsg.DoorData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.DoorData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.DoorData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.DoorData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.DoorData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.DoorData.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.DoorData.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.DoorData.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DoorData.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vector3 pos = 2;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.DoorData.prototype.getPos = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 2));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.DoorData.prototype.setPos = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.protoMsg.DoorData.prototype.clearPos = function() {
  this.setPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DoorData.prototype.hasPos = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 state = 3;
 * @return {number}
 */
proto.protoMsg.DoorData.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.DoorData.prototype.setState = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.DoorData.prototype.clearState = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.DoorData.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.LogItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.LogItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.LogItem.displayName = 'proto.protoMsg.LogItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.LogItem.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.LogItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.LogItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.LogItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    baseid: jspb.Message.getField(msg, 1),
    num: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.LogItem}
 */
proto.protoMsg.LogItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.LogItem;
  return proto.protoMsg.LogItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.LogItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.LogItem}
 */
proto.protoMsg.LogItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBaseid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setNum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.LogItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.LogItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.LogItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.LogItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 baseid = 1;
 * @return {number}
 */
proto.protoMsg.LogItem.prototype.getBaseid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.LogItem.prototype.setBaseid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.LogItem.prototype.clearBaseid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LogItem.prototype.hasBaseid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 num = 2;
 * @return {number}
 */
proto.protoMsg.LogItem.prototype.getNum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.LogItem.prototype.setNum = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.LogItem.prototype.clearNum = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LogItem.prototype.hasNum = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SpaceLogInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SpaceLogInfo.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SpaceLogInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SpaceLogInfo.displayName = 'proto.protoMsg.SpaceLogInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SpaceLogInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SpaceLogInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SpaceLogInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SpaceLogInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SpaceLogInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    itemsList: jspb.Message.toObjectList(msg.getItemsList(),
    proto.protoMsg.LogItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SpaceLogInfo}
 */
proto.protoMsg.SpaceLogInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SpaceLogInfo;
  return proto.protoMsg.SpaceLogInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SpaceLogInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SpaceLogInfo}
 */
proto.protoMsg.SpaceLogInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.LogItem;
      reader.readMessage(value,proto.protoMsg.LogItem.deserializeBinaryFromReader);
      msg.addItems(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SpaceLogInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SpaceLogInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SpaceLogInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SpaceLogInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getItemsList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.LogItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated LogItem items = 1;
 * @return {!Array.<!proto.protoMsg.LogItem>}
 */
proto.protoMsg.SpaceLogInfo.prototype.getItemsList = function() {
  return /** @type{!Array.<!proto.protoMsg.LogItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.LogItem, 1));
};


/** @param {!Array.<!proto.protoMsg.LogItem>} value */
proto.protoMsg.SpaceLogInfo.prototype.setItemsList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.LogItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.LogItem}
 */
proto.protoMsg.SpaceLogInfo.prototype.addItems = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.LogItem, opt_index);
};


proto.protoMsg.SpaceLogInfo.prototype.clearItemsList = function() {
  this.setItemsList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.GuideFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.GuideFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.GuideFlow.displayName = 'proto.protoMsg.GuideFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.GuideFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.GuideFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.GuideFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GuideFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    iguideid: jspb.Message.getField(msg, 16)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.GuideFlow}
 */
proto.protoMsg.GuideFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.GuideFlow;
  return proto.protoMsg.GuideFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.GuideFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.GuideFlow}
 */
proto.protoMsg.GuideFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIguideid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.GuideFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.GuideFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.GuideFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GuideFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.GuideFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.GuideFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.GuideFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.GuideFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.GuideFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.GuideFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.GuideFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.GuideFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.GuideFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.GuideFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.GuideFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.GuideFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.GuideFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.GuideFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.GuideFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.GuideFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.GuideFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.GuideFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.GuideFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.GuideFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.GuideFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.GuideFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.GuideFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.GuideFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.GuideFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.GuideFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.GuideFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.GuideFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.GuideFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 IGuideID = 16;
 * @return {number}
 */
proto.protoMsg.GuideFlow.prototype.getIguideid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.GuideFlow.prototype.setIguideid = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.GuideFlow.prototype.clearIguideid = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GuideFlow.prototype.hasIguideid = function() {
  return jspb.Message.getField(this, 16) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ChatFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ChatFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ChatFlow.displayName = 'proto.protoMsg.ChatFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ChatFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ChatFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ChatFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChatFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    openmic: jspb.Message.getField(msg, 16),
    chattype: jspb.Message.getField(msg, 17),
    msgtype: jspb.Message.getField(msg, 18),
    battleid: jspb.Message.getField(msg, 19)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ChatFlow}
 */
proto.protoMsg.ChatFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ChatFlow;
  return proto.protoMsg.ChatFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ChatFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ChatFlow}
 */
proto.protoMsg.ChatFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOpenmic(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChattype(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMsgtype(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ChatFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ChatFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ChatFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ChatFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ChatFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ChatFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.ChatFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.ChatFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.ChatFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.ChatFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.ChatFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.ChatFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.ChatFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.ChatFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.ChatFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.ChatFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.ChatFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.ChatFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.ChatFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.ChatFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.ChatFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 OpenMic = 16;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getOpenmic = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setOpenmic = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.ChatFlow.prototype.clearOpenmic = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasOpenmic = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 ChatType = 17;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getChattype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setChattype = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.ChatFlow.prototype.clearChattype = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasChattype = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 MsgType = 18;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getMsgtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setMsgtype = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.ChatFlow.prototype.clearMsgtype = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasMsgtype = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint64 BattleID = 19;
 * @return {number}
 */
proto.protoMsg.ChatFlow.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.ChatFlow.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.ChatFlow.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ChatFlow.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 19) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BattleItemFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.BattleItemFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BattleItemFlow.displayName = 'proto.protoMsg.BattleItemFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BattleItemFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BattleItemFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BattleItemFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BattleItemFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    behavetype: jspb.Message.getField(msg, 6),
    addreason: jspb.Message.getField(msg, 7),
    mapid: jspb.Message.getField(msg, 8),
    buildings: jspb.Message.getField(msg, 9),
    itemid: jspb.Message.getField(msg, 10),
    itemlevel: jspb.Message.getField(msg, 11),
    itemplace: jspb.Message.getField(msg, 12),
    itemnum: jspb.Message.getField(msg, 13)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BattleItemFlow}
 */
proto.protoMsg.BattleItemFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BattleItemFlow;
  return proto.protoMsg.BattleItemFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BattleItemFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BattleItemFlow}
 */
proto.protoMsg.BattleItemFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBehavetype(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAddreason(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMapid(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBuildings(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemid(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemlevel(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemplace(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemnum(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BattleItemFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BattleItemFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BattleItemFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BattleItemFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint32(
      13,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.BattleItemFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.BattleItemFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.BattleItemFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.BattleItemFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.BattleItemFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.BattleItemFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 BehaveType = 6;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getBehavetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setBehavetype = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearBehavetype = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasBehavetype = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 AddReason = 7;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getAddreason = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setAddreason = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearAddreason = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasAddreason = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 MapID = 8;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getMapid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setMapid = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearMapid = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasMapid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Buildings = 9;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getBuildings = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setBuildings = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearBuildings = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasBuildings = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 ItemID = 10;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getItemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setItemid = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearItemid = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasItemid = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 ItemLevel = 11;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getItemlevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setItemlevel = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearItemlevel = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasItemlevel = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 ItemPlace = 12;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getItemplace = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setItemplace = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearItemplace = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasItemplace = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint32 ItemNum = 13;
 * @return {number}
 */
proto.protoMsg.BattleItemFlow.prototype.getItemnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.protoMsg.BattleItemFlow.prototype.setItemnum = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.BattleItemFlow.prototype.clearItemnum = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleItemFlow.prototype.hasItemnum = function() {
  return jspb.Message.getField(this, 13) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BattleFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.BattleFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BattleFlow.displayName = 'proto.protoMsg.BattleFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BattleFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BattleFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BattleFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BattleFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    mode: jspb.Message.getField(msg, 16),
    teamtype: jspb.Message.getField(msg, 17),
    teamid: jspb.Message.getField(msg, 18),
    behavetype: jspb.Message.getField(msg, 19),
    battleid: jspb.Message.getField(msg, 20),
    mapidx: jspb.Message.getOptionalFloatingPointField(msg, 21),
    mapidy: jspb.Message.getOptionalFloatingPointField(msg, 22),
    mapidz: jspb.Message.getOptionalFloatingPointField(msg, 23),
    maptype: jspb.Message.getField(msg, 24),
    times: jspb.Message.getField(msg, 25),
    afiemid: jspb.Message.getField(msg, 26),
    beitemid: jspb.Message.getField(msg, 27),
    afitemlevel: jspb.Message.getField(msg, 28),
    beitemlevel: jspb.Message.getField(msg, 29),
    bagitemnum: jspb.Message.getField(msg, 30),
    roundtime: jspb.Message.getField(msg, 31),
    distance: jspb.Message.getOptionalFloatingPointField(msg, 32),
    skybox: jspb.Message.getField(msg, 33)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BattleFlow}
 */
proto.protoMsg.BattleFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BattleFlow;
  return proto.protoMsg.BattleFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BattleFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BattleFlow}
 */
proto.protoMsg.BattleFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMode(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamtype(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBehavetype(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidx(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidy(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidz(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaptype(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimes(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setAfiemid(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBeitemid(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAfitemlevel(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBeitemlevel(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBagitemnum(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRoundtime(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkybox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BattleFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BattleFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BattleFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BattleFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint64(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeFloat(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint32(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint64(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint64(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint64(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint32(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint32(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeInt64(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeFloat(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.BattleFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.BattleFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.BattleFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.BattleFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.BattleFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.BattleFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.BattleFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.BattleFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.BattleFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.BattleFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.BattleFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.BattleFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.BattleFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.BattleFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.BattleFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.BattleFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.BattleFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 Mode = 16;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setMode = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.BattleFlow.prototype.clearMode = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasMode = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 TeamType = 17;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getTeamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setTeamtype = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.BattleFlow.prototype.clearTeamtype = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasTeamtype = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 TeamID = 18;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setTeamid = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.BattleFlow.prototype.clearTeamid = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 BehaveType = 19;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getBehavetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setBehavetype = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.BattleFlow.prototype.clearBehavetype = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasBehavetype = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint64 BattleID = 20;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.BattleFlow.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional float MapIDX = 21;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getMapidx = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setMapidx = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.BattleFlow.prototype.clearMapidx = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasMapidx = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional float MapIDY = 22;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getMapidy = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setMapidy = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.BattleFlow.prototype.clearMapidy = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasMapidy = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional float MapIDZ = 23;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getMapidz = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 23, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setMapidz = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.BattleFlow.prototype.clearMapidz = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasMapidz = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint32 MapType = 24;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getMaptype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setMaptype = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.BattleFlow.prototype.clearMaptype = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasMaptype = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint64 Times = 25;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getTimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setTimes = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.BattleFlow.prototype.clearTimes = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint64 AfIemID = 26;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getAfiemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setAfiemid = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.BattleFlow.prototype.clearAfiemid = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasAfiemid = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint64 BeItemID = 27;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getBeitemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setBeitemid = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.BattleFlow.prototype.clearBeitemid = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasBeitemid = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 AfItemLevel = 28;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getAfitemlevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setAfitemlevel = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.BattleFlow.prototype.clearAfitemlevel = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasAfitemlevel = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 BeItemLevel = 29;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getBeitemlevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setBeitemlevel = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.BattleFlow.prototype.clearBeitemlevel = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasBeitemlevel = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint32 BagItemNum = 30;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getBagitemnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setBagitemnum = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.BattleFlow.prototype.clearBagitemnum = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasBagitemnum = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional int64 RoundTime = 31;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getRoundtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setRoundtime = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.protoMsg.BattleFlow.prototype.clearRoundtime = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasRoundtime = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional float Distance = 32;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getDistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 32, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setDistance = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.protoMsg.BattleFlow.prototype.clearDistance = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasDistance = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 SkyBox = 33;
 * @return {number}
 */
proto.protoMsg.BattleFlow.prototype.getSkybox = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.protoMsg.BattleFlow.prototype.setSkybox = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.protoMsg.BattleFlow.prototype.clearSkybox = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleFlow.prototype.hasSkybox = function() {
  return jspb.Message.getField(this, 33) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BattleResult = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.BattleResult, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BattleResult.displayName = 'proto.protoMsg.BattleResult';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BattleResult.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BattleResult.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BattleResult} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BattleResult.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    mode: jspb.Message.getField(msg, 16),
    teamtype: jspb.Message.getField(msg, 17),
    teamid: jspb.Message.getField(msg, 18),
    battleid: jspb.Message.getField(msg, 19),
    mapidx: jspb.Message.getOptionalFloatingPointField(msg, 20),
    mapidy: jspb.Message.getOptionalFloatingPointField(msg, 21),
    mapidz: jspb.Message.getOptionalFloatingPointField(msg, 22),
    maptype: jspb.Message.getField(msg, 23),
    times: jspb.Message.getField(msg, 24),
    roundtime: jspb.Message.getField(msg, 25),
    resulttype: jspb.Message.getField(msg, 26),
    roundscore: jspb.Message.getOptionalFloatingPointField(msg, 27),
    rank: jspb.Message.getField(msg, 28),
    hurt: jspb.Message.getField(msg, 29),
    cirt: jspb.Message.getField(msg, 30),
    moneyproduce: jspb.Message.getField(msg, 31),
    distance: jspb.Message.getOptionalFloatingPointField(msg, 32),
    skybox: jspb.Message.getField(msg, 33)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BattleResult}
 */
proto.protoMsg.BattleResult.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BattleResult;
  return proto.protoMsg.BattleResult.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BattleResult} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BattleResult}
 */
proto.protoMsg.BattleResult.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMode(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamtype(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidx(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidy(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidz(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMaptype(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTimes(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setRoundtime(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResulttype(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRoundscore(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRank(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHurt(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCirt(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMoneyproduce(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkybox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BattleResult.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BattleResult.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BattleResult} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BattleResult.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint64(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeInt64(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeFloat(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint32(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint32(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeUint32(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeFloat(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.BattleResult.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.BattleResult.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.BattleResult.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.BattleResult.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.BattleResult.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.BattleResult.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.BattleResult.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.BattleResult.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.BattleResult.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.BattleResult.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.BattleResult.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.BattleResult.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.BattleResult.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.BattleResult.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.BattleResult.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.BattleResult.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.BattleResult.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 Mode = 16;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setMode = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.BattleResult.prototype.clearMode = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasMode = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 TeamType = 17;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getTeamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setTeamtype = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.BattleResult.prototype.clearTeamtype = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasTeamtype = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 TeamID = 18;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setTeamid = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.BattleResult.prototype.clearTeamid = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint64 BattleID = 19;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.BattleResult.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional float MapIDX = 20;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getMapidx = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setMapidx = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.BattleResult.prototype.clearMapidx = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasMapidx = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional float MapIDY = 21;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getMapidy = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setMapidy = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.BattleResult.prototype.clearMapidy = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasMapidy = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional float MapIDZ = 22;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getMapidz = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setMapidz = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.BattleResult.prototype.clearMapidz = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasMapidz = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 MapType = 23;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getMaptype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setMaptype = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.BattleResult.prototype.clearMaptype = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasMaptype = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint64 Times = 24;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getTimes = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setTimes = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.BattleResult.prototype.clearTimes = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasTimes = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional int64 RoundTime = 25;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getRoundtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setRoundtime = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.BattleResult.prototype.clearRoundtime = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasRoundtime = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint32 ResultType = 26;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getResulttype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setResulttype = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.BattleResult.prototype.clearResulttype = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasResulttype = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional float RoundScore = 27;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getRoundscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 27, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setRoundscore = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.BattleResult.prototype.clearRoundscore = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasRoundscore = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 Rank = 28;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getRank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setRank = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.BattleResult.prototype.clearRank = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasRank = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 Hurt = 29;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getHurt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setHurt = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.BattleResult.prototype.clearHurt = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasHurt = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint32 Cirt = 30;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getCirt = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setCirt = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.BattleResult.prototype.clearCirt = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasCirt = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional uint32 MoneyProduce = 31;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getMoneyproduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setMoneyproduce = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.protoMsg.BattleResult.prototype.clearMoneyproduce = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasMoneyproduce = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional float Distance = 32;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getDistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 32, 0.0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setDistance = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.protoMsg.BattleResult.prototype.clearDistance = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasDistance = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 SkyBox = 33;
 * @return {number}
 */
proto.protoMsg.BattleResult.prototype.getSkybox = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.protoMsg.BattleResult.prototype.setSkybox = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.protoMsg.BattleResult.prototype.clearSkybox = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BattleResult.prototype.hasSkybox = function() {
  return jspb.Message.getField(this, 33) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.MatchFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.MatchFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.MatchFlow.displayName = 'proto.protoMsg.MatchFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.MatchFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.MatchFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.MatchFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MatchFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    matchtype: jspb.Message.getField(msg, 16),
    matchscene: jspb.Message.getField(msg, 17),
    matchtime: jspb.Message.getField(msg, 18),
    result: jspb.Message.getField(msg, 19),
    realnum: jspb.Message.getField(msg, 20),
    battleid: jspb.Message.getField(msg, 21),
    skybox: jspb.Message.getField(msg, 22)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.MatchFlow}
 */
proto.protoMsg.MatchFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.MatchFlow;
  return proto.protoMsg.MatchFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.MatchFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.MatchFlow}
 */
proto.protoMsg.MatchFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatchtype(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMatchscene(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setMatchtime(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setResult(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRealnum(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSkybox(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.MatchFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.MatchFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.MatchFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MatchFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeInt64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint64(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.MatchFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.MatchFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.MatchFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.MatchFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.MatchFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.MatchFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.MatchFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.MatchFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.MatchFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.MatchFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.MatchFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.MatchFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.MatchFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.MatchFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.MatchFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.MatchFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.MatchFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 MatchType = 16;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getMatchtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setMatchtype = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.MatchFlow.prototype.clearMatchtype = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasMatchtype = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 MatchScene = 17;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getMatchscene = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setMatchscene = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.MatchFlow.prototype.clearMatchscene = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasMatchscene = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional int64 MatchTime = 18;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getMatchtime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setMatchtime = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.MatchFlow.prototype.clearMatchtime = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasMatchtime = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 Result = 19;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getResult = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setResult = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.MatchFlow.prototype.clearResult = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasResult = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 RealNum = 20;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getRealnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setRealnum = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.MatchFlow.prototype.clearRealnum = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasRealnum = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint64 BattleID = 21;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.MatchFlow.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 SkyBox = 22;
 * @return {number}
 */
proto.protoMsg.MatchFlow.prototype.getSkybox = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.protoMsg.MatchFlow.prototype.setSkybox = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.MatchFlow.prototype.clearSkybox = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MatchFlow.prototype.hasSkybox = function() {
  return jspb.Message.getField(this, 22) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.LiveFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.LiveFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.LiveFlow.displayName = 'proto.protoMsg.LiveFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.LiveFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.LiveFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.LiveFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.LiveFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    level: jspb.Message.getField(msg, 8),
    playerfriendsnum: jspb.Message.getField(msg, 9),
    clientversion: jspb.Message.getField(msg, 10),
    systemhardware: jspb.Message.getField(msg, 11),
    telecomoper: jspb.Message.getField(msg, 12),
    network: jspb.Message.getField(msg, 13),
    loginchannel: jspb.Message.getField(msg, 14),
    score: jspb.Message.getOptionalFloatingPointField(msg, 15),
    scorerank: jspb.Message.getField(msg, 16),
    touts: jspb.Message.getField(msg, 17),
    wins: jspb.Message.getField(msg, 18),
    topwins: jspb.Message.getField(msg, 19),
    kd: jspb.Message.getField(msg, 20),
    beatavg: jspb.Message.getField(msg, 21),
    winrate: jspb.Message.getField(msg, 22),
    topwinrate: jspb.Message.getField(msg, 23),
    criticalrate: jspb.Message.getField(msg, 24),
    bestscore: jspb.Message.getOptionalFloatingPointField(msg, 25),
    bestrank: jspb.Message.getField(msg, 26),
    hurtavg: jspb.Message.getField(msg, 27),
    timeavg: jspb.Message.getField(msg, 28),
    distanceavg: jspb.Message.getOptionalFloatingPointField(msg, 29),
    singbestscore: jspb.Message.getOptionalFloatingPointField(msg, 30),
    singbestrank: jspb.Message.getField(msg, 31),
    duobestscore: jspb.Message.getOptionalFloatingPointField(msg, 32),
    duobestrank: jspb.Message.getField(msg, 33),
    squadbestscore: jspb.Message.getOptionalFloatingPointField(msg, 34),
    squadrank: jspb.Message.getField(msg, 35)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.LiveFlow}
 */
proto.protoMsg.LiveFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.LiveFlow;
  return proto.protoMsg.LiveFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.LiveFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.LiveFlow}
 */
proto.protoMsg.LiveFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setScore(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setScorerank(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTouts(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWins(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTopwins(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKd(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBeatavg(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWinrate(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTopwinrate(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCriticalrate(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setBestscore(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setBestrank(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHurtavg(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setTimeavg(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistanceavg(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSingbestscore(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSingbestrank(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDuobestscore(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDuobestrank(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSquadbestscore(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSquadrank(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.LiveFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.LiveFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.LiveFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.LiveFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint32(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeFloat(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeInt64(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeFloat(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeFloat(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeUint32(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeFloat(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeFloat(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeUint32(
      35,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.LiveFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.LiveFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.LiveFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.LiveFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.LiveFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.LiveFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.LiveFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 Level = 8;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.LiveFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 9;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.LiveFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string ClientVersion = 10;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.LiveFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string SystemHardware = 11;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.LiveFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string TelecomOper = 12;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.LiveFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string Network = 13;
 * @return {string}
 */
proto.protoMsg.LiveFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.LiveFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.LiveFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 LoginChannel = 14;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.LiveFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional float Score = 15;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getScore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setScore = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.LiveFlow.prototype.clearScore = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasScore = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 ScoreRank = 16;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getScorerank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setScorerank = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.LiveFlow.prototype.clearScorerank = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasScorerank = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 Touts = 17;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getTouts = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setTouts = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.LiveFlow.prototype.clearTouts = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasTouts = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 Wins = 18;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getWins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setWins = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.LiveFlow.prototype.clearWins = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasWins = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 Topwins = 19;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getTopwins = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setTopwins = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.LiveFlow.prototype.clearTopwins = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasTopwins = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 KD = 20;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getKd = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setKd = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.LiveFlow.prototype.clearKd = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasKd = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 BeatAvg = 21;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getBeatavg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setBeatavg = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.LiveFlow.prototype.clearBeatavg = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasBeatavg = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 WinRate = 22;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getWinrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setWinrate = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.LiveFlow.prototype.clearWinrate = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasWinrate = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 TopWinRate = 23;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getTopwinrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setTopwinrate = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.LiveFlow.prototype.clearTopwinrate = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasTopwinrate = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint32 CriticalRate = 24;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getCriticalrate = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setCriticalrate = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.LiveFlow.prototype.clearCriticalrate = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasCriticalrate = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional float BestScore = 25;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getBestscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 25, 0.0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setBestscore = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.LiveFlow.prototype.clearBestscore = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasBestscore = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint32 BestRank = 26;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getBestrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setBestrank = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.LiveFlow.prototype.clearBestrank = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasBestrank = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint32 HurtAvg = 27;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getHurtavg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setHurtavg = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.LiveFlow.prototype.clearHurtavg = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasHurtavg = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional int64 TimeAvg = 28;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getTimeavg = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setTimeavg = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.LiveFlow.prototype.clearTimeavg = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasTimeavg = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional float DistanceAvg = 29;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getDistanceavg = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 29, 0.0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setDistanceavg = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.LiveFlow.prototype.clearDistanceavg = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasDistanceavg = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional float SingBestScore = 30;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getSingbestscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 30, 0.0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setSingbestscore = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.LiveFlow.prototype.clearSingbestscore = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasSingbestscore = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional uint32 SingBestRank = 31;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getSingbestrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setSingbestrank = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.protoMsg.LiveFlow.prototype.clearSingbestrank = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasSingbestrank = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional float DuoBestScore = 32;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getDuobestscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 32, 0.0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setDuobestscore = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.protoMsg.LiveFlow.prototype.clearDuobestscore = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasDuobestscore = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 DuoBestRank = 33;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getDuobestrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setDuobestrank = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.protoMsg.LiveFlow.prototype.clearDuobestrank = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasDuobestrank = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional float SquadBestScore = 34;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getSquadbestscore = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 34, 0.0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setSquadbestscore = function(value) {
  jspb.Message.setField(this, 34, value);
};


proto.protoMsg.LiveFlow.prototype.clearSquadbestscore = function() {
  jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasSquadbestscore = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional uint32 SquadRank = 35;
 * @return {number}
 */
proto.protoMsg.LiveFlow.prototype.getSquadrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/** @param {number} value */
proto.protoMsg.LiveFlow.prototype.setSquadrank = function(value) {
  jspb.Message.setField(this, 35, value);
};


proto.protoMsg.LiveFlow.prototype.clearSquadrank = function() {
  jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LiveFlow.prototype.hasSquadrank = function() {
  return jspb.Message.getField(this, 35) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.GunFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.GunFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.GunFlow.displayName = 'proto.protoMsg.GunFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.GunFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.GunFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.GunFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GunFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    mode: jspb.Message.getField(msg, 16),
    teamtype: jspb.Message.getField(msg, 17),
    teamid: jspb.Message.getField(msg, 18),
    battleid: jspb.Message.getField(msg, 19),
    mapidx: jspb.Message.getOptionalFloatingPointField(msg, 20),
    mapidy: jspb.Message.getOptionalFloatingPointField(msg, 21),
    mapidz: jspb.Message.getOptionalFloatingPointField(msg, 22),
    gunid: jspb.Message.getField(msg, 23),
    sightid: jspb.Message.getField(msg, 24),
    silenceid: jspb.Message.getField(msg, 25),
    magazineid: jspb.Message.getField(msg, 26),
    distance: jspb.Message.getOptionalFloatingPointField(msg, 27),
    dps: jspb.Message.getField(msg, 28),
    kill: jspb.Message.getField(msg, 29),
    headkill: jspb.Message.getField(msg, 30),
    stockid: jspb.Message.getField(msg, 31),
    handleid: jspb.Message.getField(msg, 32)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.GunFlow}
 */
proto.protoMsg.GunFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.GunFlow;
  return proto.protoMsg.GunFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.GunFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.GunFlow}
 */
proto.protoMsg.GunFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setMode(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamtype(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidx(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidy(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setMapidz(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setGunid(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSightid(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSilenceid(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMagazineid(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDps(value);
      break;
    case 29:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKill(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeadkill(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStockid(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHandleid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.GunFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.GunFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.GunFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.GunFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint64(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint64(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeFloat(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeFloat(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint64(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint32(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeFloat(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeUint32(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint32(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeUint32(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.GunFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.GunFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.GunFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.GunFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.GunFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.GunFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.GunFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.GunFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.GunFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.GunFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.GunFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.GunFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.GunFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.GunFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.GunFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.GunFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.GunFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint64 Mode = 16;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getMode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setMode = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.GunFlow.prototype.clearMode = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasMode = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 TeamType = 17;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getTeamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setTeamtype = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.GunFlow.prototype.clearTeamtype = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasTeamtype = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint64 TeamID = 18;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setTeamid = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.GunFlow.prototype.clearTeamid = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint64 BattleID = 19;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.GunFlow.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional float MapIDX = 20;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getMapidx = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setMapidx = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.GunFlow.prototype.clearMapidx = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasMapidx = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional float MapIDY = 21;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getMapidy = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setMapidy = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.GunFlow.prototype.clearMapidy = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasMapidy = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional float MapIDZ = 22;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getMapidz = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 22, 0.0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setMapidz = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.GunFlow.prototype.clearMapidz = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasMapidz = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint64 GunID = 23;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getGunid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setGunid = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.GunFlow.prototype.clearGunid = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasGunid = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint32 SightID = 24;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getSightid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setSightid = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.GunFlow.prototype.clearSightid = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasSightid = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 SilenceID = 25;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getSilenceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setSilenceid = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.GunFlow.prototype.clearSilenceid = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasSilenceid = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint32 MagazineID = 26;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getMagazineid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setMagazineid = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.GunFlow.prototype.clearMagazineid = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasMagazineid = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional float Distance = 27;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getDistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 27, 0.0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setDistance = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.GunFlow.prototype.clearDistance = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasDistance = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 Dps = 28;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getDps = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setDps = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.GunFlow.prototype.clearDps = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasDps = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional uint32 Kill = 29;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getKill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 29, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setKill = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.GunFlow.prototype.clearKill = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasKill = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint32 HeadKill = 30;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getHeadkill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setHeadkill = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.GunFlow.prototype.clearHeadkill = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasHeadkill = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional uint32 StockID = 31;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getStockid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setStockid = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.protoMsg.GunFlow.prototype.clearStockid = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasStockid = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 HandleID = 32;
 * @return {number}
 */
proto.protoMsg.GunFlow.prototype.getHandleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.protoMsg.GunFlow.prototype.setHandleid = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.protoMsg.GunFlow.prototype.clearHandleid = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.GunFlow.prototype.hasHandleid = function() {
  return jspb.Message.getField(this, 32) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CampFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CampFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CampFlow.displayName = 'proto.protoMsg.CampFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CampFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CampFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CampFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CampFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    stageid: jspb.Message.getField(msg, 16),
    taskid: jspb.Message.getField(msg, 17)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CampFlow}
 */
proto.protoMsg.CampFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CampFlow;
  return proto.protoMsg.CampFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CampFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CampFlow}
 */
proto.protoMsg.CampFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setStageid(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTaskid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CampFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CampFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CampFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CampFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CampFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.CampFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.CampFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.CampFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.CampFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.CampFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.CampFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.CampFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.CampFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.CampFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.CampFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.CampFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.CampFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.CampFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.CampFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.CampFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.CampFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 StageID = 16;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getStageid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setStageid = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.CampFlow.prototype.clearStageid = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasStageid = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 TaskID = 17;
 * @return {number}
 */
proto.protoMsg.CampFlow.prototype.getTaskid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.CampFlow.prototype.setTaskid = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.CampFlow.prototype.clearTaskid = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CampFlow.prototype.hasTaskid = function() {
  return jspb.Message.getField(this, 17) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ShopFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ShopFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ShopFlow.displayName = 'proto.protoMsg.ShopFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ShopFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ShopFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ShopFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ShopFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    shoptype: jspb.Message.getField(msg, 16),
    itemtype: jspb.Message.getField(msg, 17),
    itemid: jspb.Message.getField(msg, 18),
    count: jspb.Message.getField(msg, 19),
    imoneytype: jspb.Message.getField(msg, 20),
    consume: jspb.Message.getField(msg, 21)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ShopFlow}
 */
proto.protoMsg.ShopFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ShopFlow;
  return proto.protoMsg.ShopFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ShopFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ShopFlow}
 */
proto.protoMsg.ShopFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setShoptype(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemtype(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setItemid(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setImoneytype(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setConsume(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ShopFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ShopFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ShopFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ShopFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ShopFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ShopFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.ShopFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.ShopFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.ShopFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.ShopFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.ShopFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.ShopFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.ShopFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.ShopFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.ShopFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.ShopFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.ShopFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.ShopFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.ShopFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.ShopFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.ShopFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 ShopType = 16;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getShoptype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setShoptype = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.ShopFlow.prototype.clearShoptype = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasShoptype = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 ItemType = 17;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getItemtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setItemtype = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.ShopFlow.prototype.clearItemtype = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasItemtype = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 ItemID = 18;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getItemid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setItemid = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.ShopFlow.prototype.clearItemid = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasItemid = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 Count = 19;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setCount = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.ShopFlow.prototype.clearCount = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasCount = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 ImoneyType = 20;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getImoneytype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setImoneytype = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.ShopFlow.prototype.clearImoneytype = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasImoneytype = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 Consume = 21;
 * @return {number}
 */
proto.protoMsg.ShopFlow.prototype.getConsume = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.protoMsg.ShopFlow.prototype.setConsume = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.ShopFlow.prototype.clearConsume = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShopFlow.prototype.hasConsume = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.OperFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.OperFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.OperFlow.displayName = 'proto.protoMsg.OperFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.OperFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.OperFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.OperFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.OperFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    vrolename: jspb.Message.getField(msg, 7),
    vroleprofession: jspb.Message.getField(msg, 8),
    level: jspb.Message.getField(msg, 9),
    playerfriendsnum: jspb.Message.getField(msg, 10),
    clientversion: jspb.Message.getField(msg, 11),
    systemhardware: jspb.Message.getField(msg, 12),
    telecomoper: jspb.Message.getField(msg, 13),
    network: jspb.Message.getField(msg, 14),
    loginchannel: jspb.Message.getField(msg, 15),
    operscene: jspb.Message.getField(msg, 16),
    opertype: jspb.Message.getField(msg, 17),
    firemode: jspb.Message.getField(msg, 18),
    pickmode: jspb.Message.getField(msg, 19),
    quick: jspb.Message.getOptionalFloatingPointField(msg, 20),
    touch: jspb.Message.getOptionalFloatingPointField(msg, 21)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.OperFlow}
 */
proto.protoMsg.OperFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.OperFlow;
  return proto.protoMsg.OperFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.OperFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.OperFlow}
 */
proto.protoMsg.OperFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setVrolename(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setVroleprofession(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayerfriendsnum(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientversion(value);
      break;
    case 12:
      var value = /** @type {string} */ (reader.readString());
      msg.setSystemhardware(value);
      break;
    case 13:
      var value = /** @type {string} */ (reader.readString());
      msg.setTelecomoper(value);
      break;
    case 14:
      var value = /** @type {string} */ (reader.readString());
      msg.setNetwork(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLoginchannel(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOperscene(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setOpertype(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setFiremode(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPickmode(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setQuick(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTouch(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.OperFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.OperFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.OperFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.OperFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeString(
      12,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeString(
      13,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeString(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeFloat(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeFloat(
      21,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.OperFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.OperFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.OperFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.OperFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.OperFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.OperFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string VRoleName = 7;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getVrolename = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setVrolename = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.OperFlow.prototype.clearVrolename = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasVrolename = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 VRoleProfession = 8;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getVroleprofession = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setVroleprofession = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.OperFlow.prototype.clearVroleprofession = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasVroleprofession = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Level = 9;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.OperFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 PlayerFriendsNum = 10;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getPlayerfriendsnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setPlayerfriendsnum = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.OperFlow.prototype.clearPlayerfriendsnum = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasPlayerfriendsnum = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string ClientVersion = 11;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getClientversion = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setClientversion = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.OperFlow.prototype.clearClientversion = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasClientversion = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional string SystemHardware = 12;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getSystemhardware = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 12, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setSystemhardware = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.OperFlow.prototype.clearSystemhardware = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasSystemhardware = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional string TelecomOper = 13;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getTelecomoper = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 13, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setTelecomoper = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.OperFlow.prototype.clearTelecomoper = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasTelecomoper = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional string Network = 14;
 * @return {string}
 */
proto.protoMsg.OperFlow.prototype.getNetwork = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 14, ""));
};


/** @param {string} value */
proto.protoMsg.OperFlow.prototype.setNetwork = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.OperFlow.prototype.clearNetwork = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasNetwork = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 LoginChannel = 15;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getLoginchannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setLoginchannel = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.OperFlow.prototype.clearLoginchannel = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasLoginchannel = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 OperScene = 16;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getOperscene = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setOperscene = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.OperFlow.prototype.clearOperscene = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasOperscene = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 OperType = 17;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getOpertype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setOpertype = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.OperFlow.prototype.clearOpertype = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasOpertype = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 FireMode = 18;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getFiremode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setFiremode = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.OperFlow.prototype.clearFiremode = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasFiremode = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 PickMode = 19;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getPickmode = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setPickmode = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.OperFlow.prototype.clearPickmode = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasPickmode = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional float Quick = 20;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getQuick = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 20, 0.0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setQuick = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.OperFlow.prototype.clearQuick = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasQuick = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional float Touch = 21;
 * @return {number}
 */
proto.protoMsg.OperFlow.prototype.getTouch = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 21, 0.0));
};


/** @param {number} value */
proto.protoMsg.OperFlow.prototype.setTouch = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.OperFlow.prototype.clearTouch = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OperFlow.prototype.hasTouch = function() {
  return jspb.Message.getField(this, 21) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.MoneyFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.MoneyFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.MoneyFlow.displayName = 'proto.protoMsg.MoneyFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.MoneyFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.MoneyFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.MoneyFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MoneyFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    vopenid: jspb.Message.getField(msg, 6),
    level: jspb.Message.getField(msg, 7),
    imoney: jspb.Message.getField(msg, 8),
    reason: jspb.Message.getField(msg, 9),
    addorreduce: jspb.Message.getField(msg, 10),
    imoneytype: jspb.Message.getField(msg, 11)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.MoneyFlow}
 */
proto.protoMsg.MoneyFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.MoneyFlow;
  return proto.protoMsg.MoneyFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.MoneyFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.MoneyFlow}
 */
proto.protoMsg.MoneyFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setVopenid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setLevel(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setImoney(value);
      break;
    case 9:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReason(value);
      break;
    case 10:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAddorreduce(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setImoneytype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.MoneyFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.MoneyFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.MoneyFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MoneyFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeUint32(
      9,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeUint32(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint32(
      11,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.MoneyFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.MoneyFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.MoneyFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.MoneyFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.MoneyFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.MoneyFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.MoneyFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.MoneyFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.MoneyFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.MoneyFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.MoneyFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.MoneyFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.MoneyFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.MoneyFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.MoneyFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string VOpenID = 6;
 * @return {string}
 */
proto.protoMsg.MoneyFlow.prototype.getVopenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.MoneyFlow.prototype.setVopenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.MoneyFlow.prototype.clearVopenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasVopenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 Level = 7;
 * @return {number}
 */
proto.protoMsg.MoneyFlow.prototype.getLevel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.MoneyFlow.prototype.setLevel = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.MoneyFlow.prototype.clearLevel = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasLevel = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 iMoney = 8;
 * @return {number}
 */
proto.protoMsg.MoneyFlow.prototype.getImoney = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.MoneyFlow.prototype.setImoney = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.MoneyFlow.prototype.clearImoney = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasImoney = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional uint32 Reason = 9;
 * @return {number}
 */
proto.protoMsg.MoneyFlow.prototype.getReason = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 9, 0));
};


/** @param {number} value */
proto.protoMsg.MoneyFlow.prototype.setReason = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.MoneyFlow.prototype.clearReason = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasReason = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional uint32 AddOrReduce = 10;
 * @return {number}
 */
proto.protoMsg.MoneyFlow.prototype.getAddorreduce = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 10, 0));
};


/** @param {number} value */
proto.protoMsg.MoneyFlow.prototype.setAddorreduce = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.MoneyFlow.prototype.clearAddorreduce = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasAddorreduce = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint32 iMoneyType = 11;
 * @return {number}
 */
proto.protoMsg.MoneyFlow.prototype.getImoneytype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.protoMsg.MoneyFlow.prototype.setImoneytype = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.MoneyFlow.prototype.clearImoneytype = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MoneyFlow.prototype.hasImoneytype = function() {
  return jspb.Message.getField(this, 11) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SnsFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.SnsFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SnsFlow.displayName = 'proto.protoMsg.SnsFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SnsFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SnsFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SnsFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SnsFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    vgameappid: jspb.Message.getField(msg, 3),
    platid: jspb.Message.getField(msg, 4),
    izoneareaid: jspb.Message.getField(msg, 5),
    actoropenid: jspb.Message.getField(msg, 6),
    count: jspb.Message.getField(msg, 7),
    snstype: jspb.Message.getField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SnsFlow}
 */
proto.protoMsg.SnsFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SnsFlow;
  return proto.protoMsg.SnsFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SnsFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SnsFlow}
 */
proto.protoMsg.SnsFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setVgameappid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setIzoneareaid(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setActoropenid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCount(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSnstype(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SnsFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SnsFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SnsFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SnsFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint32(
      8,
      f
    );
  }
};


/**
 * optional string GameSvrID = 1;
 * @return {string}
 */
proto.protoMsg.SnsFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.SnsFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SnsFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.SnsFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.SnsFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.SnsFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string VGameAppID = 3;
 * @return {string}
 */
proto.protoMsg.SnsFlow.prototype.getVgameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.SnsFlow.prototype.setVgameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.SnsFlow.prototype.clearVgameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasVgameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 PlatID = 4;
 * @return {number}
 */
proto.protoMsg.SnsFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.SnsFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SnsFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 IZoneAreaID = 5;
 * @return {number}
 */
proto.protoMsg.SnsFlow.prototype.getIzoneareaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.SnsFlow.prototype.setIzoneareaid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.SnsFlow.prototype.clearIzoneareaid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasIzoneareaid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string ActorOpenID = 6;
 * @return {string}
 */
proto.protoMsg.SnsFlow.prototype.getActoropenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.SnsFlow.prototype.setActoropenid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.SnsFlow.prototype.clearActoropenid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasActoropenid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 Count = 7;
 * @return {number}
 */
proto.protoMsg.SnsFlow.prototype.getCount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.SnsFlow.prototype.setCount = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.SnsFlow.prototype.clearCount = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasCount = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint32 SnsType = 8;
 * @return {number}
 */
proto.protoMsg.SnsFlow.prototype.getSnstype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.SnsFlow.prototype.setSnstype = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.SnsFlow.prototype.clearSnstype = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SnsFlow.prototype.hasSnstype = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SecGameStartFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.SecGameStartFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SecGameStartFlow.displayName = 'proto.protoMsg.SecGameStartFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SecGameStartFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SecGameStartFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SecGameStartFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SecGameStartFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    gameappid: jspb.Message.getField(msg, 3),
    openid: jspb.Message.getField(msg, 4),
    platid: jspb.Message.getField(msg, 5),
    areaid: jspb.Message.getField(msg, 6),
    zoneid: jspb.Message.getField(msg, 7),
    battleid: jspb.Message.getField(msg, 8),
    clientstarttime: jspb.Message.getField(msg, 9),
    username: jspb.Message.getField(msg, 10),
    picurl: jspb.Message.getField(msg, 11),
    svrusermoney1: jspb.Message.getField(msg, 12),
    svrusermoney2: jspb.Message.getField(msg, 13),
    svrusermoney3: jspb.Message.getField(msg, 14),
    svrroundrank: jspb.Message.getOptionalFloatingPointField(msg, 15),
    svrroundrank1: jspb.Message.getOptionalFloatingPointField(msg, 16),
    svrroundrank2: jspb.Message.getOptionalFloatingPointField(msg, 17),
    svrroundrank3: jspb.Message.getOptionalFloatingPointField(msg, 18),
    svrroleid: jspb.Message.getField(msg, 19),
    svrroletype: jspb.Message.getField(msg, 20),
    svrmapid: jspb.Message.getField(msg, 21),
    svrweatherid: jspb.Message.getField(msg, 22),
    svritemlist: jspb.Message.getField(msg, 23),
    waitstarttime: jspb.Message.getField(msg, 24),
    waitendtime: jspb.Message.getField(msg, 25),
    roletype: jspb.Message.getField(msg, 26),
    mapid: jspb.Message.getField(msg, 27),
    weatherid: jspb.Message.getField(msg, 28),
    itemlist: jspb.Message.getField(msg, 29),
    gametype: jspb.Message.getField(msg, 30),
    teamtype: jspb.Message.getField(msg, 31),
    automatch: jspb.Message.getField(msg, 32),
    playercount: jspb.Message.getField(msg, 33),
    teamid: jspb.Message.getField(msg, 34),
    teamplayer1: jspb.Message.getField(msg, 35),
    teamplayer2: jspb.Message.getField(msg, 36),
    teamplayer3: jspb.Message.getField(msg, 37),
    teamplayer1rank: jspb.Message.getOptionalFloatingPointField(msg, 38),
    teamplayer2rank: jspb.Message.getOptionalFloatingPointField(msg, 39),
    teamplayer3rank: jspb.Message.getOptionalFloatingPointField(msg, 40)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SecGameStartFlow}
 */
proto.protoMsg.SecGameStartFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SecGameStartFlow;
  return proto.protoMsg.SecGameStartFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SecGameStartFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SecGameStartFlow}
 */
proto.protoMsg.SecGameStartFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameappid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setZoneid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientstarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 11:
      var value = /** @type {string} */ (reader.readString());
      msg.setPicurl(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSvrusermoney1(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSvrusermoney2(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSvrusermoney3(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSvrroundrank(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSvrroundrank1(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSvrroundrank2(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setSvrroundrank3(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSvrroleid(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSvrroletype(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSvrmapid(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSvrweatherid(value);
      break;
    case 23:
      var value = /** @type {string} */ (reader.readString());
      msg.setSvritemlist(value);
      break;
    case 24:
      var value = /** @type {string} */ (reader.readString());
      msg.setWaitstarttime(value);
      break;
    case 25:
      var value = /** @type {string} */ (reader.readString());
      msg.setWaitendtime(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoletype(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setMapid(value);
      break;
    case 28:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWeatherid(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setItemlist(value);
      break;
    case 30:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGametype(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamtype(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAutomatch(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlayercount(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamid(value);
      break;
    case 35:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamplayer1(value);
      break;
    case 36:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamplayer2(value);
      break;
    case 37:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamplayer3(value);
      break;
    case 38:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTeamplayer1rank(value);
      break;
    case 39:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTeamplayer2rank(value);
      break;
    case 40:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setTeamplayer3rank(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SecGameStartFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SecGameStartFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SecGameStartFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SecGameStartFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeString(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint64(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeUint64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint64(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeFloat(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeFloat(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeFloat(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeFloat(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint64(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeString(
      23,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeString(
      24,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeString(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeUint32(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint32(
      27,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeUint32(
      28,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeString(
      29,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeUint32(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeUint32(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeUint64(
      34,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeString(
      35,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeString(
      36,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 37));
  if (f != null) {
    writer.writeString(
      37,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 38));
  if (f != null) {
    writer.writeFloat(
      38,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 39));
  if (f != null) {
    writer.writeFloat(
      39,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 40));
  if (f != null) {
    writer.writeFloat(
      40,
      f
    );
  }
};


/**
 * optional string GameSvrId = 1;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string GameAppID = 3;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getGameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setGameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearGameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasGameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string OpenID = 4;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getOpenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setOpenid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearOpenid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasOpenid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 PlatID = 5;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 AreaID = 6;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getAreaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setAreaid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearAreaid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasAreaid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 ZoneID = 7;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getZoneid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setZoneid = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearZoneid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasZoneid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 BattleID = 8;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string ClientStartTime = 9;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getClientstarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setClientstarttime = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearClientstarttime = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasClientstarttime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string UserName = 10;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearUsername = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional string PicUrl = 11;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getPicurl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 11, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setPicurl = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearPicurl = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasPicurl = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint64 SvrUserMoney1 = 12;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrusermoney1 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrusermoney1 = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrusermoney1 = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrusermoney1 = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional uint64 SvrUserMoney2 = 13;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrusermoney2 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrusermoney2 = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrusermoney2 = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrusermoney2 = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint64 SvrUserMoney3 = 14;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrusermoney3 = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrusermoney3 = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrusermoney3 = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrusermoney3 = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional float SvrRoundRank = 15;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrroundrank = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 15, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrroundrank = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrroundrank = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrroundrank = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional float SvrRoundRank1 = 16;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrroundrank1 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 16, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrroundrank1 = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrroundrank1 = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrroundrank1 = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional float SvrRoundRank2 = 17;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrroundrank2 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 17, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrroundrank2 = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrroundrank2 = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrroundrank2 = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional float SvrRoundRank3 = 18;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrroundrank3 = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 18, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrroundrank3 = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrroundrank3 = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrroundrank3 = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint64 SvrRoleID = 19;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrroleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrroleid = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrroleid = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrroleid = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 SvrRoleType = 20;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrroletype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrroletype = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrroletype = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrroletype = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 SvrMapid = 21;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrmapid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrmapid = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrmapid = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrmapid = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 SvrWeatherid = 22;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvrweatherid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvrweatherid = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvrweatherid = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvrweatherid = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional string SvrItemList = 23;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getSvritemlist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 23, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setSvritemlist = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearSvritemlist = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasSvritemlist = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional string WaitStartTime = 24;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getWaitstarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 24, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setWaitstarttime = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearWaitstarttime = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasWaitstarttime = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional string WaitEndTime = 25;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getWaitendtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 25, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setWaitendtime = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearWaitendtime = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasWaitendtime = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional uint32 RoleType = 26;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getRoletype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 26, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setRoletype = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearRoletype = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasRoletype = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint32 Mapid = 27;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getMapid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setMapid = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearMapid = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasMapid = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional uint32 Weatherid = 28;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getWeatherid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 28, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setWeatherid = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearWeatherid = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasWeatherid = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional string ItemList = 29;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getItemlist = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setItemlist = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearItemlist = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasItemlist = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional uint32 GameType = 30;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getGametype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 30, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setGametype = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearGametype = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasGametype = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional uint32 TeamType = 31;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamtype = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamtype = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamtype = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 AutoMatch = 32;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getAutomatch = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setAutomatch = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearAutomatch = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasAutomatch = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 PlayerCount = 33;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getPlayercount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setPlayercount = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearPlayercount = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasPlayercount = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional uint64 TeamID = 34;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamid = function(value) {
  jspb.Message.setField(this, 34, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamid = function() {
  jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional string TeamPlayer1 = 35;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamplayer1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 35, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamplayer1 = function(value) {
  jspb.Message.setField(this, 35, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamplayer1 = function() {
  jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamplayer1 = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional string TeamPlayer2 = 36;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamplayer2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 36, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamplayer2 = function(value) {
  jspb.Message.setField(this, 36, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamplayer2 = function() {
  jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamplayer2 = function() {
  return jspb.Message.getField(this, 36) != null;
};


/**
 * optional string TeamPlayer3 = 37;
 * @return {string}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamplayer3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 37, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamplayer3 = function(value) {
  jspb.Message.setField(this, 37, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamplayer3 = function() {
  jspb.Message.setField(this, 37, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamplayer3 = function() {
  return jspb.Message.getField(this, 37) != null;
};


/**
 * optional float TeamPlayer1Rank = 38;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamplayer1rank = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 38, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamplayer1rank = function(value) {
  jspb.Message.setField(this, 38, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamplayer1rank = function() {
  jspb.Message.setField(this, 38, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamplayer1rank = function() {
  return jspb.Message.getField(this, 38) != null;
};


/**
 * optional float TeamPlayer2Rank = 39;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamplayer2rank = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 39, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamplayer2rank = function(value) {
  jspb.Message.setField(this, 39, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamplayer2rank = function() {
  jspb.Message.setField(this, 39, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamplayer2rank = function() {
  return jspb.Message.getField(this, 39) != null;
};


/**
 * optional float TeamPlayer3Rank = 40;
 * @return {number}
 */
proto.protoMsg.SecGameStartFlow.prototype.getTeamplayer3rank = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 40, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameStartFlow.prototype.setTeamplayer3rank = function(value) {
  jspb.Message.setField(this, 40, value);
};


proto.protoMsg.SecGameStartFlow.prototype.clearTeamplayer3rank = function() {
  jspb.Message.setField(this, 40, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameStartFlow.prototype.hasTeamplayer3rank = function() {
  return jspb.Message.getField(this, 40) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SecGameEndFlow = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.SecGameEndFlow, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SecGameEndFlow.displayName = 'proto.protoMsg.SecGameEndFlow';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SecGameEndFlow.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SecGameEndFlow.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SecGameEndFlow} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SecGameEndFlow.toObject = function(includeInstance, msg) {
  var f, obj = {
    gamesvrid: jspb.Message.getField(msg, 1),
    dteventtime: jspb.Message.getField(msg, 2),
    gameappid: jspb.Message.getField(msg, 3),
    openid: jspb.Message.getField(msg, 4),
    platid: jspb.Message.getField(msg, 5),
    areaid: jspb.Message.getField(msg, 6),
    zoneid: jspb.Message.getField(msg, 7),
    battleid: jspb.Message.getField(msg, 8),
    clientstarttime: jspb.Message.getField(msg, 9),
    username: jspb.Message.getField(msg, 10),
    roleid: jspb.Message.getField(msg, 11),
    roletype: jspb.Message.getField(msg, 12),
    overtime: jspb.Message.getField(msg, 13),
    endtype: jspb.Message.getField(msg, 14),
    killcount: jspb.Message.getField(msg, 15),
    assistscount: jspb.Message.getField(msg, 16),
    dropcount: jspb.Message.getField(msg, 17),
    savecount: jspb.Message.getField(msg, 18),
    reborncount: jspb.Message.getField(msg, 19),
    alivetype: jspb.Message.getField(msg, 20),
    goldget: jspb.Message.getField(msg, 21),
    diamondget: jspb.Message.getField(msg, 22),
    expget: jspb.Message.getField(msg, 23),
    winrank: jspb.Message.getField(msg, 24),
    totalplayers: jspb.Message.getField(msg, 25),
    rankend: jspb.Message.getOptionalFloatingPointField(msg, 26),
    teamid: jspb.Message.getField(msg, 27),
    teamplayer1: jspb.Message.getField(msg, 28),
    teamplayer2: jspb.Message.getField(msg, 29),
    teamplayer3: jspb.Message.getField(msg, 30),
    teamplayer1alivetype: jspb.Message.getField(msg, 31),
    teamplayer2alivetype: jspb.Message.getField(msg, 32),
    teamplayer3alivetype: jspb.Message.getField(msg, 33),
    teamplayer1kill: jspb.Message.getField(msg, 34),
    teamplayer2kill: jspb.Message.getField(msg, 35),
    teamplayer3kill: jspb.Message.getField(msg, 36)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SecGameEndFlow}
 */
proto.protoMsg.SecGameEndFlow.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SecGameEndFlow;
  return proto.protoMsg.SecGameEndFlow.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SecGameEndFlow} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SecGameEndFlow}
 */
proto.protoMsg.SecGameEndFlow.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setGamesvrid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setDteventtime(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setGameappid(value);
      break;
    case 4:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setPlatid(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAreaid(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setZoneid(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setBattleid(value);
      break;
    case 9:
      var value = /** @type {string} */ (reader.readString());
      msg.setClientstarttime(value);
      break;
    case 10:
      var value = /** @type {string} */ (reader.readString());
      msg.setUsername(value);
      break;
    case 11:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setRoleid(value);
      break;
    case 12:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setRoletype(value);
      break;
    case 13:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setOvertime(value);
      break;
    case 14:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setEndtype(value);
      break;
    case 15:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKillcount(value);
      break;
    case 16:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAssistscount(value);
      break;
    case 17:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDropcount(value);
      break;
    case 18:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSavecount(value);
      break;
    case 19:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setReborncount(value);
      break;
    case 20:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setAlivetype(value);
      break;
    case 21:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setGoldget(value);
      break;
    case 22:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDiamondget(value);
      break;
    case 23:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setExpget(value);
      break;
    case 24:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setWinrank(value);
      break;
    case 25:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTotalplayers(value);
      break;
    case 26:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setRankend(value);
      break;
    case 27:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamid(value);
      break;
    case 28:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamplayer1(value);
      break;
    case 29:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamplayer2(value);
      break;
    case 30:
      var value = /** @type {string} */ (reader.readString());
      msg.setTeamplayer3(value);
      break;
    case 31:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamplayer1alivetype(value);
      break;
    case 32:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamplayer2alivetype(value);
      break;
    case 33:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamplayer3alivetype(value);
      break;
    case 34:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamplayer1kill(value);
      break;
    case 35:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamplayer2kill(value);
      break;
    case 36:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setTeamplayer3kill(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SecGameEndFlow.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SecGameEndFlow.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SecGameEndFlow} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SecGameEndFlow.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeString(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeUint32(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeUint64(
      8,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 9));
  if (f != null) {
    writer.writeString(
      9,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 10));
  if (f != null) {
    writer.writeString(
      10,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 11));
  if (f != null) {
    writer.writeUint64(
      11,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 12));
  if (f != null) {
    writer.writeUint32(
      12,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 13));
  if (f != null) {
    writer.writeInt64(
      13,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 14));
  if (f != null) {
    writer.writeUint32(
      14,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 15));
  if (f != null) {
    writer.writeUint32(
      15,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 16));
  if (f != null) {
    writer.writeUint32(
      16,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 17));
  if (f != null) {
    writer.writeUint32(
      17,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 18));
  if (f != null) {
    writer.writeUint32(
      18,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 19));
  if (f != null) {
    writer.writeUint32(
      19,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 20));
  if (f != null) {
    writer.writeUint32(
      20,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 21));
  if (f != null) {
    writer.writeUint32(
      21,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 22));
  if (f != null) {
    writer.writeUint32(
      22,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 23));
  if (f != null) {
    writer.writeUint32(
      23,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 24));
  if (f != null) {
    writer.writeUint32(
      24,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 25));
  if (f != null) {
    writer.writeUint32(
      25,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 26));
  if (f != null) {
    writer.writeFloat(
      26,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 27));
  if (f != null) {
    writer.writeUint64(
      27,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 28));
  if (f != null) {
    writer.writeString(
      28,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 29));
  if (f != null) {
    writer.writeString(
      29,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 30));
  if (f != null) {
    writer.writeString(
      30,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 31));
  if (f != null) {
    writer.writeUint32(
      31,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 32));
  if (f != null) {
    writer.writeUint32(
      32,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 33));
  if (f != null) {
    writer.writeUint32(
      33,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 34));
  if (f != null) {
    writer.writeUint32(
      34,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 35));
  if (f != null) {
    writer.writeUint32(
      35,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 36));
  if (f != null) {
    writer.writeUint32(
      36,
      f
    );
  }
};


/**
 * optional string GameSvrId = 1;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getGamesvrid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setGamesvrid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearGamesvrid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasGamesvrid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string DtEventTime = 2;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getDteventtime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setDteventtime = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearDteventtime = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasDteventtime = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string GameAppID = 3;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getGameappid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setGameappid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearGameappid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasGameappid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional string OpenID = 4;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getOpenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 4, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setOpenid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearOpenid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasOpenid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 PlatID = 5;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getPlatid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setPlatid = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearPlatid = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasPlatid = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 AreaID = 6;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getAreaid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setAreaid = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearAreaid = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasAreaid = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional uint32 ZoneID = 7;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getZoneid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 7, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setZoneid = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearZoneid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasZoneid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional uint64 BattleID = 8;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getBattleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setBattleid = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearBattleid = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasBattleid = function() {
  return jspb.Message.getField(this, 8) != null;
};


/**
 * optional string ClientStartTime = 9;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getClientstarttime = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 9, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setClientstarttime = function(value) {
  jspb.Message.setField(this, 9, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearClientstarttime = function() {
  jspb.Message.setField(this, 9, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasClientstarttime = function() {
  return jspb.Message.getField(this, 9) != null;
};


/**
 * optional string UserName = 10;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getUsername = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 10, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setUsername = function(value) {
  jspb.Message.setField(this, 10, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearUsername = function() {
  jspb.Message.setField(this, 10, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasUsername = function() {
  return jspb.Message.getField(this, 10) != null;
};


/**
 * optional uint64 RoleID = 11;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getRoleid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 11, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setRoleid = function(value) {
  jspb.Message.setField(this, 11, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearRoleid = function() {
  jspb.Message.setField(this, 11, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasRoleid = function() {
  return jspb.Message.getField(this, 11) != null;
};


/**
 * optional uint32 RoleType = 12;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getRoletype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 12, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setRoletype = function(value) {
  jspb.Message.setField(this, 12, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearRoletype = function() {
  jspb.Message.setField(this, 12, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasRoletype = function() {
  return jspb.Message.getField(this, 12) != null;
};


/**
 * optional int64 OverTime = 13;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getOvertime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 13, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setOvertime = function(value) {
  jspb.Message.setField(this, 13, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearOvertime = function() {
  jspb.Message.setField(this, 13, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasOvertime = function() {
  return jspb.Message.getField(this, 13) != null;
};


/**
 * optional uint32 EndType = 14;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getEndtype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 14, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setEndtype = function(value) {
  jspb.Message.setField(this, 14, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearEndtype = function() {
  jspb.Message.setField(this, 14, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasEndtype = function() {
  return jspb.Message.getField(this, 14) != null;
};


/**
 * optional uint32 KillCount = 15;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getKillcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 15, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setKillcount = function(value) {
  jspb.Message.setField(this, 15, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearKillcount = function() {
  jspb.Message.setField(this, 15, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasKillcount = function() {
  return jspb.Message.getField(this, 15) != null;
};


/**
 * optional uint32 AssistsCount = 16;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getAssistscount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 16, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setAssistscount = function(value) {
  jspb.Message.setField(this, 16, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearAssistscount = function() {
  jspb.Message.setField(this, 16, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasAssistscount = function() {
  return jspb.Message.getField(this, 16) != null;
};


/**
 * optional uint32 DropCount = 17;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getDropcount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 17, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setDropcount = function(value) {
  jspb.Message.setField(this, 17, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearDropcount = function() {
  jspb.Message.setField(this, 17, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasDropcount = function() {
  return jspb.Message.getField(this, 17) != null;
};


/**
 * optional uint32 SaveCount = 18;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getSavecount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 18, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setSavecount = function(value) {
  jspb.Message.setField(this, 18, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearSavecount = function() {
  jspb.Message.setField(this, 18, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasSavecount = function() {
  return jspb.Message.getField(this, 18) != null;
};


/**
 * optional uint32 RebornCount = 19;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getReborncount = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 19, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setReborncount = function(value) {
  jspb.Message.setField(this, 19, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearReborncount = function() {
  jspb.Message.setField(this, 19, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasReborncount = function() {
  return jspb.Message.getField(this, 19) != null;
};


/**
 * optional uint32 AliveType = 20;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getAlivetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 20, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setAlivetype = function(value) {
  jspb.Message.setField(this, 20, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearAlivetype = function() {
  jspb.Message.setField(this, 20, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasAlivetype = function() {
  return jspb.Message.getField(this, 20) != null;
};


/**
 * optional uint32 GoldGet = 21;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getGoldget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 21, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setGoldget = function(value) {
  jspb.Message.setField(this, 21, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearGoldget = function() {
  jspb.Message.setField(this, 21, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasGoldget = function() {
  return jspb.Message.getField(this, 21) != null;
};


/**
 * optional uint32 DiamondGet = 22;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getDiamondget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 22, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setDiamondget = function(value) {
  jspb.Message.setField(this, 22, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearDiamondget = function() {
  jspb.Message.setField(this, 22, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasDiamondget = function() {
  return jspb.Message.getField(this, 22) != null;
};


/**
 * optional uint32 ExpGet = 23;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getExpget = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 23, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setExpget = function(value) {
  jspb.Message.setField(this, 23, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearExpget = function() {
  jspb.Message.setField(this, 23, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasExpget = function() {
  return jspb.Message.getField(this, 23) != null;
};


/**
 * optional uint32 WinRank = 24;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getWinrank = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 24, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setWinrank = function(value) {
  jspb.Message.setField(this, 24, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearWinrank = function() {
  jspb.Message.setField(this, 24, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasWinrank = function() {
  return jspb.Message.getField(this, 24) != null;
};


/**
 * optional uint32 TotalPlayers = 25;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTotalplayers = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 25, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTotalplayers = function(value) {
  jspb.Message.setField(this, 25, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTotalplayers = function() {
  jspb.Message.setField(this, 25, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTotalplayers = function() {
  return jspb.Message.getField(this, 25) != null;
};


/**
 * optional float RankEnd = 26;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getRankend = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 26, 0.0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setRankend = function(value) {
  jspb.Message.setField(this, 26, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearRankend = function() {
  jspb.Message.setField(this, 26, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasRankend = function() {
  return jspb.Message.getField(this, 26) != null;
};


/**
 * optional uint64 TeamID = 27;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 27, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamid = function(value) {
  jspb.Message.setField(this, 27, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamid = function() {
  jspb.Message.setField(this, 27, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 27) != null;
};


/**
 * optional string TeamPlayer1 = 28;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer1 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 28, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer1 = function(value) {
  jspb.Message.setField(this, 28, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer1 = function() {
  jspb.Message.setField(this, 28, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer1 = function() {
  return jspb.Message.getField(this, 28) != null;
};


/**
 * optional string TeamPlayer2 = 29;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer2 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 29, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer2 = function(value) {
  jspb.Message.setField(this, 29, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer2 = function() {
  jspb.Message.setField(this, 29, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer2 = function() {
  return jspb.Message.getField(this, 29) != null;
};


/**
 * optional string TeamPlayer3 = 30;
 * @return {string}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer3 = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 30, ""));
};


/** @param {string} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer3 = function(value) {
  jspb.Message.setField(this, 30, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer3 = function() {
  jspb.Message.setField(this, 30, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer3 = function() {
  return jspb.Message.getField(this, 30) != null;
};


/**
 * optional uint32 TeamPlayer1AliveType = 31;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer1alivetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 31, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer1alivetype = function(value) {
  jspb.Message.setField(this, 31, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer1alivetype = function() {
  jspb.Message.setField(this, 31, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer1alivetype = function() {
  return jspb.Message.getField(this, 31) != null;
};


/**
 * optional uint32 TeamPlayer2AliveType = 32;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer2alivetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 32, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer2alivetype = function(value) {
  jspb.Message.setField(this, 32, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer2alivetype = function() {
  jspb.Message.setField(this, 32, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer2alivetype = function() {
  return jspb.Message.getField(this, 32) != null;
};


/**
 * optional uint32 TeamPlayer3AliveType = 33;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer3alivetype = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 33, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer3alivetype = function(value) {
  jspb.Message.setField(this, 33, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer3alivetype = function() {
  jspb.Message.setField(this, 33, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer3alivetype = function() {
  return jspb.Message.getField(this, 33) != null;
};


/**
 * optional uint32 TeamPlayer1Kill = 34;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer1kill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 34, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer1kill = function(value) {
  jspb.Message.setField(this, 34, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer1kill = function() {
  jspb.Message.setField(this, 34, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer1kill = function() {
  return jspb.Message.getField(this, 34) != null;
};


/**
 * optional uint32 TeamPlayer2Kill = 35;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer2kill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 35, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer2kill = function(value) {
  jspb.Message.setField(this, 35, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer2kill = function() {
  jspb.Message.setField(this, 35, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer2kill = function() {
  return jspb.Message.getField(this, 35) != null;
};


/**
 * optional uint32 TeamPlayer3Kill = 36;
 * @return {number}
 */
proto.protoMsg.SecGameEndFlow.prototype.getTeamplayer3kill = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 36, 0));
};


/** @param {number} value */
proto.protoMsg.SecGameEndFlow.prototype.setTeamplayer3kill = function(value) {
  jspb.Message.setField(this, 36, value);
};


proto.protoMsg.SecGameEndFlow.prototype.clearTeamplayer3kill = function() {
  jspb.Message.setField(this, 36, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SecGameEndFlow.prototype.hasTeamplayer3kill = function() {
  return jspb.Message.getField(this, 36) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ShareRMBMoney = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ShareRMBMoney, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ShareRMBMoney.displayName = 'proto.protoMsg.ShareRMBMoney';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ShareRMBMoney.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ShareRMBMoney.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ShareRMBMoney} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ShareRMBMoney.toObject = function(includeInstance, msg) {
  var f, obj = {
    openid: jspb.Message.getField(msg, 1),
    channel: jspb.Message.getField(msg, 2),
    accesstoken: jspb.Message.getField(msg, 3),
    actid: jspb.Message.getField(msg, 4),
    ret: jspb.Message.getField(msg, 5),
    msg: jspb.Message.getField(msg, 6),
    boxid: jspb.Message.getField(msg, 7),
    url: jspb.Message.getField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ShareRMBMoney}
 */
proto.protoMsg.ShareRMBMoney.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ShareRMBMoney;
  return proto.protoMsg.ShareRMBMoney.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ShareRMBMoney} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ShareRMBMoney}
 */
proto.protoMsg.ShareRMBMoney.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {string} */ (reader.readString());
      msg.setOpenid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setChannel(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setAccesstoken(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setActid(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setRet(value);
      break;
    case 6:
      var value = /** @type {string} */ (reader.readString());
      msg.setMsg(value);
      break;
    case 7:
      var value = /** @type {string} */ (reader.readString());
      msg.setBoxid(value);
      break;
    case 8:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ShareRMBMoney.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ShareRMBMoney.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ShareRMBMoney} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ShareRMBMoney.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {string} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeString(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeInt32(
      5,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeString(
      6,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeString(
      7,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeString(
      8,
      f
    );
  }
};


/**
 * optional string OpenID = 1;
 * @return {string}
 */
proto.protoMsg.ShareRMBMoney.prototype.getOpenid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 1, ""));
};


/** @param {string} value */
proto.protoMsg.ShareRMBMoney.prototype.setOpenid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearOpenid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasOpenid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 Channel = 2;
 * @return {number}
 */
proto.protoMsg.ShareRMBMoney.prototype.getChannel = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ShareRMBMoney.prototype.setChannel = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearChannel = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasChannel = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string AccessToken = 3;
 * @return {string}
 */
proto.protoMsg.ShareRMBMoney.prototype.getAccesstoken = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.ShareRMBMoney.prototype.setAccesstoken = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearAccesstoken = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasAccesstoken = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 ActID = 4;
 * @return {number}
 */
proto.protoMsg.ShareRMBMoney.prototype.getActid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.ShareRMBMoney.prototype.setActid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearActid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasActid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional int32 Ret = 5;
 * @return {number}
 */
proto.protoMsg.ShareRMBMoney.prototype.getRet = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.ShareRMBMoney.prototype.setRet = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearRet = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasRet = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional string Msg = 6;
 * @return {string}
 */
proto.protoMsg.ShareRMBMoney.prototype.getMsg = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 6, ""));
};


/** @param {string} value */
proto.protoMsg.ShareRMBMoney.prototype.setMsg = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearMsg = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasMsg = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional string BoxID = 7;
 * @return {string}
 */
proto.protoMsg.ShareRMBMoney.prototype.getBoxid = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 7, ""));
};


/** @param {string} value */
proto.protoMsg.ShareRMBMoney.prototype.setBoxid = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearBoxid = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasBoxid = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional string Url = 8;
 * @return {string}
 */
proto.protoMsg.ShareRMBMoney.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 8, ""));
};


/** @param {string} value */
proto.protoMsg.ShareRMBMoney.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.ShareRMBMoney.prototype.clearUrl = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ShareRMBMoney.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.OwnGoodsItem = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.OwnGoodsItem, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.OwnGoodsItem.displayName = 'proto.protoMsg.OwnGoodsItem';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.OwnGoodsItem.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.OwnGoodsItem.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.OwnGoodsItem} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.OwnGoodsItem.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    state: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.OwnGoodsItem}
 */
proto.protoMsg.OwnGoodsItem.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.OwnGoodsItem;
  return proto.protoMsg.OwnGoodsItem.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.OwnGoodsItem} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.OwnGoodsItem}
 */
proto.protoMsg.OwnGoodsItem.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setId(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.OwnGoodsItem.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.OwnGoodsItem.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.OwnGoodsItem} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.OwnGoodsItem.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
};


/**
 * optional uint32 id = 1;
 * @return {number}
 */
proto.protoMsg.OwnGoodsItem.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.OwnGoodsItem.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.OwnGoodsItem.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OwnGoodsItem.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 state = 2;
 * @return {number}
 */
proto.protoMsg.OwnGoodsItem.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.OwnGoodsItem.prototype.setState = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.OwnGoodsItem.prototype.clearState = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.OwnGoodsItem.prototype.hasState = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.OwnGoodsInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.OwnGoodsInfo.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.OwnGoodsInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.OwnGoodsInfo.displayName = 'proto.protoMsg.OwnGoodsInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.OwnGoodsInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.OwnGoodsInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.OwnGoodsInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.OwnGoodsInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.OwnGoodsInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.protoMsg.OwnGoodsItem.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.OwnGoodsInfo}
 */
proto.protoMsg.OwnGoodsInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.OwnGoodsInfo;
  return proto.protoMsg.OwnGoodsInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.OwnGoodsInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.OwnGoodsInfo}
 */
proto.protoMsg.OwnGoodsInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.OwnGoodsItem;
      reader.readMessage(value,proto.protoMsg.OwnGoodsItem.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.OwnGoodsInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.OwnGoodsInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.OwnGoodsInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.OwnGoodsInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.OwnGoodsItem.serializeBinaryToWriter
    );
  }
};


/**
 * repeated OwnGoodsItem list = 1;
 * @return {!Array.<!proto.protoMsg.OwnGoodsItem>}
 */
proto.protoMsg.OwnGoodsInfo.prototype.getListList = function() {
  return /** @type{!Array.<!proto.protoMsg.OwnGoodsItem>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.OwnGoodsItem, 1));
};


/** @param {!Array.<!proto.protoMsg.OwnGoodsItem>} value */
proto.protoMsg.OwnGoodsInfo.prototype.setListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.OwnGoodsItem=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.OwnGoodsItem}
 */
proto.protoMsg.OwnGoodsInfo.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.OwnGoodsItem, opt_index);
};


proto.protoMsg.OwnGoodsInfo.prototype.clearListList = function() {
  this.setListList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.MemVoiceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.MemVoiceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.MemVoiceInfo.displayName = 'proto.protoMsg.MemVoiceInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.MemVoiceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.MemVoiceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.MemVoiceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MemVoiceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    memberid: jspb.Message.getField(msg, 1),
    uid: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.MemVoiceInfo}
 */
proto.protoMsg.MemVoiceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.MemVoiceInfo;
  return proto.protoMsg.MemVoiceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.MemVoiceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.MemVoiceInfo}
 */
proto.protoMsg.MemVoiceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readInt32());
      msg.setMemberid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.MemVoiceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.MemVoiceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.MemVoiceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.MemVoiceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeInt32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional int32 MemberId = 1;
 * @return {number}
 */
proto.protoMsg.MemVoiceInfo.prototype.getMemberid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.MemVoiceInfo.prototype.setMemberid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.MemVoiceInfo.prototype.clearMemberid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MemVoiceInfo.prototype.hasMemberid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 Uid = 2;
 * @return {number}
 */
proto.protoMsg.MemVoiceInfo.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.MemVoiceInfo.prototype.setUid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.MemVoiceInfo.prototype.clearUid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.MemVoiceInfo.prototype.hasUid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.TeamVoiceInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.TeamVoiceInfo.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.TeamVoiceInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.TeamVoiceInfo.displayName = 'proto.protoMsg.TeamVoiceInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.TeamVoiceInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.TeamVoiceInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.TeamVoiceInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.TeamVoiceInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.TeamVoiceInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    memberinfosList: jspb.Message.toObjectList(msg.getMemberinfosList(),
    proto.protoMsg.MemVoiceInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.TeamVoiceInfo}
 */
proto.protoMsg.TeamVoiceInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.TeamVoiceInfo;
  return proto.protoMsg.TeamVoiceInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.TeamVoiceInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.TeamVoiceInfo}
 */
proto.protoMsg.TeamVoiceInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.MemVoiceInfo;
      reader.readMessage(value,proto.protoMsg.MemVoiceInfo.deserializeBinaryFromReader);
      msg.addMemberinfos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.TeamVoiceInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.TeamVoiceInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.TeamVoiceInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.TeamVoiceInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getMemberinfosList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.MemVoiceInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated MemVoiceInfo MemberInfos = 1;
 * @return {!Array.<!proto.protoMsg.MemVoiceInfo>}
 */
proto.protoMsg.TeamVoiceInfo.prototype.getMemberinfosList = function() {
  return /** @type{!Array.<!proto.protoMsg.MemVoiceInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.MemVoiceInfo, 1));
};


/** @param {!Array.<!proto.protoMsg.MemVoiceInfo>} value */
proto.protoMsg.TeamVoiceInfo.prototype.setMemberinfosList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.MemVoiceInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.MemVoiceInfo}
 */
proto.protoMsg.TeamVoiceInfo.prototype.addMemberinfos = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.MemVoiceInfo, opt_index);
};


proto.protoMsg.TeamVoiceInfo.prototype.clearMemberinfosList = function() {
  this.setMemberinfosList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SettleMemInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.SettleMemInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SettleMemInfo.displayName = 'proto.protoMsg.SettleMemInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SettleMemInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SettleMemInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SettleMemInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SettleMemInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    name: jspb.Message.getField(msg, 2),
    url: jspb.Message.getField(msg, 3),
    killnum: jspb.Message.getField(msg, 4),
    headshotnum: jspb.Message.getField(msg, 5),
    damagehp: jspb.Message.getField(msg, 6),
    distance: jspb.Message.getOptionalFloatingPointField(msg, 7),
    gametime: jspb.Message.getField(msg, 8)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SettleMemInfo}
 */
proto.protoMsg.SettleMemInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SettleMemInfo;
  return proto.protoMsg.SettleMemInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SettleMemInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SettleMemInfo}
 */
proto.protoMsg.SettleMemInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setName(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setUrl(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setKillnum(value);
      break;
    case 5:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setHeadshotnum(value);
      break;
    case 6:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setDamagehp(value);
      break;
    case 7:
      var value = /** @type {number} */ (reader.readFloat());
      msg.setDistance(value);
      break;
    case 8:
      var value = /** @type {number} */ (reader.readInt64());
      msg.setGametime(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SettleMemInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SettleMemInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SettleMemInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SettleMemInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint32(
      4,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 5));
  if (f != null) {
    writer.writeUint32(
      5,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 6));
  if (f != null) {
    writer.writeUint32(
      6,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 7));
  if (f != null) {
    writer.writeFloat(
      7,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 8));
  if (f != null) {
    writer.writeInt64(
      8,
      f
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.protoMsg.SettleMemInfo.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.SettleMemInfo.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string name = 2;
 * @return {string}
 */
proto.protoMsg.SettleMemInfo.prototype.getName = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.SettleMemInfo.prototype.setName = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearName = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasName = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string url = 3;
 * @return {string}
 */
proto.protoMsg.SettleMemInfo.prototype.getUrl = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.SettleMemInfo.prototype.setUrl = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearUrl = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasUrl = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint32 killnum = 4;
 * @return {number}
 */
proto.protoMsg.SettleMemInfo.prototype.getKillnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.SettleMemInfo.prototype.setKillnum = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearKillnum = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasKillnum = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional uint32 headshotnum = 5;
 * @return {number}
 */
proto.protoMsg.SettleMemInfo.prototype.getHeadshotnum = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 5, 0));
};


/** @param {number} value */
proto.protoMsg.SettleMemInfo.prototype.setHeadshotnum = function(value) {
  jspb.Message.setField(this, 5, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearHeadshotnum = function() {
  jspb.Message.setField(this, 5, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasHeadshotnum = function() {
  return jspb.Message.getField(this, 5) != null;
};


/**
 * optional uint32 damagehp = 6;
 * @return {number}
 */
proto.protoMsg.SettleMemInfo.prototype.getDamagehp = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 6, 0));
};


/** @param {number} value */
proto.protoMsg.SettleMemInfo.prototype.setDamagehp = function(value) {
  jspb.Message.setField(this, 6, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearDamagehp = function() {
  jspb.Message.setField(this, 6, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasDamagehp = function() {
  return jspb.Message.getField(this, 6) != null;
};


/**
 * optional float distance = 7;
 * @return {number}
 */
proto.protoMsg.SettleMemInfo.prototype.getDistance = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 7, 0.0));
};


/** @param {number} value */
proto.protoMsg.SettleMemInfo.prototype.setDistance = function(value) {
  jspb.Message.setField(this, 7, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearDistance = function() {
  jspb.Message.setField(this, 7, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasDistance = function() {
  return jspb.Message.getField(this, 7) != null;
};


/**
 * optional int64 gametime = 8;
 * @return {number}
 */
proto.protoMsg.SettleMemInfo.prototype.getGametime = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 8, 0));
};


/** @param {number} value */
proto.protoMsg.SettleMemInfo.prototype.setGametime = function(value) {
  jspb.Message.setField(this, 8, value);
};


proto.protoMsg.SettleMemInfo.prototype.clearGametime = function() {
  jspb.Message.setField(this, 8, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SettleMemInfo.prototype.hasGametime = function() {
  return jspb.Message.getField(this, 8) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SettleInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SettleInfo.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SettleInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SettleInfo.displayName = 'proto.protoMsg.SettleInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SettleInfo.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SettleInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SettleInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SettleInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SettleInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    listList: jspb.Message.toObjectList(msg.getListList(),
    proto.protoMsg.SettleMemInfo.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SettleInfo}
 */
proto.protoMsg.SettleInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SettleInfo;
  return proto.protoMsg.SettleInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SettleInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SettleInfo}
 */
proto.protoMsg.SettleInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.SettleMemInfo;
      reader.readMessage(value,proto.protoMsg.SettleMemInfo.deserializeBinaryFromReader);
      msg.addList(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SettleInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SettleInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SettleInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SettleInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getListList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.SettleMemInfo.serializeBinaryToWriter
    );
  }
};


/**
 * repeated SettleMemInfo list = 1;
 * @return {!Array.<!proto.protoMsg.SettleMemInfo>}
 */
proto.protoMsg.SettleInfo.prototype.getListList = function() {
  return /** @type{!Array.<!proto.protoMsg.SettleMemInfo>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.SettleMemInfo, 1));
};


/** @param {!Array.<!proto.protoMsg.SettleMemInfo>} value */
proto.protoMsg.SettleInfo.prototype.setListList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.SettleMemInfo=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.SettleMemInfo}
 */
proto.protoMsg.SettleInfo.prototype.addList = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.SettleMemInfo, opt_index);
};


proto.protoMsg.SettleInfo.prototype.clearListList = function() {
  this.setListList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.LobboySceneMemberSlot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.LobboySceneMemberSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.LobboySceneMemberSlot.displayName = 'proto.protoMsg.LobboySceneMemberSlot';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.LobboySceneMemberSlot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.LobboySceneMemberSlot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.LobboySceneMemberSlot.toObject = function(includeInstance, msg) {
  var f, obj = {
    uid: jspb.Message.getField(msg, 1),
    slotidx: jspb.Message.getField(msg, 2),
    rolemodel: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.LobboySceneMemberSlot}
 */
proto.protoMsg.LobboySceneMemberSlot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.LobboySceneMemberSlot;
  return proto.protoMsg.LobboySceneMemberSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.LobboySceneMemberSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.LobboySceneMemberSlot}
 */
proto.protoMsg.LobboySceneMemberSlot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setUid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlotidx(value);
      break;
    case 3:
      var value = /** @type {string} */ (reader.readString());
      msg.setRolemodel(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.LobboySceneMemberSlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.LobboySceneMemberSlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.LobboySceneMemberSlot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint32(
      2,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeString(
      3,
      f
    );
  }
};


/**
 * optional uint64 uid = 1;
 * @return {number}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.getUid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.LobboySceneMemberSlot.prototype.setUid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.LobboySceneMemberSlot.prototype.clearUid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.hasUid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint32 slotIdx = 2;
 * @return {number}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.getSlotidx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.LobboySceneMemberSlot.prototype.setSlotidx = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.LobboySceneMemberSlot.prototype.clearSlotidx = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.hasSlotidx = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional string roleModel = 3;
 * @return {string}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.getRolemodel = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 3, ""));
};


/** @param {string} value */
proto.protoMsg.LobboySceneMemberSlot.prototype.setRolemodel = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.LobboySceneMemberSlot.prototype.clearRolemodel = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.LobboySceneMemberSlot.prototype.hasRolemodel = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.SyncLobboySceneMembersSlotsInfo.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.SyncLobboySceneMembersSlotsInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.SyncLobboySceneMembersSlotsInfo.displayName = 'proto.protoMsg.SyncLobboySceneMembersSlotsInfo';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.repeatedFields_ = [2];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.SyncLobboySceneMembersSlotsInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.SyncLobboySceneMembersSlotsInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    soltlistList: jspb.Message.toObjectList(msg.getSoltlistList(),
    proto.protoMsg.LobboySceneMemberSlot.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.SyncLobboySceneMembersSlotsInfo}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.SyncLobboySceneMembersSlotsInfo;
  return proto.protoMsg.SyncLobboySceneMembersSlotsInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.SyncLobboySceneMembersSlotsInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.SyncLobboySceneMembersSlotsInfo}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.protoMsg.LobboySceneMemberSlot;
      reader.readMessage(value,proto.protoMsg.LobboySceneMemberSlot.deserializeBinaryFromReader);
      msg.addSoltlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.SyncLobboySceneMembersSlotsInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.SyncLobboySceneMembersSlotsInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSoltlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      2,
      f,
      proto.protoMsg.LobboySceneMemberSlot.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * repeated LobboySceneMemberSlot soltList = 2;
 * @return {!Array.<!proto.protoMsg.LobboySceneMemberSlot>}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.getSoltlistList = function() {
  return /** @type{!Array.<!proto.protoMsg.LobboySceneMemberSlot>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.LobboySceneMemberSlot, 2));
};


/** @param {!Array.<!proto.protoMsg.LobboySceneMemberSlot>} value */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.setSoltlistList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 2, value);
};


/**
 * @param {!proto.protoMsg.LobboySceneMemberSlot=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.LobboySceneMemberSlot}
 */
proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.addSoltlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 2, opt_value, proto.protoMsg.LobboySceneMemberSlot, opt_index);
};


proto.protoMsg.SyncLobboySceneMembersSlotsInfo.prototype.clearSoltlistList = function() {
  this.setSoltlistList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ReqChangeLobboySceneMemberSlot, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ReqChangeLobboySceneMemberSlot.displayName = 'proto.protoMsg.ReqChangeLobboySceneMemberSlot';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ReqChangeLobboySceneMemberSlot.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ReqChangeLobboySceneMemberSlot} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.toObject = function(includeInstance, msg) {
  var f, obj = {
    slotidx: jspb.Message.getField(msg, 1),
    teamid: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ReqChangeLobboySceneMemberSlot}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ReqChangeLobboySceneMemberSlot;
  return proto.protoMsg.ReqChangeLobboySceneMemberSlot.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ReqChangeLobboySceneMemberSlot} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ReqChangeLobboySceneMemberSlot}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setSlotidx(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setTeamid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ReqChangeLobboySceneMemberSlot.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ReqChangeLobboySceneMemberSlot} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 slotIdx = 1;
 * @return {number}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.getSlotidx = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.setSlotidx = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.clearSlotidx = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.hasSlotidx = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 teamID = 2;
 * @return {number}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.getTeamid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.setTeamid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.clearTeamid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ReqChangeLobboySceneMemberSlot.prototype.hasTeamid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BarrierList = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, proto.protoMsg.BarrierList.repeatedFields_, null);
};
goog.inherits(proto.protoMsg.BarrierList, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BarrierList.displayName = 'proto.protoMsg.BarrierList';
}
/**
 * List of repeated fields within this message type.
 * @private {!Array<number>}
 * @const
 */
proto.protoMsg.BarrierList.repeatedFields_ = [1];



if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BarrierList.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BarrierList.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BarrierList} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BarrierList.toObject = function(includeInstance, msg) {
  var f, obj = {
    barrierlistList: jspb.Message.toObjectList(msg.getBarrierlistList(),
    proto.protoMsg.BarrierData.toObject, includeInstance)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BarrierList}
 */
proto.protoMsg.BarrierList.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BarrierList;
  return proto.protoMsg.BarrierList.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BarrierList} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BarrierList}
 */
proto.protoMsg.BarrierList.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = new proto.protoMsg.BarrierData;
      reader.readMessage(value,proto.protoMsg.BarrierData.deserializeBinaryFromReader);
      msg.addBarrierlist(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BarrierList.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BarrierList.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BarrierList} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BarrierList.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = message.getBarrierlistList();
  if (f.length > 0) {
    writer.writeRepeatedMessage(
      1,
      f,
      proto.protoMsg.BarrierData.serializeBinaryToWriter
    );
  }
};


/**
 * repeated BarrierData barrierList = 1;
 * @return {!Array.<!proto.protoMsg.BarrierData>}
 */
proto.protoMsg.BarrierList.prototype.getBarrierlistList = function() {
  return /** @type{!Array.<!proto.protoMsg.BarrierData>} */ (
    jspb.Message.getRepeatedWrapperField(this, proto.protoMsg.BarrierData, 1));
};


/** @param {!Array.<!proto.protoMsg.BarrierData>} value */
proto.protoMsg.BarrierList.prototype.setBarrierlistList = function(value) {
  jspb.Message.setRepeatedWrapperField(this, 1, value);
};


/**
 * @param {!proto.protoMsg.BarrierData=} opt_value
 * @param {number=} opt_index
 * @return {!proto.protoMsg.BarrierData}
 */
proto.protoMsg.BarrierList.prototype.addBarrierlist = function(opt_value, opt_index) {
  return jspb.Message.addToRepeatedWrapperField(this, 1, opt_value, proto.protoMsg.BarrierData, opt_index);
};


proto.protoMsg.BarrierList.prototype.clearBarrierlistList = function() {
  this.setBarrierlistList([]);
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.BarrierData = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.BarrierData, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.BarrierData.displayName = 'proto.protoMsg.BarrierData';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.BarrierData.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.BarrierData.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.BarrierData} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BarrierData.toObject = function(includeInstance, msg) {
  var f, obj = {
    id: jspb.Message.getField(msg, 1),
    pos: (f = msg.getPos()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    state: jspb.Message.getField(msg, 3)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.BarrierData}
 */
proto.protoMsg.BarrierData.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.BarrierData;
  return proto.protoMsg.BarrierData.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.BarrierData} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.BarrierData}
 */
proto.protoMsg.BarrierData.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setId(value);
      break;
    case 2:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setState(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.BarrierData.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.BarrierData.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.BarrierData} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.BarrierData.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint32(
      3,
      f
    );
  }
};


/**
 * optional uint64 id = 1;
 * @return {number}
 */
proto.protoMsg.BarrierData.prototype.getId = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.BarrierData.prototype.setId = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.BarrierData.prototype.clearId = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BarrierData.prototype.hasId = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional Vector3 pos = 2;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.BarrierData.prototype.getPos = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 2));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.BarrierData.prototype.setPos = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.protoMsg.BarrierData.prototype.clearPos = function() {
  this.setPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BarrierData.prototype.hasPos = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint32 state = 3;
 * @return {number}
 */
proto.protoMsg.BarrierData.prototype.getState = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.BarrierData.prototype.setState = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.BarrierData.prototype.clearState = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.BarrierData.prototype.hasState = function() {
  return jspb.Message.getField(this, 3) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.RectInfo = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.RectInfo, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.RectInfo.displayName = 'proto.protoMsg.RectInfo';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.RectInfo.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.RectInfo.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.RectInfo} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RectInfo.toObject = function(includeInstance, msg) {
  var f, obj = {
    xmin: jspb.Message.getOptionalFloatingPointField(msg, 1),
    xmax: jspb.Message.getOptionalFloatingPointField(msg, 2),
    ymin: jspb.Message.getOptionalFloatingPointField(msg, 3),
    ymax: jspb.Message.getOptionalFloatingPointField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.RectInfo}
 */
proto.protoMsg.RectInfo.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.RectInfo;
  return proto.protoMsg.RectInfo.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.RectInfo} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.RectInfo}
 */
proto.protoMsg.RectInfo.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setXmin(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setXmax(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYmin(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readDouble());
      msg.setYmax(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.RectInfo.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.RectInfo.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.RectInfo} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.RectInfo.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeDouble(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeDouble(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeDouble(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeDouble(
      4,
      f
    );
  }
};


/**
 * optional double xmin = 1;
 * @return {number}
 */
proto.protoMsg.RectInfo.prototype.getXmin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 1, 0.0));
};


/** @param {number} value */
proto.protoMsg.RectInfo.prototype.setXmin = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.RectInfo.prototype.clearXmin = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RectInfo.prototype.hasXmin = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional double xmax = 2;
 * @return {number}
 */
proto.protoMsg.RectInfo.prototype.getXmax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 2, 0.0));
};


/** @param {number} value */
proto.protoMsg.RectInfo.prototype.setXmax = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.RectInfo.prototype.clearXmax = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RectInfo.prototype.hasXmax = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional double ymin = 3;
 * @return {number}
 */
proto.protoMsg.RectInfo.prototype.getYmin = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 3, 0.0));
};


/** @param {number} value */
proto.protoMsg.RectInfo.prototype.setYmin = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.RectInfo.prototype.clearYmin = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RectInfo.prototype.hasYmin = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional double ymax = 4;
 * @return {number}
 */
proto.protoMsg.RectInfo.prototype.getYmax = function() {
  return /** @type {number} */ (+jspb.Message.getFieldWithDefault(this, 4, 0.0));
};


/** @param {number} value */
proto.protoMsg.RectInfo.prototype.setYmax = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.RectInfo.prototype.clearYmax = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.RectInfo.prototype.hasYmax = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CreateSpaceReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CreateSpaceReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CreateSpaceReq.displayName = 'proto.protoMsg.CreateSpaceReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CreateSpaceReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CreateSpaceReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CreateSpaceReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CreateSpaceReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    cellappindex: jspb.Message.getField(msg, 1),
    srvid: jspb.Message.getField(msg, 2)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CreateSpaceReq}
 */
proto.protoMsg.CreateSpaceReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CreateSpaceReq;
  return proto.protoMsg.CreateSpaceReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CreateSpaceReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CreateSpaceReq}
 */
proto.protoMsg.CreateSpaceReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint32());
      msg.setCellappindex(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrvid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CreateSpaceReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CreateSpaceReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CreateSpaceReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CreateSpaceReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint32(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
};


/**
 * optional uint32 CellappIndex = 1;
 * @return {number}
 */
proto.protoMsg.CreateSpaceReq.prototype.getCellappindex = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.CreateSpaceReq.prototype.setCellappindex = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CreateSpaceReq.prototype.clearCellappindex = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CreateSpaceReq.prototype.hasCellappindex = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 SrvID = 2;
 * @return {number}
 */
proto.protoMsg.CreateSpaceReq.prototype.getSrvid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.CreateSpaceReq.prototype.setSrvid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.CreateSpaceReq.prototype.clearSrvid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CreateSpaceReq.prototype.hasSrvid = function() {
  return jspb.Message.getField(this, 2) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CreateSpaceRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CreateSpaceRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CreateSpaceRet.displayName = 'proto.protoMsg.CreateSpaceRet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CreateSpaceRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CreateSpaceRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CreateSpaceRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CreateSpaceRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    spaceid: jspb.Message.getField(msg, 1),
    srect: (f = msg.getSrect()) && proto.protoMsg.RectInfo.toObject(includeInstance, f),
    cellid: jspb.Message.getField(msg, 3),
    crect: (f = msg.getCrect()) && proto.protoMsg.RectInfo.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CreateSpaceRet}
 */
proto.protoMsg.CreateSpaceRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CreateSpaceRet;
  return proto.protoMsg.CreateSpaceRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CreateSpaceRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CreateSpaceRet}
 */
proto.protoMsg.CreateSpaceRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSpaceid(value);
      break;
    case 2:
      var value = new proto.protoMsg.RectInfo;
      reader.readMessage(value,proto.protoMsg.RectInfo.deserializeBinaryFromReader);
      msg.setSrect(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCellid(value);
      break;
    case 4:
      var value = new proto.protoMsg.RectInfo;
      reader.readMessage(value,proto.protoMsg.RectInfo.deserializeBinaryFromReader);
      msg.setCrect(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CreateSpaceRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CreateSpaceRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CreateSpaceRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CreateSpaceRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getSrect();
  if (f != null) {
    writer.writeMessage(
      2,
      f,
      proto.protoMsg.RectInfo.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = message.getCrect();
  if (f != null) {
    writer.writeMessage(
      4,
      f,
      proto.protoMsg.RectInfo.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 SpaceID = 1;
 * @return {number}
 */
proto.protoMsg.CreateSpaceRet.prototype.getSpaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.CreateSpaceRet.prototype.setSpaceid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CreateSpaceRet.prototype.clearSpaceid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CreateSpaceRet.prototype.hasSpaceid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional RectInfo Srect = 2;
 * @return {?proto.protoMsg.RectInfo}
 */
proto.protoMsg.CreateSpaceRet.prototype.getSrect = function() {
  return /** @type{?proto.protoMsg.RectInfo} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.RectInfo, 2));
};


/** @param {?proto.protoMsg.RectInfo|undefined} value */
proto.protoMsg.CreateSpaceRet.prototype.setSrect = function(value) {
  jspb.Message.setWrapperField(this, 2, value);
};


proto.protoMsg.CreateSpaceRet.prototype.clearSrect = function() {
  this.setSrect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CreateSpaceRet.prototype.hasSrect = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 CellID = 3;
 * @return {number}
 */
proto.protoMsg.CreateSpaceRet.prototype.getCellid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.CreateSpaceRet.prototype.setCellid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.CreateSpaceRet.prototype.clearCellid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CreateSpaceRet.prototype.hasCellid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional RectInfo Crect = 4;
 * @return {?proto.protoMsg.RectInfo}
 */
proto.protoMsg.CreateSpaceRet.prototype.getCrect = function() {
  return /** @type{?proto.protoMsg.RectInfo} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.RectInfo, 4));
};


/** @param {?proto.protoMsg.RectInfo|undefined} value */
proto.protoMsg.CreateSpaceRet.prototype.setCrect = function(value) {
  jspb.Message.setWrapperField(this, 4, value);
};


proto.protoMsg.CreateSpaceRet.prototype.clearCrect = function() {
  this.setCrect(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CreateSpaceRet.prototype.hasCrect = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.ReportCellLoad = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.ReportCellLoad, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.ReportCellLoad.displayName = 'proto.protoMsg.ReportCellLoad';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.ReportCellLoad.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.ReportCellLoad.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.ReportCellLoad} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReportCellLoad.toObject = function(includeInstance, msg) {
  var f, obj = {
    srvid: jspb.Message.getField(msg, 1),
    spaceid: jspb.Message.getField(msg, 2),
    cellloadMap: (f = msg.getCellloadMap()) ? f.toObject(includeInstance, undefined) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.ReportCellLoad}
 */
proto.protoMsg.ReportCellLoad.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.ReportCellLoad;
  return proto.protoMsg.ReportCellLoad.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.ReportCellLoad} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.ReportCellLoad}
 */
proto.protoMsg.ReportCellLoad.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrvid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSpaceid(value);
      break;
    case 3:
      var value = msg.getCellloadMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readUint32);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.ReportCellLoad.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.ReportCellLoad.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.ReportCellLoad} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.ReportCellLoad.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = message.getCellloadMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(3, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeUint32);
  }
};


/**
 * optional uint64 srvID = 1;
 * @return {number}
 */
proto.protoMsg.ReportCellLoad.prototype.getSrvid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.ReportCellLoad.prototype.setSrvid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.ReportCellLoad.prototype.clearSrvid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ReportCellLoad.prototype.hasSrvid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 spaceID = 2;
 * @return {number}
 */
proto.protoMsg.ReportCellLoad.prototype.getSpaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.ReportCellLoad.prototype.setSpaceid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.ReportCellLoad.prototype.clearSpaceid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.ReportCellLoad.prototype.hasSpaceid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * map<uint64, uint32> cellload = 3;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,number>}
 */
proto.protoMsg.ReportCellLoad.prototype.getCellloadMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,number>} */ (
      jspb.Message.getMapField(this, 3, opt_noLazyCreate,
      null));
};


proto.protoMsg.ReportCellLoad.prototype.clearCellloadMap = function() {
  this.getCellloadMap().clear();
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CellInfoReq = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CellInfoReq, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CellInfoReq.displayName = 'proto.protoMsg.CellInfoReq';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CellInfoReq.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CellInfoReq.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CellInfoReq} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CellInfoReq.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getField(msg, 1),
    mapname: jspb.Message.getField(msg, 2),
    pos: (f = msg.getPos()) && proto.protoMsg.Vector3.toObject(includeInstance, f),
    srvid: jspb.Message.getField(msg, 4)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CellInfoReq}
 */
proto.protoMsg.CellInfoReq.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CellInfoReq;
  return proto.protoMsg.CellInfoReq.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CellInfoReq} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CellInfoReq}
 */
proto.protoMsg.CellInfoReq.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {string} */ (reader.readString());
      msg.setMapname(value);
      break;
    case 3:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSrvid(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CellInfoReq.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CellInfoReq.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CellInfoReq} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CellInfoReq.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {string} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeString(
      2,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      3,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
};


/**
 * optional uint64 entityID = 1;
 * @return {number}
 */
proto.protoMsg.CellInfoReq.prototype.getEntityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.CellInfoReq.prototype.setEntityid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CellInfoReq.prototype.clearEntityid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoReq.prototype.hasEntityid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional string mapName = 2;
 * @return {string}
 */
proto.protoMsg.CellInfoReq.prototype.getMapname = function() {
  return /** @type {string} */ (jspb.Message.getFieldWithDefault(this, 2, ""));
};


/** @param {string} value */
proto.protoMsg.CellInfoReq.prototype.setMapname = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.CellInfoReq.prototype.clearMapname = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoReq.prototype.hasMapname = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional Vector3 pos = 3;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.CellInfoReq.prototype.getPos = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 3));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.CellInfoReq.prototype.setPos = function(value) {
  jspb.Message.setWrapperField(this, 3, value);
};


proto.protoMsg.CellInfoReq.prototype.clearPos = function() {
  this.setPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoReq.prototype.hasPos = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 SrvID = 4;
 * @return {number}
 */
proto.protoMsg.CellInfoReq.prototype.getSrvid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.CellInfoReq.prototype.setSrvid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.CellInfoReq.prototype.clearSrvid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoReq.prototype.hasSrvid = function() {
  return jspb.Message.getField(this, 4) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CellInfoRet = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CellInfoRet, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CellInfoRet.displayName = 'proto.protoMsg.CellInfoRet';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CellInfoRet.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CellInfoRet.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CellInfoRet} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CellInfoRet.toObject = function(includeInstance, msg) {
  var f, obj = {
    entityid: jspb.Message.getField(msg, 1),
    spaceid: jspb.Message.getField(msg, 2),
    cellid: jspb.Message.getField(msg, 3),
    cellsrvid: jspb.Message.getField(msg, 4),
    pos: (f = msg.getPos()) && proto.protoMsg.Vector3.toObject(includeInstance, f)
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CellInfoRet}
 */
proto.protoMsg.CellInfoRet.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CellInfoRet;
  return proto.protoMsg.CellInfoRet.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CellInfoRet} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CellInfoRet}
 */
proto.protoMsg.CellInfoRet.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setEntityid(value);
      break;
    case 2:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSpaceid(value);
      break;
    case 3:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCellid(value);
      break;
    case 4:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setCellsrvid(value);
      break;
    case 5:
      var value = new proto.protoMsg.Vector3;
      reader.readMessage(value,proto.protoMsg.Vector3.deserializeBinaryFromReader);
      msg.setPos(value);
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CellInfoRet.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CellInfoRet.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CellInfoRet} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CellInfoRet.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 2));
  if (f != null) {
    writer.writeUint64(
      2,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 3));
  if (f != null) {
    writer.writeUint64(
      3,
      f
    );
  }
  f = /** @type {number} */ (jspb.Message.getField(message, 4));
  if (f != null) {
    writer.writeUint64(
      4,
      f
    );
  }
  f = message.getPos();
  if (f != null) {
    writer.writeMessage(
      5,
      f,
      proto.protoMsg.Vector3.serializeBinaryToWriter
    );
  }
};


/**
 * optional uint64 entityID = 1;
 * @return {number}
 */
proto.protoMsg.CellInfoRet.prototype.getEntityid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.CellInfoRet.prototype.setEntityid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CellInfoRet.prototype.clearEntityid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoRet.prototype.hasEntityid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * optional uint64 spaceID = 2;
 * @return {number}
 */
proto.protoMsg.CellInfoRet.prototype.getSpaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 2, 0));
};


/** @param {number} value */
proto.protoMsg.CellInfoRet.prototype.setSpaceid = function(value) {
  jspb.Message.setField(this, 2, value);
};


proto.protoMsg.CellInfoRet.prototype.clearSpaceid = function() {
  jspb.Message.setField(this, 2, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoRet.prototype.hasSpaceid = function() {
  return jspb.Message.getField(this, 2) != null;
};


/**
 * optional uint64 cellID = 3;
 * @return {number}
 */
proto.protoMsg.CellInfoRet.prototype.getCellid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 3, 0));
};


/** @param {number} value */
proto.protoMsg.CellInfoRet.prototype.setCellid = function(value) {
  jspb.Message.setField(this, 3, value);
};


proto.protoMsg.CellInfoRet.prototype.clearCellid = function() {
  jspb.Message.setField(this, 3, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoRet.prototype.hasCellid = function() {
  return jspb.Message.getField(this, 3) != null;
};


/**
 * optional uint64 cellSrvID = 4;
 * @return {number}
 */
proto.protoMsg.CellInfoRet.prototype.getCellsrvid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 4, 0));
};


/** @param {number} value */
proto.protoMsg.CellInfoRet.prototype.setCellsrvid = function(value) {
  jspb.Message.setField(this, 4, value);
};


proto.protoMsg.CellInfoRet.prototype.clearCellsrvid = function() {
  jspb.Message.setField(this, 4, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoRet.prototype.hasCellsrvid = function() {
  return jspb.Message.getField(this, 4) != null;
};


/**
 * optional Vector3 pos = 5;
 * @return {?proto.protoMsg.Vector3}
 */
proto.protoMsg.CellInfoRet.prototype.getPos = function() {
  return /** @type{?proto.protoMsg.Vector3} */ (
    jspb.Message.getWrapperField(this, proto.protoMsg.Vector3, 5));
};


/** @param {?proto.protoMsg.Vector3|undefined} value */
proto.protoMsg.CellInfoRet.prototype.setPos = function(value) {
  jspb.Message.setWrapperField(this, 5, value);
};


proto.protoMsg.CellInfoRet.prototype.clearPos = function() {
  this.setPos(undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellInfoRet.prototype.hasPos = function() {
  return jspb.Message.getField(this, 5) != null;
};



/**
 * Generated by JsPbCodeGenerator.
 * @param {Array=} opt_data Optional initial data array, typically from a
 * server response, or constructed directly in Javascript. The array is used
 * in place and becomes part of the constructed object. It is not cloned.
 * If no data is provided, the constructed object will be empty, but still
 * valid.
 * @extends {jspb.Message}
 * @constructor
 */
proto.protoMsg.CellChangeNotify = function(opt_data) {
  jspb.Message.initialize(this, opt_data, 0, -1, null, null);
};
goog.inherits(proto.protoMsg.CellChangeNotify, jspb.Message);
if (goog.DEBUG && !COMPILED) {
  proto.protoMsg.CellChangeNotify.displayName = 'proto.protoMsg.CellChangeNotify';
}


if (jspb.Message.GENERATE_TO_OBJECT) {
/**
 * Creates an object representation of this proto suitable for use in Soy templates.
 * Field names that are reserved in JavaScript and will be renamed to pb_name.
 * To access a reserved field use, foo.pb_<name>, eg, foo.pb_default.
 * For the list of reserved names please see:
 *     com.google.apps.jspb.JsClassTemplate.JS_RESERVED_WORDS.
 * @param {boolean=} opt_includeInstance Whether to include the JSPB instance
 *     for transitional soy proto support: http://goto/soy-param-migration
 * @return {!Object}
 */
proto.protoMsg.CellChangeNotify.prototype.toObject = function(opt_includeInstance) {
  return proto.protoMsg.CellChangeNotify.toObject(opt_includeInstance, this);
};


/**
 * Static version of the {@see toObject} method.
 * @param {boolean|undefined} includeInstance Whether to include the JSPB
 *     instance for transitional soy proto support:
 *     http://goto/soy-param-migration
 * @param {!proto.protoMsg.CellChangeNotify} msg The msg instance to transform.
 * @return {!Object}
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CellChangeNotify.toObject = function(includeInstance, msg) {
  var f, obj = {
    spaceid: jspb.Message.getField(msg, 1),
    cellsMap: (f = msg.getCellsMap()) ? f.toObject(includeInstance, proto.protoMsg.RectInfo.toObject) : []
  };

  if (includeInstance) {
    obj.$jspbMessageInstance = msg;
  }
  return obj;
};
}


/**
 * Deserializes binary data (in protobuf wire format).
 * @param {jspb.ByteSource} bytes The bytes to deserialize.
 * @return {!proto.protoMsg.CellChangeNotify}
 */
proto.protoMsg.CellChangeNotify.deserializeBinary = function(bytes) {
  var reader = new jspb.BinaryReader(bytes);
  var msg = new proto.protoMsg.CellChangeNotify;
  return proto.protoMsg.CellChangeNotify.deserializeBinaryFromReader(msg, reader);
};


/**
 * Deserializes binary data (in protobuf wire format) from the
 * given reader into the given message object.
 * @param {!proto.protoMsg.CellChangeNotify} msg The message object to deserialize into.
 * @param {!jspb.BinaryReader} reader The BinaryReader to use.
 * @return {!proto.protoMsg.CellChangeNotify}
 */
proto.protoMsg.CellChangeNotify.deserializeBinaryFromReader = function(msg, reader) {
  while (reader.nextField()) {
    if (reader.isEndGroup()) {
      break;
    }
    var field = reader.getFieldNumber();
    switch (field) {
    case 1:
      var value = /** @type {number} */ (reader.readUint64());
      msg.setSpaceid(value);
      break;
    case 2:
      var value = msg.getCellsMap();
      reader.readMessage(value, function(message, reader) {
        jspb.Map.deserializeBinary(message, reader, jspb.BinaryReader.prototype.readUint64, jspb.BinaryReader.prototype.readMessage, proto.protoMsg.RectInfo.deserializeBinaryFromReader);
         });
      break;
    default:
      reader.skipField();
      break;
    }
  }
  return msg;
};


/**
 * Serializes the message to binary data (in protobuf wire format).
 * @return {!Uint8Array}
 */
proto.protoMsg.CellChangeNotify.prototype.serializeBinary = function() {
  var writer = new jspb.BinaryWriter();
  proto.protoMsg.CellChangeNotify.serializeBinaryToWriter(this, writer);
  return writer.getResultBuffer();
};


/**
 * Serializes the given message to binary data (in protobuf wire
 * format), writing to the given BinaryWriter.
 * @param {!proto.protoMsg.CellChangeNotify} message
 * @param {!jspb.BinaryWriter} writer
 * @suppress {unusedLocalVariables} f is only used for nested messages
 */
proto.protoMsg.CellChangeNotify.serializeBinaryToWriter = function(message, writer) {
  var f = undefined;
  f = /** @type {number} */ (jspb.Message.getField(message, 1));
  if (f != null) {
    writer.writeUint64(
      1,
      f
    );
  }
  f = message.getCellsMap(true);
  if (f && f.getLength() > 0) {
    f.serializeBinary(2, writer, jspb.BinaryWriter.prototype.writeUint64, jspb.BinaryWriter.prototype.writeMessage, proto.protoMsg.RectInfo.serializeBinaryToWriter);
  }
};


/**
 * optional uint64 spaceID = 1;
 * @return {number}
 */
proto.protoMsg.CellChangeNotify.prototype.getSpaceid = function() {
  return /** @type {number} */ (jspb.Message.getFieldWithDefault(this, 1, 0));
};


/** @param {number} value */
proto.protoMsg.CellChangeNotify.prototype.setSpaceid = function(value) {
  jspb.Message.setField(this, 1, value);
};


proto.protoMsg.CellChangeNotify.prototype.clearSpaceid = function() {
  jspb.Message.setField(this, 1, undefined);
};


/**
 * Returns whether this field is set.
 * @return {!boolean}
 */
proto.protoMsg.CellChangeNotify.prototype.hasSpaceid = function() {
  return jspb.Message.getField(this, 1) != null;
};


/**
 * map<uint64, RectInfo> cells = 2;
 * @param {boolean=} opt_noLazyCreate Do not create the map if
 * empty, instead returning `undefined`
 * @return {!jspb.Map<number,!proto.protoMsg.RectInfo>}
 */
proto.protoMsg.CellChangeNotify.prototype.getCellsMap = function(opt_noLazyCreate) {
  return /** @type {!jspb.Map<number,!proto.protoMsg.RectInfo>} */ (
      jspb.Message.getMapField(this, 2, opt_noLazyCreate,
      proto.protoMsg.RectInfo));
};


proto.protoMsg.CellChangeNotify.prototype.clearCellsMap = function() {
  this.getCellsMap().clear();
};


/**
 * @enum {number}
 */
proto.protoMsg.VehicleState = {
  NORMAL: 0,
  FIRE: 1,
  MOVE: 2,
  FUELING: 3
};

goog.object.extend(exports, proto.protoMsg);
